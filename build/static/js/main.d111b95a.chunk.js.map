{"version":3,"sources":["theme.js","serviceWorker.js","languages/index.js","constants/route.js","router/PublicRoute.jsx","redux/auth/actions.js","redux/actions.js","components/Layout/index.style.js","utils/cookie.js","components/Layout/index.jsx","router/PrivateRoute.jsx","constants/image.js","containers/Login/index.style.js","constants/loginType.js","utils/string.js","containers/Register/index.style.js","apis/api.js","apis/auth.js","apis/user.js","apis/groupQuestion.js","apis/question.js","apis/contest.js","apis/upload.js","apis/index.js","containers/Register/register.jsx","containers/Login/Login.jsx","containers/Login/index.jsx","containers/Register/index.jsx","containers/Home/TabDetail/index.style.js","containers/Home/TabDetail/index.jsx","containers/Home/index.style.js","components/LoadingPage/index.jsx","containers/Home/index.jsx","containers/User/index.style.js","containers/User/UserInformation/index.style.js","containers/User/UserInformation/index.jsx","containers/User/ChangePassword/index.style.js","containers/User/ChangePassword/index.jsx","containers/User/index.jsx","components/SearchBox/index.jsx","containers/Contest/ContestModal/index.style.js","utils/date.js","containers/Contest/ContestModal/index.jsx","styles/color.js","containers/Contest/index.style.js","containers/Contest/index.jsx","containers/GroupQuestion/index.style.js","containers/GroupQuestion/GroupQuestionModal/index.style.js","containers/GroupQuestion/GroupQuestionModal/index.jsx","containers/GroupQuestion/index.jsx","data/levelsQuestion.js","containers/Question/QuestionModal/index.style.js","containers/Question/QuestionModal/index.jsx","containers/Question/UploadInfoModal/index.style.js","containers/Question/UploadInfoModal/index.jsx","containers/Question/index.style.js","containers/Question/index.jsx","containers/ExamTest/index.style.js","containers/ExamTest/useUnsavedChangesWarning.js","containers/ExamTest/index.jsx","containers/ExamDetail/index.style.js","containers/ExamDetail/ExamInformation/index.style.js","constants/index.js","containers/ExamDetail/ExamInformation/index.jsx","containers/ExamDetail/ExamRank/index.style.js","containers/ExamDetail/ExamRank/index.jsx","containers/ExamDetail/ExamHistory/index.style.js","containers/ExamDetail/ExamHistory/index.jsx","containers/ExamDetail/index.jsx","utils/handleImage.js","containers/ExamTest/DetailExamResults.jsx","router/appRoutes.js","pages/Login.jsx","pages/Register.jsx","pages/Home.jsx","pages/User.jsx","pages/Contest.jsx","pages/GroupQuestion.jsx","pages/Question.jsx","pages/ExamTest.jsx","pages/ExamDetail.jsx","pages/DetailExamResult.jsx","router/index.jsx","redux/auth/reducer.js","redux/reducer.js","redux/auth/sagas.js","redux/saga.js","redux/store.js","index.jsx"],"names":["initialCustomTheme","createTheme","palette","primary","blue","secondary","lightBlue","active","boxShadow","boxShadow_l1","black","grey","greyWhile","border","l1","typography","fontFamily","overrides","MuiDrawer","paper","position","overflowY","zIndex","drawer","breakpoints","values","xs","sm","md","lg","xl","Boolean","window","location","hostname","match","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enTranslation","vi","viTranslation","fallbackLng","interpolation","escapeValue","nsSeparator","keySeparator","PublicRoute","_ref","Component","restricted","rest","accessToken","useSelector","state","auth","React","createElement","Route","Object","assign","render","props","Redirect","to","routes","actionTypes","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","VERIFY_TOKEN","VERIFY_TOKEN_SUCCESS","VERIFY_TOKEN_FAILURE","LOGOUT","UPDATE_USER","login","loginType","data","type","loginSuccess","user","loginFailure","code","message","verifyToken","verifyTokenSuccess","verifyTokenFailure","logout","updateUser","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","concat","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","textTransform","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","link","textDecoration","color","avatar","listItem","background","setCookie","cname","cvalue","extime","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","name","ca","split","i","length","c","charAt","substring","indexOf","menus","heading","icon","DashboardIcon","route","TimerIcon","AssignmentIcon","PersonIcon","Layout","children","classes","useStyles","open","setOpen","useState","dispatch","useDispatch","userInfo","pathname","useLocation","anchorEl","setAnchorEl","handleOpenMenuHeader","event","currentTarget","handleDrawerClose","useEffect","test","navigator","userAgent","innerWidth","console","log","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","handleDrawerOpen","MenuIcon","Avatar","src","Typography","component","variant","noWrap","Box","alt","Menu","id","keepMounted","onClose","handleCloseMenuHeader","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleLogout","Cookies","remove","actions","Drawer","ChevronLeftIcon","Divider","List","map","el","index","Link","key","ListItem","button","ListItemIcon","ListItemText","Container","maxWidth","PrivateRoute","image","backgroundImage","backgroundRepeat","backgroundColor","backgroundSize","backgroundPosition","margin","main","form","marginTop","submit","divider","validateEmail","email","String","toLowerCase","isImageUrlCheck","str","axiosClient","axios","baseURL","process","responseType","timeout","interceptors","request","async","config","headers","Authorization","response","camelCase","deep","error","password","api","method","url","loginByGoogle","tokenId","loginByFacebook","userID","register","_ref2","verify","deleteUser","changePassword","getGroupQuestions","params","createGroupQuestion","updateGroupQuestions","deleteGroupQuestions","getQuestionsInGroup","limit","offset","sort","fields","groupQuestionId","getQuestion","createQuestion","updateQuestion","deleteQuestion","get","getContests","param","getContestsJoined","getContestsByUser","getContest","createContest","updateContest","deleteContest","verifyPassword","getQuestions","token","mark","_ref3","doTime","contestId","answers","getResultByContest","getResultDetailByContest","getResultByUserInContest","checkAccountRole","_ref4","userId","uploadFile","formData","API","uploadAvatar","groupQuestion","question","contest","upload","Register2","isLogin","handleLoginOrRegister","history","useHistory","enqueueSnackbar","useSnackbar","setUser","userError","setUserError","Grid","item","Paper","elevation","square","LockOutlinedIcon","noValidate","TextField","required","fullWidth","label","autoComplete","value","onChange","e","target","helperText","autoFocus","Button","preventDefault","validateRegister","countError","prev","apis","status","push","justify","Login2","setEmail","emailError","setEmailError","setPassword","passwordError","setPasswordError","isLoggingIn","handleLogin","validateLogin","onKeyPress","googleLogout","mt","gutterBottom","align","GoogleLogin","clientId","onSuccess","res","onError","cookiePolicy","Login","setisLogin","nd","Register","media","date","TabDetail","t","useTranslation","Card","CardHeader","createdBy","action","style","examTime","subheader","CardMedia","imageUrl","CardActions","AccessTimeIcon","fontSize","moment","startTime","format","marginBottom","LoadingPage","contestsDefault","Home","tab","setTab","isLoading","setIsLoading","contests","setContests","contestsJoined","setContestsJoined","result","fetchContests","raw","_templateObject","_taggedTemplateLiteral","Fragment","mb","Tabs","newValue","newContests","filter","endTime","fetchContestsJoined","indicatorColor","textColor","Tab","stepper","buttons","paperImage","input","large","borderRadius","opacity","btnCamera","cursor","top","left","transform","buttonDelete","User","setUserInfo","handleChange","accept","FormData","file","files","append","htmlFor","PhotoCameraIcon","textAlign","disabled","phoneNumber","urlFacebook","urlYoutube","urlWebsite","size","dob","trim","alert","reload","deleteAccount","_id","paddingLeft","ChangePassword","currentPassword","newPassword","confirmNewPassword","UserInformation","renderTab","find","SearchBox","handleSearch","InputProps","startAdornment","InputAdornment","SearchIcon","placeholder","bottom","shadows","outline","listAnswer","textCreateAnswer","listAnswerContent","formControl","getDate","day","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","dateSet","setHours","setMinutes","setSeconds","setDate","setMonth","setYear","renderClockTime","time","hours","Math","floor","minutes","seconds","hoursString","slice","minutesString","secondsString","ContestModal","handleCloseModal","itemSelect","handleUpdateContest","groupQuestions","setContest","handleDateChange","checked","Modal","aria-labelledby","aria-describedby","multiline","rows","description","MuiPickersUtilsProvider","utils","DateFnsUtils","KeyboardDatePicker","inputVariant","KeyboardButtonProps","KeyboardTimePicker","FormControl","InputLabel","Select","labelId","FormControlLabel","control","Checkbox","isActive","mr","validateContest","contestData","newContest","COLOR","100","200","300","400","500","600","700","800","900","textPrimary","fontWeight","accordion","menusToggle","detail","actionBox","row","redStatus","greenStatus","yellowStatus","Contest","openModal","setOpenModal","keySearch","setKeySearch","contestSelect","setContestSelect","setGroupQuestions","pagination","setPagination","rowsPerPage","page","count","metadata","keyword","fetchGroupQuestions","handleClickRow","withStyles","green","startIcon","AddIcon","TableContainer","Table","table","TableHead","TableRow","TableCell","TableBody","Tooltip","LockIcon","stopPropagation","pos","findIndex","splice","handleDeleteContest","DeleteIcon","TablePagination","rowsPerPageOptions","onChangePage","newPage","GroupQuestionModal","handleSave","setState","setGroupQuestion","timeOutId","GroupQuestion","groupQuestionSelected","setGroupQuestionSelected","handleOpenToggle","clearTimeout","setTimeout","ListItemAvatar","ImageIcon","ListItemSecondaryAction","MoreVertIcon","handleCloseToggle","handleOpenEdit","tempGroupQuestions","ele","newGroupQuestions","QuestionModal","handleUpdateQuestion","setQuestion","handleEditAnswer","newAnswers","handleChooseCorrectAnswer","isCorrect","level","LevelsQuestion","DragDropContext","onDragEnd","destination","startIndex","source","endIndex","removed","Droppable","droppableId","provided","RootRef","rootRef","innerRef","Draggable","draggableId","providedItem","snapshotItem","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","RemoveIcon","inputProps","answerData","answerId","mongoid","explain","validateQuestion","newQuestion","UploadInfoModal","CloseIcon","href","Question","useParams","openModalUploadInfo","setOpenModalUploadInfo","questions","setQuestions","questionSelect","setQuestionSelect","fetchQuestions","query","InfoIcon","multiple","readXlsxFile","then","Promise","all","toString","correctAnswer","parseInt","amountAnswer","validateQuestionInExcel","questionData","BackupIcon","body","handleDeleteQuestion","newQuestions","handleCloseUploadInfoModal","questionBox","listQuestionBox","flexWrap","listInfo","questionSquare","fullscreen","prevent_copy_paste","userSelect","answerRow","useUnsavedChangesWarning","arguments","undefined","isDirty","setDirty","onbeforeunload","routerPrompt","Prompt","when","interval","Alert","MuiAlert","ExamTest","URLSearchParams","search","setPristine","setAnswers","questionSelected","setQuestionSelected","timeDoExam","setTimeDoExam","countWarnming","setcountWarnming","countWarnmingF12","setcountWarnmingF12","isMarking","setIsMarking","isFullscreen","setIsFullscreen","openAlert","setOpenAlert","openAlertF12","setOpenAlertF12","isOnline","setIsOnline","isZoomed","setZoomed","handleClose","reason","handleCloseF12","fetchContest","setInterval","now","timeDo","clearInterval","handleStartExam","handleOnline","handleOffline","addEventListener","removeEventListener","examData","amountCorrectQuestion","handleFinishExam","handleBeforeUnload","returnValue","handleKeyDown","ctrlKey","shiftKey","metaKey","textString","imageUrlRegex2","replacedString","replace","forEach","array","handleCopyPaste","onCopy","onPaste","Snackbar","autoHideDuration","severity","SendIcon","FullscreenExitIcon","FullscreenIcon","dangerouslySetInnerHTML","__html","a","b","handleChangeAnswer","borderLeft","PrepareExam","examId","handleRedirectToExamTest","contestToken","renderHappeningStatus","isLock","handleCheckPassword","class","renderByStatus","constants","ExamDetail","role","resultId","results","setResults","numberOfQuestion","setNumberOfQuestion","renderArrayFromNumberQuestion","arr","firstEle","amountQuestion","renderDataChart","resultIndex","fetchResults","Highcharts","chart","renderTo","text","xAxis","categories","yAxis","legend","layout","verticalAlign","borderWidth","itemDistance","series","participant","createdAt","redirectToDetailResult","idContest","idExam","handleChangePage","ExamHistory","fetchResultsByUser","setRole","fetchAccRoleInContest","ExamInformation","minHeight","ExamRank","handleImageQuestion","DetailExamResult","idresultDetail","setidContest","setidExam","choice","setchoice","ansQuestion","setansQuestion","setResult","setparticipant","filteredArray","filteredChoice","toFixed","p","m","CheckCircleOutlineIcon","ErrorIcon","path","LoginContainer","isPrivate","RegisterContainer","HomeContainer","UserContainer","ContestContainer","GroupQuestionContainer","QuestionContainer","ExamTestContainer","ExamDetailContainer","exact","DetailExamResults","verifying","isFirstTime","setIsFirstTime","accessTokenFromCookie","CircularProgress","BrowserRouter","Switch","appRoutes","initialState","loginCode","authInitialState","combineReducers","loginSaga","A_WEEK","JSON","stringify","put","verifyTokenSaga","Error","rootSaga","takeLatest","takeEvery","authSagas","sagaMiddleware","createSagaMiddleware","bindMiddleware","middleware","applyMiddleware","configureStore","preloadedState","store","createStore","rootReducer","runSagaTask","sagaTask","run","ReactDOM","StrictMode","GoogleOAuthProvider","MuiThemeProvider","Provider","SnackbarProvider","Router","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d111b95a.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\nimport { blue, lightBlue, grey } from '@material-ui/core/colors';\r\n\r\nconst initialCustomTheme = createTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: lightBlue,\r\n    active: '#eee',\r\n    boxShadow:\r\n      'rgba(0, 0, 0, 0.42) 0px 10px 30px -12px, rgba(0, 0, 0, 0.12) 0px 4px 25px 0px, rgba(0, 0, 0, 0.2) 0px 8px 10px -5px',\r\n    boxShadow_l1:\r\n      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    black: grey[900],\r\n    greyWhile: '#f5f5f5',\r\n  },\r\n  border: {\r\n    l1: 'solid 1px #ccc',\r\n  },\r\n\r\n  typography: {\r\n    fontFamily: 'Muli',\r\n  },\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        position: 'inherit',\r\n        overflowY: 'inherit',\r\n      },\r\n    },\r\n  },\r\n  zIndex: {\r\n    drawer: 10,\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n});\r\n\r\nexport default initialCustomTheme;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport enTranslation from './locales/en.json';\r\nimport viTranslation from './locales/vi.json';\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: enTranslation,\r\n      },\r\n      vi: {\r\n        translation: viTranslation,\r\n      },\r\n    },\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    nsSeparator: ':::',\r\n    keySeparator: '::',\r\n  });\r\n\r\nexport default i18n;\r\n","export default {\r\n  HOME: '/',\r\n  LOGIN: '/login',\r\n  REGISTER: '/register',\r\n  USER: '/user',\r\n  GROUP_QUESTIONS: '/groupQuestions',\r\n  CONTEST: '/contests',\r\n  QUESTION: '/groupQuestions/:id/questions',\r\n  EXAM_TEST: '/contest/:id/exam/test',\r\n  EXAM_DETAIL: '/contest/:id/exam/detail',\r\n  EXAM_RESULT_DETAIL: '/contest/:id/exam/resultDetail=:idresultDetail',\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport routes from '../constants/route';\r\n\r\nexport default function PublicRoute({ Component, restricted, ...rest }) {\r\n  const accessToken = useSelector((state) => state.auth.accessToken);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        accessToken ? <Redirect to={routes.HOME} /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n}\r\n","export const actionTypes = {\r\n  LOGIN: 'LOGIN',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  VERIFY_TOKEN: 'VERIFY_TOKEN',\r\n  VERIFY_TOKEN_SUCCESS: 'VERIFY_TOKEN_SUCCESS',\r\n  VERIFY_TOKEN_FAILURE: 'VERIFY_TOKEN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n};\r\n\r\nexport function login(loginType, data) {\r\n  return {\r\n    type: actionTypes.LOGIN,\r\n    loginType,\r\n    ...data,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken, user) {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    accessToken,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function loginFailure(code, message) {\r\n  return {\r\n    type: actionTypes.LOGIN_FAILURE,\r\n    code,\r\n    message,\r\n  };\r\n}\r\n\r\nexport function verifyToken(accessToken) {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN,\r\n    accessToken,\r\n  };\r\n}\r\n\r\nexport function verifyTokenSuccess(accessToken, user) {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN_SUCCESS,\r\n    accessToken,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function verifyTokenFailure() {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN_FAILURE,\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return {\r\n    type: actionTypes.LOGOUT,\r\n  };\r\n}\r\n\r\nexport function updateUser(user) {\r\n  return {\r\n    type: actionTypes.UPDATE_USER,\r\n    user,\r\n  };\r\n}\r\n","import * as auth from './auth/actions';\r\n\r\nexport default {\r\n  auth,\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textTransform: 'uppercase',\r\n    marginLeft: 2,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: '#000',\r\n  },\r\n  avatar: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  listItem: {\r\n    background: '#eee',\r\n  },\r\n}));\r\n","export function setCookie(cname, cvalue, extime) {\r\n  const d = new Date();\r\n  d.setTime(d.getTime() + extime);\r\n  const expires = `expires=${d.toUTCString()}`;\r\n  document.cookie = `${cname}=${cvalue};${expires};path=/`;\r\n}\r\n\r\nexport function getCookie(cname) {\r\n  const name = `${cname}=`;\r\n  const ca = document.cookie.split(';');\r\n  for (let i = 0; i < ca.length; i += 1) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  CssBaseline,\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Breadcrumbs,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  ChevronLeft as ChevronLeftIcon,\r\n  Lock as LockIcon,\r\n  Dashboard as DashboardIcon,\r\n  Person as PersonIcon,\r\n  Assignment as AssignmentIcon,\r\n  Timer as TimerIcon,\r\n} from '@material-ui/icons';\r\nimport routes from '../../constants/route';\r\nimport actions from '../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport { setCookie } from '../../utils/cookie';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst menus = [\r\n  {\r\n    heading: 'Trang chủ',\r\n    icon: <DashboardIcon />,\r\n    route: routes.HOME,\r\n  },\r\n  {\r\n    heading: 'Quản lý cuộc thi',\r\n    icon: <TimerIcon />,\r\n    route: routes.CONTEST,\r\n  },\r\n  {\r\n    heading: 'Quản lý câu hỏi',\r\n    icon: <AssignmentIcon />,\r\n    route: routes.GROUP_QUESTIONS,\r\n  },\r\n  {\r\n    heading: 'Thông tin tài khoản',\r\n    icon: <PersonIcon />,\r\n    route: routes.USER,\r\n  },\r\n];\r\n\r\nconst Layout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.auth.user);\r\n  const { pathname } = useLocation();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleOpenMenuHeader = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenuHeader = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setCookie('accessToken');\r\n    setCookie('accessToken');\r\n    Cookies.remove('user');\r\n    dispatch(actions.auth.logout());\r\n  };\r\n  useEffect(() => {\r\n    // Kiểm tra xem thiết bị có phải là Android hay không\r\n    const isAndroid = () => /Android/i.test(navigator.userAgent);\r\n\r\n    // Kiểm tra xem thiết bị có phải là iPad hoặc Tablet hay không\r\n    const isTablet = () => /iPad|Android|tablet/i.test(navigator.userAgent);\r\n\r\n    // Kiểm tra kích thước màn hình nhỏ hơn 768px\r\n    const isSmallScreen = () => window.innerWidth < 769;\r\n\r\n    // Hàm sẽ được gọi khi thiết bị là Android hoặc iPad/Tablet và kích thước màn hình nhỏ hơn 768px\r\n    const onAndroidOrTabletAndSmallScreen = () => {\r\n      console.log('Đây là Android hoặc iPad/Tablet và màn hình nhỏ hơn 768px');\r\n      // Thực hiện các hành động cần thiết ở đây\r\n      handleDrawerClose();\r\n    };\r\n\r\n    // Kiểm tra và gọi hàm tương ứng khi component được mount\r\n    if ((isAndroid() || isTablet()) && isSmallScreen()) {\r\n      onAndroidOrTabletAndSmallScreen();\r\n    }\r\n  }, []); // Chỉ chạy một lần khi component được mount\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden,\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Avatar src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621772719/bfvfvstmneai0d1z0byx.png\" />\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Multichoice\r\n          </Typography>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Typography variant=\"body2\">{userInfo && userInfo.name}</Typography>\r\n            {userInfo && userInfo.avatar ? (\r\n              <Avatar\r\n                alt=\"avatar\"\r\n                src={userInfo.avatar}\r\n                className={classes.avatar}\r\n                onClick={handleOpenMenuHeader}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                aria-label=\"recipe\"\r\n                className={classes.avatar}\r\n                onClick={handleOpenMenuHeader}\r\n              >\r\n                {(userInfo && userInfo.name && userInfo.name[0]) || 'T'}\r\n              </Avatar>\r\n            )}\r\n          </Box>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleCloseMenuHeader}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n          >\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menus.map((el, index) => (\r\n            <Link to={el.route} key={index} className={classes.link}>\r\n              <ListItem\r\n                button\r\n                key={index}\r\n                classes={{\r\n                  root:\r\n                    ((el.route === '/' && pathname === el.route) ||\r\n                      (pathname.indexOf(el.route) >= 0 && el.route !== '/')) &&\r\n                    classes.listItem,\r\n                }}\r\n              >\r\n                <ListItemIcon>{el.icon}</ListItemIcon>\r\n                <ListItemText primary={el.heading} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          {children}\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport routes from '../constants/route';\r\nimport Layout from '../components/Layout';\r\n\r\nexport default function PrivateRoute({ Component, ...rest }) {\r\n  const accessToken = useSelector((state) => state.auth.accessToken);\r\n  return (\r\n    <Layout>\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          accessToken ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect to={routes.LOGIN} />\r\n          )\r\n        }\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n","export default {\r\n  // BACKGROUND_IMAGE: 'https://portal.bay4.com/images/login/background.jpg',\r\n  BACKGROUND_IMAGE: 'https://i.imgur.com/FJCFD8D.png',\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport image from '../../constants/image';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${image.BACKGROUND_IMAGE})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? /* theme.palette.grey[50] */ '#e1ceaf'\r\n        : theme.palette.grey[900],\r\n\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  divider: {\r\n    border: '1px solid #ccc',\r\n    height: '1px',\r\n    flexGrow: 1,\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","export default {\r\n  LOGIN: 'LOGIN',\r\n  LOGIN_GOOGLE: 'LOGIN_GOOGLE',\r\n  LOGIN_FACEBOOK: 'LOGIN_FACEBOOK',\r\n};\r\n","function changeAlias(alias) {\r\n  let str = alias;\r\n  str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n  str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n  str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\r\n  str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n  str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n  str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n  str = str.replace(/đ/g, 'd');\r\n  str = str.trim();\r\n  return str;\r\n}\r\n\r\nfunction validateEmail(email) {\r\n  const re =\r\n    /^[^0-9][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[@][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{2,4}$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nfunction validatePassword(password) {\r\n  const re = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/;\r\n  return re.test(password);\r\n}\r\n\r\nfunction isImageUrlCheck(str) {\r\n  // Biểu thức chính quy kiểm tra định dạng đường link ảnh\r\n  const imageUrlRegex = /\\.(jpeg|jpg|gif|png|bmp|svg)$/i;\r\n  return imageUrlRegex.test(str);\r\n}\r\n\r\nexport { changeAlias, validateEmail, validatePassword, isImageUrlCheck };\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport image from '../../constants/image';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${image.BACKGROUND_IMAGE})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n","import axios from 'axios';\r\nimport camelCase from 'camelcase-keys';\r\nimport { getCookie } from '../utils/cookie';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_DOMAIN}/api/v1`,\r\n  responseType: 'json',\r\n  timeout: 15 * 1000,\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  const accessToken = getCookie('accessToken');\r\n  // eslint-disable-next-line no-param-reassign\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    return camelCase(response.data, { deep: true });\r\n  },\r\n  (error) => {\r\n    // Handle error\r\n    console.error(error);\r\n  },\r\n);\r\n\r\nexport default axiosClient;\r\n","import api from './api';\r\n\r\nexport async function login(email, password) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/login',\r\n    data: { email, password },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function loginByGoogle(tokenId) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/loginByGoogle',\r\n    data: { tokenId },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function loginByFacebook({ accessToken, userID }) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/loginByFacebook',\r\n    data: { accessToken, userID },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function register({ name, email, password }) {\r\n  const data = await api({\r\n    method: 'POST',\r\n    url: '/auths/register',\r\n    data: { name, email, password },\r\n  });\r\n  return data;\r\n}\r\n\r\nexport async function verify(accessToken) {\r\n  const data = await api({\r\n    method: 'GET',\r\n    url: '/auths/verify',\r\n    headers: { Authorization: `Bearer ${accessToken}` },\r\n  });\r\n  return data;\r\n}\r\nexport async function deleteUser(accessToken) {\r\n  const data = await api({\r\n    method: 'DELETE',\r\n    url: '/auths/deleteUser',\r\n    headers: { Authorization: `Bearer ${accessToken}` },\r\n  });\r\n  return data;\r\n}\r\n","import api from './api';\r\n\r\nexport async function updateUser(user) {\r\n  const userInfo = await api({\r\n    method: 'PUT',\r\n    url: '/users',\r\n    data: user,\r\n  });\r\n  return userInfo;\r\n}\r\n\r\nexport async function changePassword(data) {\r\n  const userInfo = await api({\r\n    method: 'PUT',\r\n    url: '/users/changePassword',\r\n    data,\r\n  });\r\n  return userInfo;\r\n}\r\n","import api from './api';\r\n\r\nexport async function getGroupQuestions(key) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/groupQuestions',\r\n    params: { key },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createGroupQuestion(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/groupQuestions',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateGroupQuestions(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/groupQuestions/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteGroupQuestions(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/groupQuestions/${id}`,\r\n  });\r\n  return res;\r\n}\r\n","import api from './api';\r\n\r\nexport async function getQuestionsInGroup({\r\n  key,\r\n  limit,\r\n  offset,\r\n  sort,\r\n  fields,\r\n  groupQuestionId,\r\n}) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/questionsInGroup',\r\n    data: {\r\n      key,\r\n      limit,\r\n      offset,\r\n      sort,\r\n      fields,\r\n      groupQuestionId,\r\n    },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getQuestion() {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/questions/:id',\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createQuestion(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/questions',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateQuestion(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/questions/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteQuestion(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/questions/${id}`,\r\n  });\r\n  return res;\r\n}\r\n","import Cookies from 'js-cookie';\r\nimport api from './api';\r\nconst accessToken = Cookies.get('access_token');\r\nexport async function getContests(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\nexport async function getContestsJoined(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests/joined',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\nexport async function getContestsByUser(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests/createByUser',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createContest(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/contests',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateContest(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/contests/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteContest(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/contests/${id}`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function verifyPassword({ id, password }) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: `/contests/${id}/verifyPassword`,\r\n    data: { password },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getQuestions({ id, token }) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    headers: {\r\n      'contest-token': token || null,\r\n    },\r\n    url: `/contests/${id}/getAllQuestion`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function mark({ doTime, contestId, groupQuestionId, answers }) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: `/contests/${contestId}/mark`,\r\n    data: { doTime, groupQuestionId, answers },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getResultByContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}/results`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getResultDetailByContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}/results`,\r\n    headers: { Authorization: `Bearer ${accessToken}` },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getResultByUserInContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}/results/user`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function checkAccountRole({ contestId, userId }) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${contestId}/role/${userId}`,\r\n  });\r\n  return res;\r\n}\r\n","import API from './api';\r\n\r\nexport async function uploadFile({ formData }) {\r\n  try {\r\n    const response = await API({\r\n      method: 'POST',\r\n      url: `/uploads/file`,\r\n      data: formData,\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n}\r\nexport async function uploadAvatar({ formData }) {\r\n  try {\r\n    const response = await API({\r\n      method: 'POST',\r\n      url: `/uploads/avatar`,\r\n      data: formData,\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n}\r\n","import * as auth from './auth';\r\nimport * as user from './user';\r\nimport * as groupQuestion from './groupQuestion';\r\nimport * as question from './question';\r\nimport * as contest from './contest';\r\nimport * as upload from './upload';\r\n\r\nexport default { auth, user, groupQuestion, question, contest, upload };\r\n","/* eslint-disable no-plusplus */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport { validateEmail } from '../../utils/string';\r\n\r\nconst Register2 = ({ isLogin, handleLoginOrRegister }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [userError, setUserError] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const validateRegister = () => {\r\n    let countError = 0;\r\n    if (user.name.length === 0) {\r\n      setUserError((prev) => ({\r\n        ...prev,\r\n        name: 'Name is required',\r\n      }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.email.length === 0) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email is required' }));\r\n      countError++;\r\n    } else if (!validateEmail(user.email)) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email invalid' }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.password.length === 0) {\r\n      setUserError((prev) => ({ ...prev, password: 'Password is required' }));\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateRegister()) return;\r\n    const data = await apis.auth.register({ ...user });\r\n    if (data && data.status) {\r\n      enqueueSnackbar('Register success', { variant: 'success' });\r\n      history.push('/login');\r\n      handleLoginOrRegister();\r\n    } else {\r\n      enqueueSnackbar(data.message || 'Register failed', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12} md={12} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Đăng kí\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Họ và tên\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            value={user.name}\r\n            onChange={(e) => {\r\n              setUserError({ ...userError, name: '' });\r\n              setUser({ ...user, name: e.target.value });\r\n            }}\r\n            error={userError.name}\r\n            helperText={userError.name}\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={user.email}\r\n            onChange={(e) => {\r\n              setUserError({ ...userError, email: '' });\r\n              setUser({ ...user, email: e.target.value });\r\n            }}\r\n            error={userError.email}\r\n            helperText={userError.email}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Mật khẩu\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={user.password}\r\n            onChange={(e) => {\r\n              setUserError({ ...userError, password: '' });\r\n              setUser({ ...user, password: e.target.value });\r\n            }}\r\n            error={userError.password}\r\n            helperText={userError.password}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSignUp}\r\n          >\r\n            Đăng kí\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              {/* <Link to=\"/login\" variant=\"body2\">\r\n                  Bạn đã có tài khoản?\r\n                </Link> */}\r\n              <Button onClick={handleLoginOrRegister}>\r\n                {' '}\r\n                Bạn đã có tài khoản?\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register2;\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable react/no-unescaped-entities */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport actions from '../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport loginType from '../../constants/loginType';\r\nimport { validateEmail } from '../../utils/string';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { googleLogout } from '@react-oauth/google';\r\n\r\nconst Login2 = ({ isLogin, handleLoginOrRegister }) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoggingIn, message } = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    if (isLoggingIn) return;\r\n    if (message) {\r\n      enqueueSnackbar(message, { variant: 'error' });\r\n    }\r\n  }, [isLoggingIn]);\r\n\r\n  const handleLoginFailureGoogle = (res) => {\r\n    enqueueSnackbar(res, { variant: 'error' });\r\n  };\r\n\r\n  const handleLoginSuccessGoogle = async (res) => {\r\n    const { tokenId } = res;\r\n    dispatch(actions.auth.login(loginType.LOGIN_GOOGLE, { tokenId }));\r\n  };\r\n\r\n  const handleLoginFacebook = async (res) => {\r\n    const { accessToken, userID } = res;\r\n    dispatch(\r\n      actions.auth.login(loginType.LOGIN_FACEBOOK, { accessToken, userID }),\r\n    );\r\n  };\r\n\r\n  const validateLogin = () => {\r\n    let countError = 0;\r\n    if (email.length === 0) {\r\n      setEmailError('Email is required');\r\n      countError++;\r\n    } else if (!validateEmail(email)) {\r\n      setEmailError('Email invalid');\r\n      countError++;\r\n    }\r\n    if (password.length === 0) {\r\n      setPasswordError('Password is required');\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!validateLogin()) return;\r\n    dispatch(actions.auth.login(loginType.LOGIN, { email, password }));\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleLogin();\r\n    }\r\n  };\r\n  googleLogout();\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12} md={12} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Đăng nhập\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onKeyPress={onKeyPress}\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmailError('');\r\n              setEmail(e.target.value);\r\n            }}\r\n            error={emailError}\r\n            helperText={emailError}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Mật khẩu\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onKeyPress={onKeyPress}\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPasswordError('');\r\n              setPassword(e.target.value);\r\n            }}\r\n            error={passwordError}\r\n            helperText={passwordError}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleLogin();\r\n            }}\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              {/* <Link href=\"/register\" variant=\"body2\">\r\n                Tạo tài khoản\r\n              </Link> */}\r\n              <Button onClick={handleLoginOrRegister}>Tạo tài khoản</Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Box display=\"flex\" mt={1} alignItems=\"center\">\r\n            <div className={classes.divider} />\r\n            <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n              Hoặc\r\n            </Typography>\r\n            <div className={classes.divider} />\r\n          </Box>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              {/*  <GoogleLogin\r\n                clientId=\"108546913060-gdier6c25mddr862bvqg57b60cil467h.apps.googleusercontent.com\"\r\n                render={(renderProps) => (\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    startIcon={\r\n                      <Avatar\r\n                        style={{\r\n                          height: '20px',\r\n                          width: '20px',\r\n                        }}\r\n                        variant=\"square\"\r\n                        src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771943/m33izryay4mzslavxmyk.png\"\r\n                      />\r\n                    }\r\n                    onClick={renderProps.onClick}\r\n                  >\r\n                    Google\r\n                  </Button>\r\n                )}\r\n                buttonText=\"Login\"\r\n                onSuccess={handleLoginSuccessGoogle}\r\n                onFailure={handleLoginFailureGoogle}\r\n                cookiePolicy=\"single_host_origin\"\r\n              /> */}\r\n              {/* <GoogleOAuthProvider clientId=\"108546913060-gdier6c25mddr862bvqg57b60cil467h.apps.googleusercontent.com\"> */}\r\n              <GoogleLogin\r\n                clientId=\"108546913060-gdier6c25mddr862bvqg57b60cil467h.apps.googleusercontent.com\"\r\n                /*  onSuccess={(credentialResponse) => {\r\n                  console.log(credentialResponse);\r\n                }} */\r\n                /* onError={() => {\r\n                  console.log('Login Failed');\r\n                }} */\r\n                onSuccess={handleLoginSuccessGoogle}\r\n                onError={handleLoginFailureGoogle}\r\n                cookiePolicy=\"single_host_origin\"\r\n              />\r\n              {/* </GoogleOAuthProvider> */}\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <FacebookLogin\r\n                appId=\"136872808369148\"\r\n                // eslint-disable-next-line react/jsx-boolean-value\r\n                autoLoad={false}\r\n                callback={handleLoginFacebook}\r\n                render={(renderProps) => (\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    startIcon={\r\n                      <Avatar\r\n                        style={{\r\n                          height: '20px',\r\n                          width: '20px',\r\n                        }}\r\n                        variant=\"square\"\r\n                        src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771959/idn7xi1tw5blhrj8zoxk.png\"\r\n                      />\r\n                    }\r\n                    onClick={renderProps.onClick}\r\n                  >\r\n                    Facebook\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login2;\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable react/no-unescaped-entities */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport actions from '../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport loginType from '../../constants/loginType';\r\nimport { validateEmail } from '../../utils/string';\r\nimport Register2 from '../Register/register';\r\nimport Login2 from './Login';\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [isLogin, setisLogin] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoggingIn, message } = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    if (isLoggingIn) return;\r\n    if (message) {\r\n      enqueueSnackbar(message, { variant: 'error' });\r\n    }\r\n  }, [isLoggingIn]);\r\n\r\n  const handleLoginFailureGoogle = (res) => {\r\n    enqueueSnackbar(res, { variant: 'error' });\r\n  };\r\n\r\n  const handleLoginSuccessGoogle = async (res) => {\r\n    const { tokenId } = res;\r\n    dispatch(actions.auth.login(loginType.LOGIN_GOOGLE, { tokenId }));\r\n  };\r\n\r\n  const handleLoginFacebook = async (res) => {\r\n    const { accessToken, userID } = res;\r\n    dispatch(\r\n      actions.auth.login(loginType.LOGIN_FACEBOOK, { accessToken, userID }),\r\n    );\r\n  };\r\n\r\n  const validateLogin = () => {\r\n    let countError = 0;\r\n    if (email.length === 0) {\r\n      setEmailError('Email is required');\r\n      countError++;\r\n    } else if (!validateEmail(email)) {\r\n      setEmailError('Email invalid');\r\n      countError++;\r\n    }\r\n    if (password.length === 0) {\r\n      setPasswordError('Password is required');\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!validateLogin()) return;\r\n    dispatch(actions.auth.login(loginType.LOGIN, { email, password }));\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleLogin();\r\n    }\r\n  };\r\n  const handleLoginOrRegister = () => {\r\n    setisLogin(!isLogin);\r\n  };\r\n  // console.log(isLogin);\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={8} md={8} className={classes.image} />\r\n      <Grid item xs={12} sm={4} nd={4}>\r\n        {isLogin ? (\r\n          <Login2\r\n            isLogin={isLogin}\r\n            handleLoginOrRegister={handleLoginOrRegister}\r\n          />\r\n        ) : (\r\n          <Register2\r\n            isLogin={isLogin}\r\n            handleLoginOrRegister={handleLoginOrRegister}\r\n          />\r\n        )}\r\n      </Grid>\r\n      {/* <Grid item xs={12} sm={4} md={4} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng nhập\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onKeyPress={onKeyPress}\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmailError('');\r\n                setEmail(e.target.value);\r\n              }}\r\n              error={emailError}\r\n              helperText={emailError}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Mật khẩu\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onKeyPress={onKeyPress}\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPasswordError('');\r\n                setPassword(e.target.value);\r\n              }}\r\n              error={passwordError}\r\n              helperText={passwordError}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleLogin();\r\n              }}\r\n            >\r\n              Đăng nhập\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  Tạo tài khoản\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box display=\"flex\" mt={1} alignItems=\"center\">\r\n              <div className={classes.divider} />\r\n              <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n                Hoặc\r\n              </Typography>\r\n              <div className={classes.divider} />\r\n            </Box>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6}>\r\n                <GoogleLogin\r\n                  clientId=\"802105279409-3f4hr8psra01jd28d9rhuupgp64658k4.apps.googleusercontent.com\"\r\n                  render={(renderProps) => (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      startIcon={\r\n                        <Avatar\r\n                          style={{\r\n                            height: '20px',\r\n                            width: '20px',\r\n                          }}\r\n                          variant=\"square\"\r\n                          src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771943/m33izryay4mzslavxmyk.png\"\r\n                        />\r\n                      }\r\n                      onClick={renderProps.onClick}\r\n                    >\r\n                      Google\r\n                    </Button>\r\n                  )}\r\n                  buttonText=\"Login\"\r\n                  onSuccess={handleLoginSuccessGoogle}\r\n                  onFailure={handleLoginFailureGoogle}\r\n                  cookiePolicy=\"single_host_origin\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FacebookLogin\r\n                  appId=\"136872808369148\"\r\n                  // eslint-disable-next-line react/jsx-boolean-value\r\n                  autoLoad={false}\r\n                  callback={handleLoginFacebook}\r\n                  render={(renderProps) => (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      startIcon={\r\n                        <Avatar\r\n                          style={{\r\n                            height: '20px',\r\n                            width: '20px',\r\n                          }}\r\n                          variant=\"square\"\r\n                          src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771959/idn7xi1tw5blhrj8zoxk.png\"\r\n                        />\r\n                      }\r\n                      onClick={renderProps.onClick}\r\n                    >\r\n                      Facebook\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid> */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/* eslint-disable no-plusplus */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport { validateEmail } from '../../utils/string';\r\n\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [userError, setUserError] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const validateRegister = () => {\r\n    let countError = 0;\r\n    if (user.name.length === 0) {\r\n      setUserError((prev) => ({\r\n        ...prev,\r\n        name: 'Name is required',\r\n      }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.email.length === 0) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email is required' }));\r\n      countError++;\r\n    } else if (!validateEmail(user.email)) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email invalid' }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.password.length === 0) {\r\n      setUserError((prev) => ({ ...prev, password: 'Password is required' }));\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateRegister()) return;\r\n    const data = await apis.auth.register({ ...user });\r\n    if (data && data.status) {\r\n      enqueueSnackbar('Register success', { variant: 'success' });\r\n      history.push('/login');\r\n    } else {\r\n      enqueueSnackbar(data.message || 'Register failed', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng kí\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Họ và tên\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n              value={user.name}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, name: '' });\r\n                setUser({ ...user, name: e.target.value });\r\n              }}\r\n              error={userError.name}\r\n              helperText={userError.name}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={user.email}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, email: '' });\r\n                setUser({ ...user, email: e.target.value });\r\n              }}\r\n              error={userError.email}\r\n              helperText={userError.email}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Mật khẩu\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={user.password}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, password: '' });\r\n                setUser({ ...user, password: e.target.value });\r\n              }}\r\n              error={userError.password}\r\n              helperText={userError.password}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSignUp}\r\n            >\r\n              Đăng kí\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Bạn đã có tài khoản?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n// import { red } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 140,\r\n    backgroundSize: 'contain',\r\n  },\r\n  date: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n// eslint-disable-next-line\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  Typography,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Box,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { AccessTime as AccessTimeIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\n\r\nconst TabDetail = ({ item }) => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleJoin = (e) => {\r\n    e.preventDefault();\r\n    history.push(`/contest/${item.id}/exam/detail`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} md={4} key={item.id}>\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            item.createdBy.avatar ? (\r\n              <Avatar alt={item.createdBy.name} src={item.createdBy.avatar} />\r\n            ) : (\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {item.createdBy.name[0]}\r\n              </Avatar>\r\n            )\r\n          }\r\n          action={\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            >\r\n              {item.examTime} phút\r\n            </Typography>\r\n          }\r\n          title={item.title}\r\n          subheader={`Tạo bởi: ${item.createdBy.name}`}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={\r\n            item.imageUrl ||\r\n            'https://monamedia.co/wp-content/uploads/2020/02/javascript-la-gi.jpg'\r\n          }\r\n          title={item.title}\r\n        />\r\n        {/* <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Description:{' '}\r\n            {item.description && item.description.length > 0\r\n              ? item.description\r\n              : `[Empty]`}\r\n          </Typography>\r\n        </CardContent> */}\r\n        <CardActions>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <AccessTimeIcon\r\n                style={{ marginRight: '5px' }}\r\n                color=\"secondary\"\r\n                fontSize=\"small\"\r\n              />\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {item && moment(item.startTime).format('lll')}\r\n              </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleJoin}>\r\n                Tham gia\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TabDetail;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nconst LoadingPage = ({ title = '' }) => {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" style={{ color: '#ccc' }}>\r\n        Loading {title}...\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","/* eslint-disable no-useless-return */\r\n// eslint-disable-next-line\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Paper, Tabs, Tab, Grid, Box, Typography } from '@material-ui/core';\r\nimport TabDetail from './TabDetail';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport LoadingPage from '../../components/LoadingPage';\r\nimport { MathComponent } from 'mathjax-react';\r\nconst menus = [\r\n  { id: 0, heading: 'Tất cả cuộc thi' },\r\n  { id: 1, heading: 'Đã tham gia' },\r\n  { id: 2, heading: 'Đang diễn ra' },\r\n  { id: 3, heading: 'Sắp diễn ra' },\r\n  { id: 4, heading: 'Đã kết thúc' },\r\n];\r\n\r\nlet contestsDefault = [];\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n  const [tab, setTab] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [contests, setContests] = useState([]);\r\n  const [contestsJoined, setContestsJoined] = useState([]);\r\n\r\n  const fetchContests = async () => {\r\n    const data = await apis.contest.getContests();\r\n    if (data && data.status) {\r\n      setContests(data.result.data);\r\n      contestsDefault = [...data.result.data];\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchContestsJoined = async () => {\r\n    const data = await apis.contest.getContestsJoined();\r\n    if (data && data.status) {\r\n      setContestsJoined(data.result.contests);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContests();\r\n  }, []);\r\n\r\n  const handleChangeTab = async (event, newValue) => {\r\n    setTab(newValue);\r\n    const date = new Date();\r\n    if (newValue === 0) {\r\n      setContests([...contestsDefault]);\r\n      return;\r\n    }\r\n    if (newValue === 1) {\r\n      if (contestsJoined.length <= 0) {\r\n        await fetchContestsJoined();\r\n      }\r\n      return;\r\n    }\r\n    if (newValue === 2) {\r\n      const newContests = contestsDefault.filter((el) => {\r\n        if (el.endTime && new Date(el.endTime) < date) return false;\r\n        if (new Date(el.startTime) > date) return false;\r\n        return true;\r\n      });\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    if (newValue === 3) {\r\n      const newContests = contestsDefault.filter(\r\n        (el) => new Date(el.startTime) > date,\r\n      );\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    if (newValue === 4) {\r\n      const newContests = contestsDefault.filter(\r\n        (el) => el.endTime && new Date(el.endTime) < date,\r\n      );\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    return;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n  const math = String.raw`x_{n+1} = x_n - \\frac{f(x_n)}{f'(x_n)}`;\r\n\r\n  return (\r\n    <>\r\n      {/* {<MathComponent tex={String.raw`\\int_0^1 x^2\\ dx`} />} */}\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách cuộc thi\r\n        </Typography>\r\n      </Box>\r\n      <Paper className={classes.root}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          {menus.map((el) => (\r\n            <Tab label={el.heading} key={el.id}>\r\n              {el.heading}\r\n            </Tab>\r\n          ))}\r\n        </Tabs>\r\n      </Paper>\r\n\r\n      {tab === 1 ? (\r\n        <Grid container spacing={3}>\r\n          {contestsJoined.map((el) => (\r\n            <TabDetail item={el} />\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {contests.map((el) => (\r\n            <TabDetail item={el} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  tab: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(10),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  paperImage: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  avatar: {\r\n    position: 'relative',\r\n    borderRadius: '50%',\r\n\r\n    '&:hover': {\r\n      '& label': {\r\n        opacity: '0.3',\r\n      },\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n  btnCamera: {\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    fontSize: '20px',\r\n    backgroundColor: '#FFF',\r\n    opacity: '0',\r\n    transition: '0.5s',\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(10),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  buttonDelete: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    backgroundColor: '#f44336',\r\n    color: '#FFF',\r\n  },\r\n  paperImage: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  avatar: {\r\n    position: 'relative',\r\n    borderRadius: '50%',\r\n\r\n    '&:hover': {\r\n      '& label': {\r\n        opacity: '0.3',\r\n      },\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n  btnCamera: {\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    fontSize: '20px',\r\n    backgroundColor: '#FFF',\r\n    opacity: '0',\r\n    transition: '0.5s',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport { PhotoCamera as PhotoCameraIcon } from '@material-ui/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst User = () => {\r\n  // const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [userInfo, setUserInfo] = useState(\r\n    useSelector((state) => state.auth.user),\r\n  );\r\n  console.log(userInfo);\r\n\r\n  const handleChange = (e) => {\r\n    setUserInfo({\r\n      ...userInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      name,\r\n      avatar,\r\n      dob,\r\n      phoneNumber,\r\n      urlFacebook,\r\n      urlYoutube,\r\n      urlWebsite,\r\n    } = userInfo;\r\n    if (name.trim().length <= 0) {\r\n      enqueueSnackbar(\"Name doesn't empty\", { variant: 'error' });\r\n      return;\r\n    }\r\n    const data = await apis.user.updateUser({\r\n      name,\r\n      avatar,\r\n      dob,\r\n      phoneNumber,\r\n      urlFacebook,\r\n      urlYoutube,\r\n      urlWebsite,\r\n    });\r\n    if (data && data.status) {\r\n      dispatch(\r\n        actions.auth.updateUser({\r\n          ...data.result.user,\r\n        }),\r\n      );\r\n      enqueueSnackbar('Update success', { variant: 'success' });\r\n    } else {\r\n      enqueueSnackbar('Update failed', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = async (e) => {\r\n    const formData = new FormData();\r\n    const file = e.target.files[0];\r\n    formData.append('file', file);\r\n    try {\r\n      const data = await apis.upload.uploadAvatar({ formData });\r\n      if (data && data.status) {\r\n        setUserInfo({\r\n          ...userInfo,\r\n          avatar: data.result.link,\r\n        });\r\n        console.log(data.result.link);\r\n        // try {\r\n        //   const result = await apis.user.updateUser({\r\n        //     avatar: data.result.link,\r\n        //   });\r\n        //   if (result && result.status) {\r\n        //     console.log('update avatar success');\r\n        //   }\r\n        // } catch (error) {\r\n        //   console.log(error);\r\n        // }\r\n      } else {\r\n        enqueueSnackbar('Upload failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const deleteAccount = async () => {\r\n    try {\r\n      const result = await apis.auth.deleteUser();\r\n      console.log(result);\r\n      if (result && result.code == 200) {\r\n        alert('Xóa tài khoản thành công');\r\n        Cookies.remove('accessToken');\r\n        window.location.reload();\r\n      } else {\r\n        alert('Xóa tài khoản thất bại');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Box borderRadius=\"50%\" className={classes.avatar}>\r\n            <Avatar\r\n              alt=\"avatar\"\r\n              src={(userInfo && userInfo.avatar) || ''}\r\n              style={{\r\n                width: '100%',\r\n                height: '200px',\r\n              }}\r\n            />\r\n\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n              onChange={handleUploadImage}\r\n            />\r\n            <label className={classes.btnCamera} htmlFor=\"icon-button-file\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCameraIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </label>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9}>\r\n          <Paper className={classes.paper} variant={3}>\r\n            <Box textAlign=\"center\" mb={3}>\r\n              <Typography variant=\"h4\" component=\"h2\">\r\n                Thông tin\r\n              </Typography>\r\n            </Box>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  label=\"Tên của bạn\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.name) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  disabled\r\n                  value={(userInfo && userInfo.email) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Date picker inline\"\r\n                    value={(userInfo && userInfo.dob) || new Date()}\r\n                    onChange={(value) =>\r\n                      setUserInfo({ ...userInfo, dob: value })\r\n                    }\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid> */}\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  name=\"phoneNumber\"\r\n                  label=\"Số điện thoại\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.phoneNumber) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlFacebook\"\r\n                  label=\"Link Facebook\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlFacebook) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlYoutube\"\r\n                  label=\"Link Youtube\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlYoutube) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlWebsite\"\r\n                  label=\"Link Website\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlWebsite) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Box textAlign=\"right\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                size=\"large\"\r\n                onClick={handleSave}\r\n              >\r\n                Lưu lại\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"warning\"\r\n                className={classes.buttonDelete}\r\n                size=\"large\"\r\n                onClick={() => {\r\n                  deleteAccount(userInfo._id);\r\n                }} // eslint-disable-line\r\n              >\r\n                Xóa tài khoản\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(10),\r\n    paddingBottom: theme.spacing(10),\r\n    paddingRight: theme.spacing(20),\r\n    paddingLeft: theme.spacing(20),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      paddingTop: theme.spacing(10),\r\n      paddingBottom: theme.spacing(10),\r\n      paddingRight: theme.spacing(40),\r\n      paddingLeft: theme.spacing(40),\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Paper, TextField, Box, Button, Typography } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\n\r\nconst ChangePassword = () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [password, setPassword] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmNewPassword: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPassword({\r\n      ...password,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (password.currentPassword.trim().length <= 0) {\r\n      enqueueSnackbar('Current password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.newPassword.trim().length <= 0) {\r\n      enqueueSnackbar('New password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.confirmNewPassword.trim().length <= 0) {\r\n      enqueueSnackbar('Confirm new password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.newPassword.trim() !== password.confirmNewPassword.trim()) {\r\n      enqueueSnackbar('Confirm password  is not match', { variant: 'error' });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validatePassword()) return;\r\n    const data = await apis.user.changePassword({ ...password });\r\n\r\n    if (data && data.status) {\r\n      enqueueSnackbar('Change password success', { variant: 'success' });\r\n      setPassword({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmNewPassword: '',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Change password failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} variant={3}>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Thay đổi mật khẩu\r\n        </Typography>\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"currentPassword\"\r\n          label=\"Mật khẩu hiện tại\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.currentPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"newPassword\"\r\n          label=\"Mật khẩu mới\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.newPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"confirmNewPassword\"\r\n          label=\"Xác nhận lại mật khẩu\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.confirmNewPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"right\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          size=\"large\"\r\n          onClick={handleSave}\r\n        >\r\n          Lưu mật khẩu\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","/* eslint-disable no-useless-return */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport UserInformation from './UserInformation';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nconst menus = [\r\n  {\r\n    id: 0,\r\n    heading: 'Thông tin cá nhân',\r\n    component: <UserInformation />,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: 'Thay đổi mật khẩu',\r\n    component: <ChangePassword />,\r\n  },\r\n];\r\nconst User = () => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const [tab, setTab] = useState(0);\r\n\r\n  const handleChangeTab = async (event, newValue) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  const renderTab = () => {\r\n    const item = menus.find((el) => el.id === tab);\r\n    return item && item.component;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.tab}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          {menus.map((el) => (\r\n            <Tab label={el.heading} key={el.id}>\r\n              {el.heading}\r\n            </Tab>\r\n          ))}\r\n        </Tabs>\r\n      </Paper>\r\n      {renderTab()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\nimport { Search as SearchIcon } from '@material-ui/icons';\r\n\r\nconst SearchBox = ({\r\n  title = '',\r\n  handleSearch,\r\n  size = 'small',\r\n  position = 'end',\r\n  variant = 'outlined',\r\n}) => {\r\n  return (\r\n    <TextField\r\n      variant={variant}\r\n      size={size}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position={position}>\r\n            <SearchIcon />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      placeholder={`Tìm kiếm  ${title}`}\r\n      onChange={handleSearch}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '5%',\r\n    bottom: '5%',\r\n    left: '20%',\r\n    // transform: 'translate(-50%, 0%)',\r\n    position: 'absolute',\r\n    width: '60%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n  listAnswer: {\r\n    border: '1px solid #ccc',\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.spacing(0.5),\r\n    height: '300px',\r\n    overflow: 'auto',\r\n  },\r\n  textCreateAnswer: {\r\n    marginLeft: theme.spacing(0.5),\r\n  },\r\n  listAnswerContent: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","import moment from 'moment';\r\n\r\nconst getDate = (date) => {\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  return { day, month, year };\r\n};\r\n\r\nconst getTime = (date) => {\r\n  const hour = date.getHours();\r\n  const minute = date.getMinutes();\r\n  const second = date.getSeconds();\r\n\r\n  return { hour, minute, second };\r\n};\r\n\r\nexport function setTime(date, dateSet) {\r\n  const { hour, minute, second } = getTime(dateSet);\r\n  date.setHours(hour);\r\n  date.setMinutes(minute);\r\n  date.setSeconds(second);\r\n  return date;\r\n}\r\n\r\nexport function setDate(date, dateSet) {\r\n  const { day, month, year } = getDate(dateSet);\r\n  date.setDate(day);\r\n  date.setMonth(month);\r\n  date.setYear(year);\r\n  return date;\r\n}\r\n\r\nexport function renderDate(date) {\r\n  const newDate = new Date(date);\r\n  const { hour, minute, second } = getTime(newDate);\r\n  const { day, month, year } = getDate(newDate);\r\n\r\n  return `${day}/${month}/${year} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport function countTime(date) {\r\n  const distance = new Date(date) - new Date();\r\n  const day = Math.floor(distance / 86400000);\r\n  const hour = Math.floor((distance - day * 86400) / 3600000);\r\n  const minute = Math.floor((distance - day * 86400 - hour * 3600000) / 60000);\r\n  return `${day} day ${hour}h ${minute}m`;\r\n}\r\n\r\nexport function renderClockTime(time) {\r\n  const hours = Math.floor(time / 3600);\r\n  const minutes = Math.floor((time - hours * 3600) / 60);\r\n  const seconds = Math.floor(time - hours * 3600 - minutes * 60);\r\n\r\n  const hoursString = `0${hours}`.slice(-2);\r\n  const minutesString = `0${minutes}`.slice(-2);\r\n  const secondsString = `0${seconds}`.slice(-2);\r\n  return `${hoursString}:${minutesString}:${secondsString}`;\r\n}\r\n\r\nexport function checkDate(el) {\r\n  const date = new Date();\r\n  const startTime = new Date(el.startTime);\r\n  const endTime = el.endTime && new Date(el.endTime);\r\n  if (endTime && endTime < date) {\r\n    return 'Ended';\r\n  }\r\n  if (startTime > date) {\r\n    return `Upcoming: ${countTime(startTime)}`;\r\n  }\r\n  return `Time remain: ${moment(startTime).fromNow()}`;\r\n}\r\n/* export function formatTimeFull(el) {\r\n  const formattedDate = moment(row.createdAt).format('DD/MM/YYYY h:mm:ss a');\r\n  console.log(formattedDate);\r\n} */\r\n","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Modal,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Switch,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport { setDate, setTime } from '../../../utils/date';\r\n\r\nconst ContestModal = ({\r\n  handleCloseModal,\r\n  open,\r\n  itemSelect,\r\n  handleUpdateContest,\r\n  groupQuestions,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [contest, setContest] = useState();\r\n\r\n  const handleDateChange = (type) => (date) => {\r\n    let startTime = contest && contest.startTime;\r\n    let endTime = contest && contest.endTime;\r\n    switch (type) {\r\n      case 'startDate':\r\n        startTime = setDate(startTime || date, date);\r\n        break;\r\n      case 'startTime':\r\n        startTime = setTime(startTime || date, date);\r\n        break;\r\n      case 'endDate':\r\n        endTime = setDate(endTime || date, date);\r\n        break;\r\n      case 'endTime':\r\n        endTime = setTime(endTime || date, date);\r\n        break;\r\n      default:\r\n    }\r\n\r\n    setContest({\r\n      ...contest,\r\n      startTime,\r\n      endTime,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContest(itemSelect);\r\n  }, [itemSelect, open]);\r\n\r\n  const handleChange = (e) => {\r\n    // eslint-disable-next-line prefer-const\r\n    let { name, value } = e.target;\r\n    if (name === 'isActive') value = e.target.checked;\r\n    setContest({\r\n      ...contest,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validateContest = (item) => {\r\n    if (!item.title || item.title.trim().length <= 0) {\r\n      enqueueSnackbar('Title is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!item.examTime) {\r\n      enqueueSnackbar('Min is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    const regexNumber = /^\\d+$/;\r\n    // eslint-disable-next-line radix\r\n    const checkNumber = regexNumber.test(item.examTime);\r\n    if (!checkNumber) {\r\n      enqueueSnackbar('Min must a number', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!item.groupQuestion) {\r\n      enqueueSnackbar(\"You haven't choose group question\", {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (!item.startTime) {\r\n      enqueueSnackbar(\"You haven't set start time\", {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (item.endTime && item.startTime >= item.endTime) {\r\n      enqueueSnackbar('end time must greater than start time', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    let data = null;\r\n    if (!validateContest(contest)) return;\r\n\r\n    const contestData = {\r\n      ...contest,\r\n      groupQuestion: contest.groupQuestion,\r\n      isActive: contest.isActive || false,\r\n    };\r\n    if (itemSelect && itemSelect.id) {\r\n      data = await apis.contest.updateContest(itemSelect.id, contestData);\r\n    } else {\r\n      data = await apis.contest.createContest(contestData);\r\n    }\r\n    if (data && data.status) {\r\n      const { contest: newContest } = data.result;\r\n      const type = itemSelect && itemSelect.id ? 'UPDATE' : 'ADD';\r\n      handleUpdateContest(newContest, type);\r\n      enqueueSnackbar('Save data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Save data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = async (e) => {\r\n    const formData = new FormData();\r\n    const file = e.target.files[0];\r\n    formData.append('file', file);\r\n    const data = await apis.upload.uploadFile({ formData });\r\n    if (data && data.status) {\r\n      setContest({\r\n        ...contest,\r\n        imageUrl: data.result.link,\r\n      });\r\n    } else {\r\n      enqueueSnackbar('Upload failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Thông tin cuộc thi\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Tên cuộc thi\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            value={(contest && contest.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Mô tả chi tiết\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={5}\r\n            name=\"description\"\r\n            value={(contest && contest.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Thời gian thi(m)\"\r\n            variant=\"outlined\"\r\n            name=\"examTime\"\r\n            value={(contest && contest.examTime) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={2}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                type=\"file\"\r\n                onChange={handleUploadImage}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  fullWidth\r\n                  style={{\r\n                    height: '100%',\r\n                  }}\r\n                >\r\n                  TẢI ẢNH\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Link ảnh\"\r\n                variant=\"outlined\"\r\n                name=\"imageUrl\"\r\n                value={(contest && contest.imageUrl) || ''}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Ngày bắt đầu\r\n                </Typography>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={(contest && contest.startTime) || null}\r\n                  onChange={handleDateChange('startDate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Thời gian bắt đầu\r\n                </Typography>\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  value={(contest && contest.startTime) || null}\r\n                  onChange={handleDateChange('startTime')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Ngày kết thúc\r\n                </Typography>\r\n\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={(contest && contest.endTime) || null}\r\n                  onChange={handleDateChange('endDate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Thời gian kết thúc\r\n                </Typography>\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  value={(contest && contest.endTime) || null}\r\n                  onChange={handleDateChange('endTime')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Box>\r\n\r\n        <Box mb={2}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Bộ câu hỏi\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              value={contest && contest.groupQuestion}\r\n              name=\"groupQuestion\"\r\n              onChange={handleChange}\r\n              label=\"Group Question\"\r\n            >\r\n              {groupQuestions.map((el) => (\r\n                <MenuItem value={el.id} key={el.id}>\r\n                  <em>{el.title}</em>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Mã code (nếu có)\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={(contest && contest.password) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={(contest && contest.isActive) || false}\r\n                onChange={handleChange}\r\n                name=\"isActive\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Cuộc thi sẽ được hiển thị lên hệ thống\"\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContestModal;\r\n","export const COLOR = {\r\n  black: '#000000',\r\n  white: '#FFFFFF',\r\n  gray: {\r\n    100: '#F7FAFC',\r\n    200: '#EDF2F7',\r\n    300: '#E2E8F0',\r\n    400: '#CBD5E0',\r\n    500: '#A0AEC0',\r\n    600: '#718096',\r\n    700: '#4A5568',\r\n    800: '#2D3748',\r\n    900: '#1A202C',\r\n  },\r\n  red: {\r\n    100: '#FFF5F5',\r\n    200: '#FED7D7',\r\n    300: '#FEB2B2',\r\n    400: '#FC8181',\r\n    500: '#F56565',\r\n    600: '#E53E3E',\r\n    700: '#C53030',\r\n    800: '#9B2C2C',\r\n    900: '#742A2A',\r\n  },\r\n  orange: {\r\n    100: '#FFFAF0',\r\n    200: '#FEEBC8',\r\n    300: '#FBD38D',\r\n    400: '#F6AD55',\r\n    500: '#ED8936',\r\n    600: '#DD6B20',\r\n    700: '#C05621',\r\n    800: '#9C4221',\r\n    900: '#7B341E',\r\n  },\r\n  yellow: {\r\n    100: '#FFFFF0',\r\n    200: '#FEFCBF',\r\n    300: '#FAF089',\r\n    400: '#F6E05E',\r\n    500: '#ECC94B',\r\n    600: '#D69E2E',\r\n    700: '#B7791F',\r\n    800: '#975A16',\r\n    900: '#744210',\r\n  },\r\n  green: {\r\n    100: '#F0FFF4',\r\n    200: '#C6F6D5',\r\n    300: '#9AE6B4',\r\n    400: '#68D391',\r\n    500: '#48BB78',\r\n    600: '#38A169',\r\n    700: '#2F855A',\r\n    800: '#276749',\r\n    900: '#22543D',\r\n  },\r\n  teal: {\r\n    100: '#E6FFFA',\r\n    200: '#B2F5EA',\r\n    300: '#81E6D9',\r\n    400: '#4FD1C5',\r\n    500: '#38B2AC',\r\n    600: '#319795',\r\n    700: '#2C7A7B',\r\n    800: '#285E61',\r\n    900: '#234E52',\r\n  },\r\n  blue: {\r\n    100: '#EBF8FF',\r\n    200: '#BEE3F8',\r\n    300: '#90CDF4',\r\n    400: '#63B3ED',\r\n    500: '#4299E1',\r\n    600: '#3182CE',\r\n    700: '#2B6CB0',\r\n    800: '#2C5282',\r\n    900: '#2A4365',\r\n  },\r\n  indigo: {\r\n    100: '#EBF4FF',\r\n    200: '#C3DAFE',\r\n    300: '#A3BFFA',\r\n    400: '#7F9CF5',\r\n    500: '#667EEA',\r\n    600: '#5A67D8',\r\n    700: '#4C51BF',\r\n    800: '#434190',\r\n    900: '#3C366B',\r\n  },\r\n  purple: {\r\n    100: '#FAF5FF',\r\n    200: '#E9D8FD',\r\n    300: '#D6BCFA',\r\n    400: '#B794F4',\r\n    500: '#9F7AEA',\r\n    600: '#805AD5',\r\n    700: '#6B46C1',\r\n    800: '#553C9A',\r\n    900: '#44337A',\r\n  },\r\n  pink: {\r\n    100: '#FFF5F7',\r\n    200: '#FED7E2',\r\n    300: '#FBB6CE',\r\n    400: '#F687B3',\r\n    500: '#ED64A6',\r\n    600: '#D53F8C',\r\n    700: '#B83280',\r\n    800: '#97266D',\r\n    900: '#702459',\r\n  },\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { COLOR } from '../../styles/color';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  accordion: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n  question: {\r\n    fontWeight: 'bold',\r\n  },\r\n  heading: {\r\n    fontSize: theme.spacing(2.5),\r\n  },\r\n  detail: {\r\n    width: '100%',\r\n  },\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  redStatus: {\r\n    color: COLOR.red['500'],\r\n  },\r\n  greenStatus: { color: COLOR.green['500'] },\r\n  yellowStatus: { color: COLOR.yellow['500'] },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n","/* eslint-disable radix */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-nested-ternary */\r\n// eslint-disable-next-line\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport moment from 'moment';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  IconButton,\r\n  TablePagination,\r\n  Checkbox,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Lock as LockIcon,\r\n} from '@material-ui/icons';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport ContestModal from './ContestModal';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\n\r\nconst Contest = () => {\r\n  // const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [contests, setContests] = useState([]);\r\n  const [contestSelect, setContestSelect] = useState(null);\r\n  const [groupQuestions, setGroupQuestions] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    count: 100,\r\n  });\r\n\r\n  const fetchContests = async () => {\r\n    const data = await apis.contest.getContestsByUser();\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.metadata.count || 0,\r\n      });\r\n      setContests(result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchGroupQuestions = async (keyword) => {\r\n    const data = await apis.groupQuestion.getGroupQuestions(keyword);\r\n    if (data && data.status) {\r\n      setGroupQuestions(data.result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = async (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContests();\r\n    fetchGroupQuestions();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    setPagination({\r\n      ...pagination,\r\n      page: 0,\r\n    });\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setContestSelect(null);\r\n  };\r\n\r\n  const handleClickRow = (row) => (e) => {\r\n    e.preventDefault();\r\n    setContestSelect(row);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleUpdateContest = (item, type) => {\r\n    if (type === 'ADD') {\r\n      const newContests = [{ ...item }, ...contests];\r\n      setContests(newContests);\r\n      setKeySearch('');\r\n      handleCloseModal();\r\n      return;\r\n    }\r\n    const newContests = [...contests];\r\n    const pos = newContests.findIndex((el) => el.id === item.id);\r\n    newContests[pos] = { ...item };\r\n    handleCloseModal();\r\n    setContests(newContests);\r\n  };\r\n\r\n  const handleDeleteContest = async (id) => {\r\n    const data = await apis.contest.deleteContest(id);\r\n    if (data && data.status) {\r\n      const newContests = [...contests];\r\n      const pos = newContests.findIndex((el) => el.id === id);\r\n      newContests.splice(pos, 1);\r\n      setContests(newContests);\r\n      enqueueSnackbar('Delete data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const GreenCheckbox = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n  return (\r\n    <div>\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách cuộc thi\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n              onClick={handleOpenModalAdd}\r\n            >\r\n              Thêm cuộc thi\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">STT</TableCell>\r\n                <TableCell>Tên cuộc thi</TableCell>\r\n                <TableCell align=\"center\">Thời gian(phút)</TableCell>\r\n                <TableCell align=\"center\">Ngày</TableCell>\r\n                <TableCell align=\"center\">Mã code</TableCell>\r\n                <TableCell align=\"center\">Trạng thái</TableCell>\r\n                <TableCell />\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {contests\r\n                .filter((el) => el.title.indexOf(keySearch) >= 0)\r\n                .slice(\r\n                  pagination.page * pagination.rowsPerPage,\r\n                  pagination.page * pagination.rowsPerPage +\r\n                    pagination.rowsPerPage,\r\n                )\r\n                .map((row, index) => (\r\n                  <TableRow\r\n                    key={row.id}\r\n                    className={classes.row}\r\n                    onClick={handleClickRow(row)}\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      {pagination.page * pagination.rowsPerPage + index + 1}\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                      style={{\r\n                        maxWidth: 200,\r\n                      }}\r\n                    >\r\n                      {row.title}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.examTime}</TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" flexDirection=\"column\">\r\n                        <div> BD: {moment(row.startTime).format('LLL')}</div>\r\n                        <div>\r\n                          KT:{' '}\r\n                          {(row.endTime && moment(row.endTime).format('LLL')) ||\r\n                            ''}\r\n                        </div>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.password && (\r\n                        <Tooltip title={row.password}>\r\n                          <LockIcon />\r\n                        </Tooltip>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.isActive && (\r\n                        <Box\r\n                          style={{\r\n                            color: '#000',\r\n                            background: '#7beeab',\r\n                            borderRadius: 5,\r\n                            padding: 5,\r\n                          }}\r\n                        >\r\n                          active\r\n                        </Box>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box>\r\n                        <IconButton\r\n                          aria-label=\"delete\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDeleteContest(row.id);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          history.push(`/contest/${row.id}/exam/detail`);\r\n                        }}\r\n                      >\r\n                        Thống kê\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n          {contests.length > 0 && pagination.count > pagination.rowsPerPage && (\r\n            <TablePagination\r\n              component=\"div\"\r\n              rowsPerPageOptions={[pagination.rowsPerPage]}\r\n              count={\r\n                contests\r\n                  .filter((el) => el.title.indexOf(keySearch) >= 0)\r\n                  .slice(\r\n                    pagination.page * pagination.rowsPerPage,\r\n                    pagination.page * pagination.rowsPerPage +\r\n                      pagination.rowsPerPage,\r\n                  ).length\r\n              }\r\n              page={pagination.page}\r\n              onChangePage={handleChangePage}\r\n              rowsPerPage={pagination.rowsPerPage}\r\n            />\r\n          )}\r\n        </TableContainer>\r\n      </Box>\r\n      <ContestModal\r\n        open={openModal}\r\n        handleCloseModal={handleCloseModal}\r\n        itemSelect={contestSelect}\r\n        groupQuestions={groupQuestions}\r\n        handleUpdateContest={handleUpdateContest}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contest;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  listItem: {\r\n    background: '#fff',\r\n    padding: theme.spacing(2),\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n    borderRadius: theme.spacing(1),\r\n    fontSize: theme.spacing(2),\r\n    cursor: 'pointer',\r\n    marginBottom: theme.spacing(2),\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.active,\r\n    },\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    position: 'absolute',\r\n    width: '40%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, TextField, Box, Typography, Button } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\n\r\nconst GroupQuestionModal = ({ handleCloseModal, open, item, handleSave }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState(0);\r\n  const [groupQuestion, setGroupQuestion] = useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      setGroupQuestion({ ...item });\r\n      setState(1);\r\n    } else {\r\n      setGroupQuestion({\r\n        title: '',\r\n        description: '',\r\n      });\r\n      setState(0);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleChange = (e) => {\r\n    setGroupQuestion({\r\n      ...groupQuestion,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {state\r\n              ? 'Cập nhật thông tin bộ câu hỏi '\r\n              : 'Thêm thông tin bộ câu hỏi'}\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            placeholder=\"Nhập tiêu đề\"\r\n            name=\"title\"\r\n            value={(groupQuestion && groupQuestion.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            placeholder=\"Nhập mô tả chi tiết\"\r\n            name=\"description\"\r\n            value={(groupQuestion && groupQuestion.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave(groupQuestion)}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GroupQuestionModal;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Button,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Image as ImageIcon,\r\n  MoreVert as MoreVertIcon,\r\n} from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport GroupQuestionModal from './GroupQuestionModal';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport LoadingPage from '../../components/LoadingPage';\r\n\r\nlet timeOutId = null;\r\nconst GroupQuestion = () => {\r\n  const classes = useStyles();\r\n  // const { t } = useTranslation();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [groupQuestionSelected, setGroupQuestionSelected] = useState();\r\n  const [groupQuestions, setGroupQuestions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchGroupQuestions = async (keyword) => {\r\n    const data = await apis.groupQuestion.getGroupQuestions(keyword);\r\n    if (data && data.status) {\r\n      setGroupQuestions(data.result.data);\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGroupQuestions();\r\n  }, []);\r\n\r\n  const handleOpenToggle = (el) => (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setGroupQuestionSelected(el);\r\n  };\r\n\r\n  const handleCloseToggle = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenEdit = () => {\r\n    setAnchorEl(null);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    setAnchorEl(null);\r\n    try {\r\n      await apis.groupQuestion.deleteGroupQuestions(groupQuestionSelected.id);\r\n      const newGroupQuestions = [...groupQuestions];\r\n      const tempGroupQuestions = newGroupQuestions.filter(\r\n        (ele) => ele.id !== groupQuestionSelected.id,\r\n      );\r\n      setGroupQuestions(tempGroupQuestions);\r\n      enqueueSnackbar('Delete success', {\r\n        variant: 'success',\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setGroupQuestionSelected(null);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    clearTimeout(timeOutId);\r\n    timeOutId = setTimeout(() => {\r\n      fetchGroupQuestions(value);\r\n    }, 100);\r\n  };\r\n  const handleSave = (el) => async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (el.id) {\r\n      const { title, description, imageUrl } = el;\r\n      const data = await apis.groupQuestion.updateGroupQuestions(el.id, {\r\n        title,\r\n        description,\r\n        imageUrl,\r\n      });\r\n      if (data && data.status) {\r\n        setOpenModal(false);\r\n        const newGroupQuestions = [...groupQuestions];\r\n        const pos = newGroupQuestions.findIndex((ele) => ele.id === el.id);\r\n        newGroupQuestions[pos] = { ...data.result.groupQuestion };\r\n        setGroupQuestions(newGroupQuestions);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n      } else {\r\n        enqueueSnackbar((data && data.message) || 'Update failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    } else {\r\n      const { title, description, imageUrl } = el;\r\n      if (title.trim().length <= 0) {\r\n        enqueueSnackbar(\"Title doesn't empty \", { variant: 'error' });\r\n        return;\r\n      }\r\n      const data = await apis.groupQuestion.createGroupQuestion({\r\n        title,\r\n        description,\r\n        imageUrl,\r\n      });\r\n      if (data && data.status) {\r\n        setOpenModal(false);\r\n        const newGroupQuestions = [...groupQuestions];\r\n        newGroupQuestions.push({ ...data.result.groupQuestion });\r\n        setGroupQuestions(newGroupQuestions);\r\n        enqueueSnackbar('Create success', { variant: 'success' });\r\n      } else {\r\n        enqueueSnackbar((data && data.message) || 'Create failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickItem = (id) => () => {\r\n    history.push(`/groupQuestions/${id}/questions`);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách bộ câu hỏi\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddIcon />}\r\n            onClick={handleOpenModalAdd}\r\n          >\r\n            Thêm bộ câu hỏi\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      {groupQuestions.length === 0 ? (\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ color: '#ccc' }}\r\n        >\r\n          Không có dữ liệu\r\n        </Typography>\r\n      ) : (\r\n        <List>\r\n          {groupQuestions.map((el) => (\r\n            <ListItem\r\n              className={classes.listItem}\r\n              key={el.id}\r\n              onClick={handleClickItem(el.id)}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.textPrimary,\r\n                }}\r\n                primary={el.title}\r\n                secondary={el.description}\r\n              />\r\n              {/* <ListItemText>\r\n              <Box display=\"flex\" alignItems=\"flex-end\">\r\n                <Box mr={1}>\r\n                  <Typography variant=\"button\" component=\"h2\">\r\n                    Amount Question:\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  10\r\n                </Typography>\r\n              </Box>\r\n            </ListItemText> */}\r\n              <ListItemSecondaryAction>\r\n                <div onClick={handleOpenToggle(el)}>\r\n                  <IconButton edge=\"end\" aria-label=\"more\">\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      <Menu\r\n        classes={{\r\n          paper: classes.menusToggle,\r\n        }}\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleCloseToggle}\r\n      >\r\n        <MenuItem onClick={handleOpenEdit}>Sửa</MenuItem>\r\n        <MenuItem onClick={handleDelete}>Xóa</MenuItem>\r\n      </Menu>\r\n      <GroupQuestionModal\r\n        open={openModal}\r\n        item={groupQuestionSelected}\r\n        handleCloseModal={handleCloseModal}\r\n        handleSave={handleSave}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupQuestion;\r\n","export default ['EASY', 'MEDIUM', 'HARD'];\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '5%',\r\n    bottom: '5%',\r\n    left: '20%',\r\n    // transform: 'translate(-50%, 0%)',\r\n    position: 'absolute',\r\n    width: '60%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n  listAnswer: {\r\n    border: '1px solid #ccc',\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.spacing(0.5),\r\n    height: '300px',\r\n    overflow: 'auto',\r\n  },\r\n  textCreateAnswer: {\r\n    marginLeft: theme.spacing(0.5),\r\n  },\r\n  listAnswerContent: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport mongoid from 'mongoid-js';\r\nimport {\r\n  Modal,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  RootRef,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport { Remove as RemoveIcon, Add as AddIcon } from '@material-ui/icons';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport LevelsQuestion from '../../../data/levelsQuestion';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\n\r\nconst QuestionModal = ({\r\n  handleCloseModal,\r\n  open,\r\n  itemSelect,\r\n  handleUpdateQuestion,\r\n  groupQuestionId,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [question, setQuestion] = useState();\r\n  useEffect(() => {}, [open]);\r\n\r\n  useEffect(() => {\r\n    setQuestion(itemSelect);\r\n  }, [itemSelect, open]);\r\n\r\n  const handleAddAnswer = (e) => {\r\n    e.preventDefault();\r\n    const answerData = {\r\n      answerId: mongoid(),\r\n      position: (question && question.answers && question.answers.length) || 0,\r\n      content: '',\r\n      isCorrect: false,\r\n    };\r\n    setQuestion({\r\n      ...question,\r\n      answers:\r\n        question && question.answers\r\n          ? [...question.answers, answerData]\r\n          : [answerData],\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setQuestion({\r\n      ...question,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDeleteAnswer = (pos) => () => {\r\n    const newAnswers = question && question.answers;\r\n    newAnswers.splice(pos, 1);\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const handleEditAnswer = (pos) => (e) => {\r\n    const newAnswers = question && question.answers;\r\n    newAnswers[pos] = {\r\n      ...newAnswers[pos],\r\n      content: e.target.value,\r\n    };\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const validateQuestion = (item) => {\r\n    if (item.description.trim().length <= 0) {\r\n      enqueueSnackbar('Description is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (item.answers.length < 2) {\r\n      enqueueSnackbar('Must have at least 2 answers', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    const questionCorrect = item.answers.find((el) => el.isCorrect);\r\n    if (!questionCorrect) {\r\n      enqueueSnackbar('You have not chosen the correct answer', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    let data = null;\r\n    if (!validateQuestion(question)) return;\r\n    if (itemSelect && itemSelect.id) {\r\n      data = await apis.question.updateQuestion(itemSelect.id, {\r\n        ...question,\r\n        level: question.level || 'EASY',\r\n        groupQuestion: groupQuestionId,\r\n      });\r\n    } else {\r\n      data = await apis.question.createQuestion({\r\n        ...question,\r\n        level: question.level || 'EASY',\r\n        groupQuestion: groupQuestionId,\r\n      });\r\n    }\r\n    if (data && data.status) {\r\n      const { question: newQuestion } = data.result;\r\n      const type = itemSelect && itemSelect.id ? 'UPDATE' : 'ADD';\r\n      handleUpdateQuestion(newQuestion, type);\r\n      enqueueSnackbar('Save data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Save data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChooseCorrectAnswer = (pos) => () => {\r\n    let newAnswers = question && question.answers;\r\n    newAnswers = newAnswers.map((el, index) => ({\r\n      ...el,\r\n      isCorrect: index === pos,\r\n    }));\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n\r\n    ...(isDragging && {\r\n      background: 'rgb(235,235,235)',\r\n    }),\r\n  });\r\n\r\n  const handleDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const startIndex = result.source.index;\r\n    const endIndex = result.destination.index;\r\n    const newAnswers = question && question.answers;\r\n\r\n    newAnswers[startIndex].position = endIndex;\r\n    newAnswers[endIndex].position = startIndex;\r\n\r\n    const [removed] = newAnswers.splice(startIndex, 1);\r\n    newAnswers.splice(endIndex, 0, removed);\r\n\r\n    setQuestion({\r\n      ...question,\r\n      answers: newAnswers,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Thông tin câu hỏi\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>Cấp độ câu hỏi</InputLabel>\r\n            <Select\r\n              name=\"level\"\r\n              label=\"Cấp độ câu hỏi\"\r\n              value={(question && question.level) || 'EASY'}\r\n              onChange={handleChange}\r\n            >\r\n              {LevelsQuestion.map((el) => (\r\n                <MenuItem value={el} key={el}>\r\n                  {el}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Tiêu đề câu hỏi\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            value={(question && question.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nội dung câu hỏi\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={10}\r\n            name=\"description\"\r\n            value={(question && question.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2} className={classes.listAnswer}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            {/* <QuestionAnswerIcon /> */}\r\n\r\n            <Typography variant=\"h6\" className={classes.textCreateAnswer}>\r\n              Danh sách đáp án\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided) => (\r\n                  <RootRef rootRef={provided.innerRef}>\r\n                    <List>\r\n                      {question &&\r\n                        question.answers &&\r\n                        question.answers.map((item, index) => (\r\n                          <Draggable\r\n                            key={`item-${index}`}\r\n                            draggableId={`item-${index}`}\r\n                            index={index}\r\n                          >\r\n                            {(providedItem, snapshotItem) => (\r\n                              <ListItem\r\n                                ContainerComponent=\"li\"\r\n                                ContainerProps={{ ref: providedItem.innerRef }}\r\n                                {...providedItem.draggableProps}\r\n                                {...providedItem.dragHandleProps}\r\n                                style={getItemStyle(\r\n                                  snapshotItem.isDragging,\r\n                                  providedItem.draggableProps.style,\r\n                                )}\r\n                              >\r\n                                <ListItemIcon>\r\n                                  <div onClick={handleDeleteAnswer(index)}>\r\n                                    <IconButton>\r\n                                      <RemoveIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                  primary={\r\n                                    <Box>\r\n                                      <Checkbox\r\n                                        checked={item.isCorrect}\r\n                                        onChange={handleChooseCorrectAnswer(\r\n                                          index,\r\n                                        )}\r\n                                        inputProps={{\r\n                                          'aria-label': 'primary checkbox',\r\n                                        }}\r\n                                      />\r\n                                      <TextField\r\n                                        value={item.content}\r\n                                        onChange={handleEditAnswer(index)}\r\n                                      />\r\n                                    </Box>\r\n                                  }\r\n                                />\r\n                                <ListItemSecondaryAction />\r\n                              </ListItem>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                      {provided.placeholder}\r\n                    </List>\r\n                  </RootRef>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleAddAnswer}\r\n            >\r\n              Thêm\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Giải thích đáp án\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={5}\r\n            name=\"explain\"\r\n            value={(question && question.explain) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuestionModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    position: 'absolute',\r\n    width: '30%',\r\n    margin: '0 auto',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Modal, Box, Typography, Divider } from '@material-ui/core';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\n\r\nconst UploadInfoModal = ({ handleCloseModal, open }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box\r\n          mb={1}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Hướng dẫn tải file\r\n          </Typography>\r\n          <Box onClick={handleCloseModal}>\r\n            <CloseIcon style={{ color: '#ccc', cursor: 'pointer' }} />\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <Box mt={2}>\r\n          <Typography>\r\n            Bạn cần tạo file excel theo format dưới đây để hệ thống có thể đọc\r\n            được nội dụng 1 cách chính xác:{' '}\r\n            {/* <a\r\n              href=\"https://docs.google.com/spreadsheets/d/1f55YQ53WrT2acGgoaIzBXN9ZauLfpiipTqrWnLlGT44/edit?usp=sharing\"\r\n              target=\"_blank\"\r\n            >\r\n              link\r\n            </a>\r\n            <span>--</span> */}\r\n            <a\r\n              href=\"https://docs.google.com/spreadsheets/d/1aa0U3ezXc7FIGA-P_k6mIV-bVZV0QeiZoAUDbTdJUOY/edit?usp=drive_link\"\r\n              target=\"_blank\"\r\n            >\r\n              link file EXCEL\r\n            </a>\r\n          </Typography>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UploadInfoModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { COLOR } from '../../styles/color';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  accordion: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n  question: {\r\n    fontWeight: 'bold',\r\n  },\r\n  heading: {\r\n    fontSize: theme.spacing(2.5),\r\n  },\r\n  detail: {\r\n    width: '100%',\r\n  },\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  redStatus: {\r\n    color: COLOR.red['500'],\r\n  },\r\n  greenStatus: { color: COLOR.green['500'] },\r\n  yellowStatus: { color: COLOR.yellow['500'] },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n","/* eslint-disable radix */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport mongoid from 'mongoid-js';\r\nimport readXlsxFile from 'read-excel-file';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  IconButton,\r\n  TablePagination,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Backup as BackupIcon,\r\n  InfoOutlined as InfoIcon,\r\n} from '@material-ui/icons';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport QuestionModal from './QuestionModal';\r\nimport UploadInfoModal from './UploadInfoModal';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\n\r\nconst Question = () => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const { id: groupQuestionId } = useParams();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openModalUploadInfo, setOpenModalUploadInfo] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const [questionSelect, setQuestionSelect] = useState(null);\r\n  const [pagination, setPagination] = useState({\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    count: 100,\r\n  });\r\n\r\n  const fetchQuestions = async (param) => {\r\n    const offset =\r\n      param && param.offset >= 0\r\n        ? param.offset\r\n        : pagination.page * pagination.rowsPerPage;\r\n    const query = {\r\n      sort: (param && param.sort) || 'createdAt_desc',\r\n      key: param && param.key,\r\n      limit: (param && param.limit) || pagination.rowsPerPage,\r\n      offset,\r\n      groupQuestionId,\r\n    };\r\n    const data = await apis.question.getQuestionsInGroup({ ...query });\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.metadata.count || 0,\r\n      });\r\n      setQuestions(result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = async (event, newPage) => {\r\n    await fetchQuestions({\r\n      key: keySearch,\r\n      offset: newPage * pagination.rowsPerPage,\r\n    });\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    setPagination({\r\n      ...pagination,\r\n      page: 0,\r\n    });\r\n    await fetchQuestions({ key: value, offset: 0 });\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setQuestionSelect(null);\r\n  };\r\n\r\n  const handleOpenUploadInfoModal = (e) => {\r\n    e.preventDefault();\r\n    setOpenModalUploadInfo(true);\r\n  };\r\n\r\n  const handleCloseUploadInfoModal = () => {\r\n    setOpenModalUploadInfo(false);\r\n  };\r\n\r\n  const handleClickRow = (row) => (e) => {\r\n    e.preventDefault();\r\n    setQuestionSelect(row);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleUpdateQuestion = (item, type) => {\r\n    if (type === 'ADD') {\r\n      fetchQuestions({ offset: 0 });\r\n      setKeySearch('');\r\n      handleCloseModal();\r\n      return;\r\n    }\r\n    const newQuestions = [...questions];\r\n    const pos = newQuestions.findIndex((el) => el.id === item.id);\r\n    newQuestions[pos] = { ...item };\r\n    handleCloseModal();\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleDeleteQuestion = async (id) => {\r\n    const data = await apis.question.deleteQuestion(id);\r\n    if (data && data.status) {\r\n      fetchQuestions({ key: keySearch });\r\n      enqueueSnackbar('Delete data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateQuestionInExcel = (row) => {\r\n    const levels = ['EASY', 'MEDIUM', 'HARD'];\r\n    console.log(row[row.length - 1]);\r\n    const correctAnswer = parseInt(row[row.length - 1]);\r\n    const amountAnswer = row.length - 5;\r\n    console.log({ correctAnswer, amountAnswer });\r\n    if (\r\n      !row[0] ||\r\n      levels.indexOf(row[0]) < 0 ||\r\n      !row[2] ||\r\n      amountAnswer < 2 ||\r\n      !correctAnswer ||\r\n      correctAnswer < 1 ||\r\n      correctAnswer > amountAnswer\r\n    )\r\n      return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleImportExcel = (e) => {\r\n    e.preventDefault();\r\n    enqueueSnackbar('Data is being processed, which may take a few minutes ', {\r\n      variant: 'warning',\r\n    });\r\n    const file = e.target.files[0];\r\n    try {\r\n      readXlsxFile(file).then(async (rows) => {\r\n        console.log(rows);\r\n\r\n        await Promise.all(\r\n          rows.map(async (el) => {\r\n            const row = el\r\n              .filter((ele) => ele)\r\n              .map((ele) => ele.toString().trim());\r\n            if (validateQuestionInExcel(row)) {\r\n              const questionData = {\r\n                level: row[0],\r\n                title: row[1],\r\n                description: row[2],\r\n                explain: row[3],\r\n                answers: row.slice(4, row.length - 1).map((ele, index) => ({\r\n                  answerId: mongoid(),\r\n                  position: index,\r\n                  content: ele,\r\n                  isCorrect: parseInt(row[row.length - 1]) === index + 1,\r\n                })),\r\n              };\r\n              //console.log('123');\r\n              await apis.question.createQuestion({\r\n                ...questionData,\r\n                groupQuestion: groupQuestionId,\r\n              });\r\n            }\r\n          }),\r\n        );\r\n        fetchQuestions({ offset: 0 });\r\n        setKeySearch('');\r\n        enqueueSnackbar('Import data success', {\r\n          variant: 'success',\r\n        });\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Import data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box mr={1} display=\"flex\" alignItems=\"center\">\r\n            <Box mr={1} onClick={handleOpenUploadInfoModal}>\r\n              {/* <InfoIcon style={{ color: '#ccc', cursor: 'pointer' }} /> */}\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Tooltip title=\"Đọc kĩ hướng dẫn trước khi tải lên\">\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    style={{ color: '#fff', background: '#606060' }}\r\n                    component=\"span\"\r\n                    startIcon={\r\n                      <InfoIcon style={{ color: '#ccc', cursor: 'pointer' }} />\r\n                    }\r\n                  >\r\n                    Hướng dẫn\r\n                  </Button>\r\n                </Tooltip>\r\n              </label>\r\n            </Box>\r\n\r\n            <input\r\n              accept=\"*\"\r\n              className={classes.input}\r\n              id=\"contained-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={handleImportExcel}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Tooltip title=\"Đọc kĩ hướng dẫn ở icon bên cạnh trước khi tải lên\">\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  style={{ color: '#fff', background: 'green' }}\r\n                  component=\"span\"\r\n                  startIcon={<BackupIcon />}\r\n                >\r\n                  Tải lên\r\n                </Button>\r\n              </Tooltip>\r\n            </label>\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n              onClick={handleOpenModalAdd}\r\n            >\r\n              Thêm câu hỏi\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">STT</TableCell>\r\n                <TableCell>Tiêu đề câu hỏi</TableCell>\r\n                <TableCell>Cấp độ</TableCell>\r\n                <TableCell align=\"center\">Số lượng câu trả lời</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {questions.map((row, index) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  className={classes.row}\r\n                  onClick={handleClickRow(row)}\r\n                >\r\n                  <TableCell align=\"center\">\r\n                    {pagination.page * pagination.rowsPerPage + index + 1}\r\n                  </TableCell>\r\n                  <TableCell>{row.title}</TableCell>\r\n                  <TableCell\r\n                    classes={{\r\n                      body:\r\n                        row.level === 'HARD'\r\n                          ? classes.redStatus\r\n                          : row.level === 'MEDIUM'\r\n                          ? classes.yellowStatus\r\n                          : classes.greenStatus,\r\n                    }}\r\n                  >\r\n                    {row.level}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.answers && row.answers.length}\r\n                  </TableCell>\r\n                  <TableCell className={classes.actionBox}>\r\n                    <Box>\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteQuestion(row.id);\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          {questions.length > 0 &&\r\n            pagination.count > pagination.rowsPerPage && (\r\n              <TablePagination\r\n                component=\"div\"\r\n                rowsPerPageOptions={[pagination.rowsPerPage]}\r\n                count={pagination.count}\r\n                page={pagination.page}\r\n                onChangePage={handleChangePage}\r\n                rowsPerPage={pagination.rowsPerPage}\r\n              />\r\n            )}\r\n        </TableContainer>\r\n      </Box>\r\n      <QuestionModal\r\n        open={openModal}\r\n        groupQuestionId={groupQuestionId}\r\n        handleCloseModal={handleCloseModal}\r\n        itemSelect={questionSelect}\r\n        handleUpdateQuestion={handleUpdateQuestion}\r\n      />\r\n      <UploadInfoModal\r\n        open={openModalUploadInfo}\r\n        handleCloseModal={handleCloseUploadInfoModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  questionBox: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  listQuestionBox: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n  },\r\n  listInfo: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'left',\r\n    justifyContent: 'left',\r\n  },\r\n  questionSquare: {\r\n    border: '1px solid #eee',\r\n    width: '20px',\r\n    height: '20px',\r\n    margin: '2px',\r\n    borderRadius: '50px',\r\n    padding: theme.spacing(2),\r\n  },\r\n  fullscreen: {\r\n    background: '#fafafa',\r\n    zIndex: 99999,\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    width: '100%',\r\n    overflowX: 'hidden',\r\n    overflowY: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    position: 'fixed',\r\n    padding: theme.spacing(8),\r\n  },\r\n  prevent_copy_paste: {\r\n    userSelect: 'none' /* Ngăn chặn chọn text */,\r\n    '-moz-user-select': 'none' /* Firefox */,\r\n    '-webkit-user-select': 'none' /* Chrome, Safari, Opera */,\r\n    '-ms-user-select': 'none' /* Internet Explorer/Edge */,\r\n  },\r\n  answerRow: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      background: '#ccc',\r\n    },\r\n  },\r\n}));\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\n\r\nconst useUnsavedChangesWarning = (\r\n  message = 'Are you sure want to discard changes?',\r\n) => {\r\n  const [isDirty, setDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = isDirty && (() => message);\r\n\r\n    return () => {\r\n      window.onbeforeunload = null;\r\n    };\r\n  }, [isDirty]);\r\n\r\n  const routerPrompt = <Prompt when={isDirty} message={message} />;\r\n\r\n  return [routerPrompt, () => setDirty(true), () => setDirty(false)];\r\n};\r\n\r\nexport default useUnsavedChangesWarning;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable radix */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport {\r\n  Fullscreen as FullscreenIcon,\r\n  Send as SendIcon,\r\n  AccessTime as AccessTimeIcon,\r\n  FullscreenExit as FullscreenExitIcon,\r\n} from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport LoadingPage from '../../components/LoadingPage';\r\nimport { renderClockTime } from '../../utils/date';\r\nimport useUnsavedChangesWarning from './useUnsavedChangesWarning';\r\nimport { isImageUrlCheck } from '../../utils/string';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\nimport './ImageZoom.css'; // Import file CSS\r\n\r\nlet interval = null;\r\nconst alphabet = 'A B C D E F G H I K L M N O P Q R S T V X Y Z';\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ExamTest = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [Prompt, setDirty, setPristine] = useUnsavedChangesWarning(\r\n    'Hiện tại bài thi chưa được lưu, nếu bạn thoát mọi câu trả lời trong lần thi này sẽ bị hủy bỏ',\r\n  );\r\n  const [contest, setContest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [questionSelected, setQuestionSelected] = useState({});\r\n  const [timeDoExam, setTimeDoExam] = useState(0);\r\n  const [countWarnming, setcountWarnming] = useState(0);\r\n  const [countWarnmingF12, setcountWarnmingF12] = useState(0);\r\n  const [isMarking, setIsMarking] = useState(false);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openAlertF12, setOpenAlertF12] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(true); // Giả sử kết nối internet là có sẵn ban đầu\r\n  const [isZoomed, setZoomed] = useState(false);\r\n\r\n  const handleZoomToggle = () => {\r\n    setZoomed(!isZoomed);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const handleCloseF12 = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlertF12(false);\r\n  };\r\n\r\n  const handleChangeAnswer = (value) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionSelected.data.id]: value,\r\n    });\r\n  };\r\n\r\n  const handleFullscreen = (e) => {\r\n    e.preventDefault();\r\n    setIsFullscreen((prev) => !prev);\r\n  };\r\n\r\n  const handleFinishExam = async () => {\r\n    const examData = {\r\n      doTime: contest.examTime * 60 - timeDoExam,\r\n      contestId: contest.id,\r\n      groupQuestionId: contest.groupQuestion,\r\n      answers,\r\n    };\r\n    const data = await apis.contest.mark({\r\n      ...examData,\r\n    });\r\n    if (data && data.status) {\r\n      const { result } = data.result;\r\n      // eslint-disable-next-line no-alert\r\n      console.log(`mark done ${result.amountCorrectQuestion}`);\r\n      history.push(`/contest/${contest.id}/exam/detail?resultId=${result.id}`);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Mark failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStartExam = (examTime) => {\r\n    const startTime = new Date();\r\n    interval = setInterval(() => {\r\n      const now = new Date();\r\n      const timeDo = Math.floor((now - startTime) / 1000);\r\n      if (timeDo < examTime) {\r\n        setTimeDoExam(examTime - timeDo);\r\n      } else {\r\n        setTimeDoExam(0);\r\n        setIsMarking(true);\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const fetchContest = async () => {\r\n    const token = query.get('token');\r\n    const data = await apis.contest.getQuestions({ id, token });\r\n    if (data && data.status) {\r\n      const { contest: contestData } = data.result;\r\n      setContest(contestData);\r\n      setQuestionSelected({\r\n        position: 0,\r\n        data: contestData.questions[0],\r\n      });\r\n      setTimeDoExam(contestData.examTime * 60);\r\n      handleStartExam(contestData.examTime * 60);\r\n      setIsLoading(false);\r\n    } else {\r\n      history.push(`/contest/${id}/exam/detail`);\r\n    }\r\n  };\r\n  // Kiểm tra kết nối internet\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOnline(true);\r\n    };\r\n\r\n    const handleOffline = () => {\r\n      setIsOnline(false);\r\n    };\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setDirty();\r\n    fetchContest();\r\n    return () => {\r\n      console.log('clear interval');\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('load marking');\r\n    if (isMarking) {\r\n      setPristine();\r\n      handleFinishExam();\r\n    }\r\n  }, [isMarking]);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n      event.preventDefault();\r\n      event.returnValue = ''; // Một số trình duyệt yêu cầu một chuỗi trống để hiển thị thông báo mặc định\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, []);\r\n\r\n  // Chặn rời khỏi trang\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e) => {\r\n      const confirmationMessage = 'Bạn có chắc muốn rời khỏi trang này?';\r\n      console.log(confirmationMessage);\r\n      e.returnValue = confirmationMessage; // Standard for most browsers\r\n      return confirmationMessage; // For some older browsers\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, []);\r\n\r\n  // Chặn phím F12\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (countWarnmingF12 >= 2) {\r\n        alert('Bạn đã cố tình vị phạm quá 2 lần, bài thi sẽ bị hủy');\r\n        setIsMarking(true);\r\n        return;\r\n      }\r\n      // Kiểm tra nếu phím F12 được nhấn\r\n      // Chặn sử dụng phím tắt (ví dụ: Ctrl+Shift+I, F12)\r\n      if (e.key === 'F12' || (e.ctrlKey && e.shiftKey && e.key === 'I')) {\r\n        e.preventDefault();\r\n        setcountWarnmingF12(countWarnmingF12 + 1);\r\n        setOpenAlertF12(true);\r\n      }\r\n    };\r\n    document.addEventListener('contextmenu', (e) => {\r\n      e.preventDefault();\r\n    });\r\n    // Lắng nghe sự kiện keydown\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    // Xóa lắng nghe khi component unmount\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [countWarnmingF12]);\r\n\r\n  const handleClickQuestion = (pos) => (e) => {\r\n    e.preventDefault();\r\n    setQuestionSelected({\r\n      position: pos,\r\n      data: contest.questions[pos],\r\n    });\r\n  };\r\n\r\n  //Chặn phím PrintScreen và chụp màn hình\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === 'PrintScreen' && event.shiftKey && event.metaKey) {\r\n        event.preventDefault();\r\n        // Xử lý hoặc hiển thị thông báo khi người dùng cố gắng chụp ảnh màn hình\r\n        console.log('Chụp ảnh màn hình đã bị chặn!');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const captureScreenshot = async () => {\r\n    try {\r\n      /* const canvas = await html2canvas(document.body);\r\n      // Xử lý ảnh chụp được từ màn hình\r\n      console.log(canvas.toDataURL('image/png')); */\r\n    } catch (error) {\r\n      alert('Lỗi khi chụp màn hình:', error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n  if (isMarking) {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" style={{ color: '#ccc' }}>\r\n          The system is processing, wait a few second...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n  // Xử lí dạng ảnh dạng {{image_url}}} cho câu hỏi\r\n  const textString = questionSelected.data.description;\r\n  // const imageUrlRegex = /\\{\\{(.*?)\\}\\}/g;\r\n  const imageUrlRegex2 = /\\{(.*?)\\}/g;\r\n  const replacedString = textString.replace(\r\n    imageUrlRegex2,\r\n    (match, imageUrl) => {\r\n      if (isImageUrlCheck(imageUrl)) {\r\n        return `<img src=\"${imageUrl}\" alt=\"Hình ảnh test\" style=\"width: auto; height: 350px;\"  />`;\r\n      } else {\r\n        return imageUrl;\r\n      }\r\n    },\r\n  );\r\n  // Xử lí dạng ảnh dạng {{image_url}}} cho câu trả lời\r\n  const textString2 = questionSelected.data.answers;\r\n  textString2.forEach((item, index, array) => {\r\n    array[index].content = item.content.replace(\r\n      imageUrlRegex2,\r\n      (match, imageUrl) => {\r\n        if (isImageUrlCheck(imageUrl)) {\r\n          return `<img src=\"${imageUrl}\" alt=\"Hình ảnh test\" style=\"width: auto; height: 350px;\"  />`;\r\n        } else {\r\n          return imageUrl;\r\n        }\r\n      },\r\n    );\r\n  });\r\n  // console.log(textString2);\r\n\r\n  // Chống copy paste\r\n  const handleCopyPaste = (e) => {\r\n    e.preventDefault();\r\n    if (countWarnming >= 2) {\r\n      alert('Bạn đã copy-paste quá 2 lần, bài thi sẽ bị hủy');\r\n      setIsMarking(true);\r\n      return;\r\n    }\r\n    if (countWarnming == 1) {\r\n      console.log('Copy-paste is not allowed! lần 2');\r\n      setOpenAlert(true);\r\n      setcountWarnming(countWarnming + 1);\r\n      return;\r\n    }\r\n    console.log('Copy-paste is not allowed! lần 1');\r\n    setcountWarnming(1);\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  // // Thực hiện các hành động khác tùy thuộc vào trạng thái của DevTools\r\n  // DisableDevtool(options);\r\n  // console.log(DisableDevtool(options));\r\n\r\n  return (\r\n    <div\r\n      className={`${isFullscreen ? classes.fullscreen : ''} prevent_copy_paste`}\r\n      onCopy={handleCopyPaste}\r\n      onPaste={handleCopyPaste}\r\n    >\r\n      {/* <Prompt\r\n        when={!isMarking}\r\n        message={(location) =>\r\n          `Are you sure you want to go to ${location.pathname}`\r\n        }\r\n        \r\n      /> */}\r\n      {/* Snackbar */}\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={openAlert}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"warning\">\r\n          Cảnh bảo lần {countWarnming} !!! Không được phép Copy-paste\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={openAlertF12}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseF12}\r\n      >\r\n        <Alert onClose={handleCloseF12} severity=\"warning\">\r\n          Cảnh bảo {countWarnmingF12} !!! Còn cố ý sử dụng F12 thì bài thi sẽ bị\r\n          hủy\r\n        </Alert>\r\n      </Snackbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        flexWrap=\"wrap\"\r\n        mb={2}\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box mr={1}>\r\n            <AccessTimeIcon />\r\n          </Box>\r\n          <Typography\r\n            variant=\"button\"\r\n            display=\"block\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: 'bold',\r\n              fontSize: '16px',\r\n            }}\r\n          >\r\n            {renderClockTime(timeDoExam)}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box mr={0.5}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<SendIcon />}\r\n              onClick={() => {\r\n                setIsMarking(true);\r\n              }}\r\n              style={{ background: '#f16a73', color: '#fff', fontSize: '16px' }}\r\n            >\r\n              Nộp bài\r\n            </Button>\r\n          </Box>\r\n          <Box mr={0.5}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={\r\n                isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />\r\n              }\r\n              onClick={handleFullscreen}\r\n            >\r\n              {isFullscreen ? 'Thoát toàn màn hình' : 'Toàn màn hình '}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} md={9}>\r\n            <Paper className={classes.paper}>\r\n              <Box mb={0.5}>\r\n                <Typography gutterBottom style={{ textAlign: 'center' }}>\r\n                  Câu số {questionSelected && questionSelected.position + 1}\r\n                </Typography>\r\n                {/* <ModalImage /> */}\r\n                <Typography gutterBottom style={{ color: '#ccc' }}>\r\n                  {questionSelected &&\r\n                    questionSelected.data &&\r\n                    questionSelected.data.title}\r\n                </Typography>\r\n                <div variant=\"h6\" gutterBottom>\r\n                  {questionSelected && questionSelected.data && (\r\n                    <div dangerouslySetInnerHTML={{ __html: replacedString }} />\r\n                  )}\r\n                </div>\r\n                {/*  <Typography variant=\"h6\" gutterBottom>\r\n                  {questionSelected &&\r\n                    questionSelected.data &&\r\n                    questionSelected.data.description}\r\n                </Typography> */}\r\n              </Box>\r\n              <Box>\r\n                {questionSelected &&\r\n                  questionSelected.data &&\r\n                  questionSelected.data.answers\r\n                    .sort((a, b) => a.position - b.position)\r\n                    .map((el, index) => (\r\n                      <Box\r\n                        style={{\r\n                          background: `${\r\n                            answers[questionSelected.data.id] === el.answerId\r\n                              ? '#81d1a2'\r\n                              : '#eceff0'\r\n                          }`,\r\n                          padding: '20px 20px',\r\n                          marginBottom: '10px',\r\n                          borderRadius: '10px',\r\n                          border: '1px solid #ccc',\r\n                        }}\r\n                        className={classes.answerRow}\r\n                        onClick={() => handleChangeAnswer(el.answerId)}\r\n                      >\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: el.content,\r\n                          }}\r\n                        />\r\n                      </Box>\r\n                    ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Paper className={classes.questionBox}>\r\n              <Box mb={0.5}>\r\n                <Typography>Danh sách câu hỏi</Typography>\r\n              </Box>\r\n              <Box className={classes.listQuestionBox}>\r\n                {contest &&\r\n                  contest.questions.map((el, index) => (\r\n                    // console.log(el.description),\r\n                    <Button\r\n                      key={index}\r\n                      className={classes.questionSquare}\r\n                      style={\r\n                        questionSelected && questionSelected.position === index\r\n                          ? {\r\n                              background: '#f6a61f',\r\n                              color: '#fff',\r\n                            }\r\n                          : answers[el.id] && {\r\n                              background: '#eceff0',\r\n                              border: '1px solid #ccc',\r\n                            }\r\n                      }\r\n                      onClick={handleClickQuestion(index)}\r\n                    >\r\n                      {index + 1}\r\n                    </Button>\r\n                  ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      {Prompt}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamTest;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    borderLeft: '10px solid #4991e2',\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    //borderTop: '1px solid #ccc',\r\n  },\r\n}));\r\n","export default {\r\n  UPCOMING: 0,\r\n  HAPPENING: 1,\r\n  ENDED: 2,\r\n};\r\n","/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable consistent-return */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography, Box, TextField, Button } from '@material-ui/core';\r\n/* import {\r\n  Description as DescriptionIcon,\r\n  HourglassEmpty as HourglassEmptyIcon,\r\n} from '@material-ui/icons'; */\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport constants from '../../../constants';\r\nimport errorCodes from '../../../constants/errorCodes';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\n\r\nconst PrepareExam = ({ examId }) => {\r\n  const classes = useStyles();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const history = useHistory();\r\n  const [contest, setContest] = useState();\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const handleRedirectToExamTest = (contestToken) => {\r\n    history.push(`/contest/${examId}/exam/test?token=${contestToken}`);\r\n  };\r\n\r\n  const handleCheckPassword = async () => {\r\n    try {\r\n      const data = await apis.contest.verifyPassword({ id: examId, password });\r\n      if (data.status) {\r\n        const { contestToken } = data.result;\r\n        handleRedirectToExamTest(contestToken);\r\n      } else {\r\n        enqueueSnackbar(data.message || 'Check password failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar('Check password failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchContest = async () => {\r\n    const data = await apis.contest.getContest(examId);\r\n    if (data && data.status) {\r\n      const { contest: contestData } = data.result;\r\n      setContest(contestData);\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContest();\r\n  }, []);\r\n\r\n  const renderUpcomingStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Sắp diễn ra\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderHappeningStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Box display=\"flex\" mt={2}>\r\n          {contest.isLock && (\r\n            <TextField\r\n              size=\"small\"\r\n              id=\"outlined-basic\"\r\n              label=\"Nhập code\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          )}\r\n\r\n          <Button\r\n            style={{ marginLeft: 3 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              contest.isLock\r\n                ? handleCheckPassword()\r\n                : handleRedirectToExamTest();\r\n            }}\r\n          >\r\n            Thi\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderEndedStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Đã kết thúc\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderByStatus = () => {\r\n    if (contest) {\r\n      if (contest.status === constants.UPCOMING) return renderUpcomingStatus();\r\n      if (contest.status === constants.HAPPENING)\r\n        return renderHappeningStatus();\r\n      if (contest.status === constants.ENDED) return renderEndedStatus();\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.paper}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Tên: {contest && contest.title}\r\n        </Typography>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Mô tả: {(contest && contest.description) || ''}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Thời gian: {contest && contest.examTime}(m)\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            <p>\r\n              <strong class=\"\">Nội quy</strong>\r\n            </p>\r\n            <span>\r\n              - Không nhờ người khác thi hộ. <br />- Không sao chép câu trả lời\r\n              từ tài liệu trên internet.\r\n              <p>\r\n                <strong class=\"text-danger\" style={{ color: '#dc3545' }}>\r\n                  - Không thoát khỏi màn hình làm bài thi. Nếu bạn thoát khỏi\r\n                  màn hình bài thi, hệ thống tự động nộp bài và ghi nhận kết quả\r\n                  trước đó\r\n                </strong>\r\n              </p>\r\n            </span>\r\n          </Typography>\r\n        </Box>\r\n\r\n        {renderByStatus()}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrepareExam;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  active: {\r\n    background: '#f6a61f',\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  Paper,\r\n  TableBody,\r\n  Avatar,\r\n  TablePagination,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Highcharts from 'highcharts';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\nimport { renderClockTime } from '../../../utils/date';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ExamDetail = ({ examId, role, resultId }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [numberOfQuestion, setNumberOfQuestion] = useState(0);\r\n  const [pagination, setPagination] = useState({\r\n    count: 100,\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  const renderArrayFromNumberQuestion = () => {\r\n    const arr = [];\r\n\r\n    if (results.length > 0) {\r\n      const firstEle = results[0];\r\n      // eslint-disable-next-line operator-assignment\r\n      for (let i = 0; i <= firstEle.amountQuestion; i = i + 1) arr.push(0);\r\n    }\r\n    console.log(arr);\r\n    return [...arr];\r\n  };\r\n\r\n  const renderDataChart = () => {\r\n    const arr = renderArrayFromNumberQuestion(numberOfQuestion);\r\n    results.forEach((el) => {\r\n      // eslint-disable-next-line no-plusplus\r\n      arr[el.amountCorrectQuestion]++;\r\n    });\r\n    console.log({ arr });\r\n    return arr;\r\n  };\r\n\r\n  const highChartsRender = () => {\r\n    Highcharts.chart({\r\n      chart: {\r\n        type: ['column'],\r\n        renderTo: 'graph-summary-contest',\r\n      },\r\n      title: {\r\n        text: 'Thống kê kết quả',\r\n      },\r\n      xAxis: {\r\n        title: {\r\n          text: 'Số câu đúng',\r\n        },\r\n        categories: renderArrayFromNumberQuestion().map((el, index) => index),\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: 'Số người',\r\n        },\r\n      },\r\n      legend: {\r\n        layout: 'horizontal',\r\n        align: 'center',\r\n        verticalAlign: 'top',\r\n        borderWidth: 0,\r\n        itemDistance: 30,\r\n        margin: 5,\r\n        display: 'none',\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Số người',\r\n          data: renderDataChart(),\r\n          color: '#f6a61f',\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const fetchResults = async () => {\r\n    const data = await apis.contest.getResultByContest(examId);\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n\r\n      const resultIndex = result.data.findIndex((el) => el.id === resultId);\r\n      let page = 0;\r\n      if (resultIndex >= 0) {\r\n        page = Math.floor(resultIndex / pagination.rowsPerPage);\r\n      }\r\n      setResults(result.data);\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.data.length,\r\n        page,\r\n      });\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      highChartsRender();\r\n    }\r\n  }, [isLoading]);\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n  const redirectToDetailResult = (idContest, idExam) => {\r\n    // console.log({ idContest, idExam });\r\n    history.push(`/contest/${idContest}/exam/resultDetail=${idExam}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">No.</TableCell>\r\n                <TableCell>Tên</TableCell>\r\n                <TableCell align=\"center\">Số câu đúng</TableCell>\r\n                <TableCell align=\"center\">Thời gian(m)</TableCell>\r\n                <TableCell align=\"center\">Ngày</TableCell>\r\n                {role && <TableCell />}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {results\r\n                .slice(\r\n                  pagination.page * pagination.rowsPerPage,\r\n                  pagination.page * pagination.rowsPerPage +\r\n                    pagination.rowsPerPage,\r\n                )\r\n                .map((row, index) => (\r\n                  <TableRow\r\n                    key={row.id}\r\n                    className={classes.row}\r\n                    classes={{\r\n                      root: row.id === resultId && classes.active,\r\n                    }}\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      {pagination.page * pagination.rowsPerPage + index + 1}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                        <Avatar\r\n                          alt=\"avatar\"\r\n                          src={row.participant.avatar}\r\n                          style={{\r\n                            height: '25px',\r\n                            width: '25px',\r\n                            marginRight: '3px',\r\n                          }}\r\n                        />\r\n                        {row.participant.name}\r\n                      </Box>\r\n                      <Box>{row.participant.email}</Box>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.amountCorrectQuestion}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {renderClockTime(row.doTime)}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.createdAt).format('LLL')}\r\n                    </TableCell>\r\n                    {role && (\r\n                      <TableCell align=\"center\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            redirectToDetailResult(row.contest, row.id)\r\n                          }\r\n                        >\r\n                          Chi tiết\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n          {results.length <= 0 && (\r\n            <Typography\r\n              style={{\r\n                width: '100%',\r\n                padding: 10,\r\n                textAlign: 'center',\r\n                color: '#ccc',\r\n              }}\r\n            >\r\n              Không có dữ liệu\r\n            </Typography>\r\n          )}\r\n        </TableContainer>\r\n        {results.length > pagination.rowsPerPage && (\r\n          <TablePagination\r\n            component=\"div\"\r\n            rowsPerPageOptions={[pagination.rowsPerPage]}\r\n            count={pagination.count}\r\n            page={pagination.page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={pagination.rowsPerPage}\r\n          />\r\n        )}\r\n      </Box>\r\n      <Box mt={2}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Biều đồ\r\n        </Typography>\r\n        <div id=\"graph-summary-contest\" />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default ExamDetail;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({}));\r\n","// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport moment from 'moment';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  Typography,\r\n  TablePagination,\r\n} from '@material-ui/core';\r\nimport apis from '../../../apis';\r\nimport useStyles from './index.style';\r\nimport { renderClockTime } from '../../../utils/date';\r\n\r\nconst ExamHistory = ({ examId }) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [results, setResults] = useState([]);\r\n\r\n  const [pagination, setPagination] = useState({\r\n    count: 100,\r\n    page: 0,\r\n    rowsPerPage: 6,\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  const fetchResultsByUser = async () => {\r\n    const data = await apis.contest.getResultByUserInContest(examId);\r\n    if (data && data.status) {\r\n      setResults(data.result.data);\r\n      setPagination({\r\n        ...pagination,\r\n        count: data.result.data.length,\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchResultsByUser();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Lần</TableCell>\r\n              <TableCell align=\"center\">Số câu đúng </TableCell>\r\n              <TableCell align=\"center\">Thời gian(m)</TableCell>\r\n              <TableCell align=\"center\">Ngày</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {results\r\n              .slice(\r\n                pagination.page * pagination.rowsPerPage,\r\n                pagination.page * pagination.rowsPerPage +\r\n                  pagination.rowsPerPage,\r\n              )\r\n              .map((row, index) => (\r\n                <TableRow key={row.id} className={classes.row}>\r\n                  <TableCell align=\"center\">{index + 1}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.amountCorrectQuestion}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {renderClockTime(row.doTime)}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {moment(row.createdAt).format('DD/MM/YYYY h:mm:ss a')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n        {results.length <= 0 && (\r\n          <Typography\r\n            style={{\r\n              width: '100%',\r\n              padding: 10,\r\n              textAlign: 'center',\r\n              color: '#ccc',\r\n            }}\r\n          >\r\n            Không có dữ liệu\r\n          </Typography>\r\n        )}\r\n      </TableContainer>\r\n      {results.length > pagination.rowsPerPage && (\r\n        <TablePagination\r\n          component=\"div\"\r\n          rowsPerPageOptions={[pagination.rowsPerPage]}\r\n          count={pagination.count}\r\n          page={pagination.page}\r\n          onChangePage={handleChangePage}\r\n          rowsPerPage={pagination.rowsPerPage}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ExamHistory;\r\n","// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Box, Typography, Paper, Grid, Divider } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport ExamInformation from './ExamInformation';\r\nimport ExamRank from './ExamRank';\r\nimport ExamHistory from './ExamHistory';\r\nimport apis from '../../apis';\r\nimport PrepareExam from './ExamInformation';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst ExamDetail = () => {\r\n  const classes = useStyles();\r\n  const userInfo = useSelector((state) => state.auth.user);\r\n  const { id } = useParams();\r\n  const query = useQuery();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [role, setRole] = useState();\r\n\r\n  const fetchAccRoleInContest = async () => {\r\n    const data = await apis.contest.checkAccountRole({\r\n      contestId: id,\r\n      userId: userInfo.id,\r\n    });\r\n    if (data && data.status) {\r\n      setRole(data.result.role);\r\n    } else if (data && data.code !== 404) {\r\n      enqueueSnackbar(data.status || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAccRoleInContest();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <PrepareExam examId={id} /> */}\r\n      <Grid container spacing={1}>\r\n        {role && (\r\n          <>\r\n            <Grid item xs={12} md={6}>\r\n              <Paper className={classes.paper}>\r\n                <Box>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Thông tin bài thi\r\n                  </Typography>\r\n                  <Divider style={{ marginBottom: 20 }} />\r\n                  <ExamInformation examId={id} />\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Paper\r\n                className={classes.paper}\r\n                style={{ borderLeft: '10px solid #f16a73' }}\r\n              >\r\n                <Box style={{ minHeight: '230px' }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Lịch sử làm bài\r\n                  </Typography>\r\n                  <Divider style={{ marginBottom: 20 }} />\r\n                  <ExamHistory examId={id} />\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          </>\r\n        )}\r\n\r\n        <Grid item xs={12}>\r\n          <Paper\r\n            className={classes.paper}\r\n            style={{ borderLeft: '10px solid #48bb78' }}\r\n          >\r\n            <Box>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Bảng xếp hạng\r\n              </Typography>\r\n              <Divider style={{ marginBottom: 20 }} />\r\n              <ExamRank\r\n                examId={id}\r\n                role={role}\r\n                resultId={query.get('resultId')}\r\n              />\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default ExamDetail;\r\n","import { isImageUrlCheck } from '../utils/string';\r\n\r\nconst handleImageQuestion = (textString) => {\r\n  // const textString = questionSelected.data.description;\r\n  const imageUrlRegex2 = /\\{(.*?)\\}/g;\r\n  const replacedString = textString.replace(\r\n    imageUrlRegex2,\r\n    (match, imageUrl) => {\r\n      if (isImageUrlCheck(imageUrl)) {\r\n        return `<img src=\"${imageUrl}\" alt=\"Hình ảnh test\" style=\"width: auto; height: 350px;\"  />`;\r\n      } else {\r\n        return imageUrl;\r\n      }\r\n    },\r\n  );\r\n  return replacedString;\r\n};\r\n\r\nexport default handleImageQuestion;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable radix */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { Paper, Typography, Box, Grid, Button, Link } from '@material-ui/core';\r\nimport { AccessTime as AccessTimeIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport LoadingPage from '../../components/LoadingPage';\r\nimport { isImageUrlCheck } from '../../utils/string';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\nimport './ImageZoom.css'; // Import file CSS\r\nimport Cookies from 'js-cookie';\r\nimport { id } from 'date-fns/locale';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport handleImageQuestion from '../../utils/handleImage';\r\n\r\nlet interval = null;\r\nconst alphabet = 'A B C D E F G H I K L M N O P Q R S T V X Y Z';\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst DetailExamResult = () => {\r\n  const classes = useStyles();\r\n  const { id, idresultDetail } = useParams();\r\n  const [idContest, setidContest] = useState(id);\r\n  const [idExam, setidExam] = useState(idresultDetail);\r\n  //   console.log({ idContest, idExam });\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n\r\n  const [choice, setchoice] = useState([]);\r\n  const [ansQuestion, setansQuestion] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [contest, setContest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [participant, setparticipant] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [questionSelected, setQuestionSelected] = useState({});\r\n  const [isZoomed, setZoomed] = useState(false);\r\n  const user = Cookies.get('user');\r\n  //   console.log(user);\r\n  //   const handleZoomToggle = () => {\r\n  //     setZoomed(!isZoomed);\r\n  //   };\r\n\r\n  const fetchContest = async () => {\r\n    try {\r\n      const data = await apis.contest.getResultByContest(idContest);\r\n      if (data && data.status) {\r\n        //filter data by id result exam\r\n        // Sử dụng filter để lọc các đối tượng có trường id bằng idExam\r\n        const filteredArray = data.result.data.filter(\r\n          (item) => item.id == idExam,\r\n        );\r\n        // Sử dụng filter để lọc các đối tượng câu hỏi đã chọn\r\n        const filteredChoice = filteredArray[0].history.filter((item) => {\r\n          for (let index = 0; index < item.question.answers.length; index++) {\r\n            if (item.question.answers[index].answerId == item.choice) {\r\n              choice.push(item.question.answers[index].content);\r\n              //   return true; // Nếu muốn giữ lại đối tượng thỏa mãn điều kiện\r\n              // Hoặc sử dụng return item.question.answers[index]; nếu bạn muốn giữ lại đối tượng đó\r\n            }\r\n            if (item.question.answers[index].isCorrect) {\r\n              ansQuestion.push(item.question.answers[index].content);\r\n              //   return true; // Nếu muốn giữ lại đối tượng thỏa mãn điều kiện\r\n              // Hoặc sử dụng return item.question.answers[index]; nếu bạn muốn giữ lại đối tượng đó\r\n            }\r\n          }\r\n          //   return false; // Nếu không tìm thấy đối tượng thỏa mãn điều kiện\r\n        });\r\n        console.log(ansQuestion);\r\n        console.log(choice);\r\n        console.log(filteredChoice);\r\n        console.log(filteredArray[0].history);\r\n        setResult(filteredArray[0]);\r\n        setparticipant(filteredArray[0].participant);\r\n        setQuestions(filteredArray[0].history);\r\n        setIsLoading(false);\r\n      } else {\r\n        history.push(`/contest/${id}/exam/detail`);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (idContest) {\r\n      fetchContest();\r\n    }\r\n  }, [idContest]);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        href={`/contest/${idContest}/exam/detail`}\r\n      >\r\n        Quay Lại\r\n      </Button>\r\n      <p></p>\r\n      <Box>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} md={4}>\r\n            {participant && (\r\n              <Paper className={classes.questionBox}>\r\n                <Box mb={0.5}>\r\n                  <Typography>Thông tin kết quả bài thi</Typography>\r\n                </Box>\r\n                <Box className={classes.listInfo}>\r\n                  <Box mb={0.5}>\r\n                    <Typography>Họ tên: {participant.name} </Typography>\r\n                  </Box>\r\n                  <Box mb={0.5}>\r\n                    <Typography>Số ĐT: {participant.phoneNumber}</Typography>\r\n                  </Box>\r\n                  <Box mb={0.5}>\r\n                    <Typography>Email: {participant.email}</Typography>\r\n                  </Box>\r\n                  <Box mb={0.5}>\r\n                    <Typography>\r\n                      Bài thi trong: {result.doTime} (phút)\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mb={0.5}>\r\n                    <Typography>\r\n                      Số câu hỏi của đề: {result.amountQuestion} (Câu)\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mb={0.5}>\r\n                    <Typography>\r\n                      Số câu đúng: {result.amountCorrectQuestion} (Câu)\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mb={0.5}>\r\n                    <Typography>\r\n                      Chấm điểm :\r\n                      <strong style={{ color: 'red', fontSize: 'x-large' }}>\r\n                        {(\r\n                          (10 * parseInt(result.amountCorrectQuestion)) /\r\n                          parseInt(result.amountQuestion)\r\n                        ).toFixed(2)}{' '}\r\n                      </strong>\r\n                      (Điểm)\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Paper>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Paper className={classes.paper}>\r\n              {choice &&\r\n                questions.map((item, index) => (\r\n                  <Box key={index} p={0.5} m={2}>\r\n                    <Typography gutterBottom style={{ textAlign: 'left' }}>\r\n                      <strong>Câu số {index + 1}: </strong>\r\n                      {item.isCorrect ? (\r\n                        <span>\r\n                          <CheckCircleOutlineIcon\r\n                            style={{ color: 'green', marginBottom: '-5px' }}\r\n                          />\r\n                          <span style={{ color: 'green' }}>\r\n                            <strong>Đúng</strong> --\r\n                          </span>\r\n                        </span>\r\n                      ) : (\r\n                        <span>\r\n                          <ErrorIcon\r\n                            style={{ color: 'red', marginBottom: '-5px' }}\r\n                          />\r\n                          <span style={{ color: 'red' }}>\r\n                            <strong>Sai</strong> --\r\n                          </span>\r\n                        </span>\r\n                      )}{' '}\r\n                      <span>\r\n                        Mức độ: [\r\n                        {item.question.level == 'HARD'\r\n                          ? 'KHÓ'\r\n                          : item.question.level == 'MEDIUM'\r\n                          ? 'TRUNG BÌNH'\r\n                          : 'DỄ'}\r\n                        ]\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography gutterBottom style={{ color: '#ccc' }}>\r\n                      Tiêu đề: {item.question.title}\r\n                    </Typography>\r\n                    <span variant=\"h6\" gutterBottom>\r\n                      {item.question && (\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: handleImageQuestion(\r\n                              item.question.description,\r\n                            ),\r\n                          }}\r\n                          style={{\r\n                            padding: '5px',\r\n                            margin: '20px',\r\n                            border: '2px solid #ccc',\r\n                            borderRadius: '5px',\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                    <span\r\n                      variant=\"h6\"\r\n                      gutterBottom\r\n                      style={{ color: 'rgb(0 0 0 / 50%)' }}\r\n                    >\r\n                      <span\r\n                        style={{ textDecoration: 'underline', color: 'blue' }}\r\n                      >\r\n                        Đáp án đã chọn:\r\n                      </span>\r\n                      {choice[index] && (\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: handleImageQuestion(choice[index]),\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                    <span\r\n                      variant=\"h6\"\r\n                      gutterBottom\r\n                      style={{ color: 'rgb(0 0 0 / 50%)' }}\r\n                    >\r\n                      <span\r\n                        style={{ textDecoration: 'underline', color: 'green' }}\r\n                      >\r\n                        Đáp án đúng:\r\n                      </span>\r\n                      {ansQuestion[index] && (\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: handleImageQuestion(ansQuestion[index]),\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                    <Typography gutterBottom>\r\n                      <strong>Giải thích đáp án:</strong>{' '}\r\n                    </Typography>\r\n                    <span\r\n                      variant=\"h6\"\r\n                      gutterBottom\r\n                      style={{ color: 'rgb(0 0 0 / 50%)' }}\r\n                    >\r\n                      {item.question.explain && (\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: handleImageQuestion(item.question.explain),\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                  </Box>\r\n                ))}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailExamResult;\r\n","import Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Home from '../pages/Home';\r\nimport User from '../pages/User';\r\nimport Contest from '../pages/Contest';\r\nimport GroupQuestion from '../pages/GroupQuestion';\r\nimport Question from '../pages/Question';\r\nimport ExamTest from '../pages/ExamTest';\r\nimport ExamDetail from '../pages/ExamDetail';\r\nimport DetailExamResult from '../pages/DetailExamResult';\r\n// import DetailExamResult from '../containers/ExamTest/DetailExamResults';\r\nimport routes from '../constants/route';\r\n\r\nexport default [\r\n  {\r\n    path: routes.LOGIN,\r\n    component: Login,\r\n    // exact: true,\r\n    restricted: true,\r\n    isPrivate: false,\r\n  },\r\n  {\r\n    path: routes.REGISTER,\r\n    component: Register,\r\n    // exact: true,\r\n    restricted: true,\r\n    isPrivate: false,\r\n  },\r\n  {\r\n    path: routes.HOME,\r\n    component: Home,\r\n    // exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.USER,\r\n    component: User,\r\n    // exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.CONTEST,\r\n    component: Contest,\r\n    // exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.GROUP_QUESTIONS,\r\n    component: GroupQuestion,\r\n    // exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.QUESTION,\r\n    component: Question,\r\n    // exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.EXAM_TEST,\r\n    component: ExamTest,\r\n    // exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.EXAM_DETAIL,\r\n    component: ExamDetail,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.EXAM_RESULT_DETAIL,\r\n    component: DetailExamResult,\r\n    // exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport LoginContainer from '../containers/Login';\r\n\r\nexport default function Login() {\r\n  return <LoginContainer />;\r\n}\r\n","import React from 'react';\r\nimport RegisterContainer from '../containers/Register';\r\n\r\nexport default function Register() {\r\n  return <RegisterContainer />;\r\n}\r\n","import React from 'react';\r\nimport HomeContainer from '../containers/Home';\r\n\r\nexport default function Home() {\r\n  return <HomeContainer />;\r\n}\r\n","import React from 'react';\r\nimport UserContainer from '../containers/User';\r\n\r\nexport default function User() {\r\n  return <UserContainer />;\r\n}\r\n","import React from 'react';\r\nimport ContestContainer from '../containers/Contest';\r\n\r\nexport default function Contest() {\r\n  return <ContestContainer />;\r\n}\r\n","import React from 'react';\r\nimport GroupQuestionContainer from '../containers/GroupQuestion';\r\n\r\nexport default function GroupQuestion() {\r\n  return <GroupQuestionContainer />;\r\n}\r\n","import React from 'react';\r\nimport QuestionContainer from '../containers/Question';\r\n\r\nexport default function Question() {\r\n  return <QuestionContainer />;\r\n}\r\n","import React from 'react';\r\nimport ExamTestContainer from '../containers/ExamTest';\r\n\r\nexport default function Exam() {\r\n  return <ExamTestContainer />;\r\n}\r\n","import React from 'react';\r\nimport ExamDetailContainer from '../containers/ExamDetail';\r\n\r\nexport default function ExamDetail() {\r\n  return <ExamDetailContainer />;\r\n}\r\n","import React from 'react';\r\n// import ExamDetailContainer from '../containers/ExamDetail';\r\nimport DetailExamResults from '../containers/ExamTest/DetailExamResults';\r\nexport default function DetailExamResult() {\r\n  return <DetailExamResults />;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { getCookie } from '../utils/cookie';\r\nimport routes from '../constants/route';\r\nimport appRoutes from './appRoutes';\r\nimport actions from '../redux/actions';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const { accessToken, verifying } = useSelector((state) => state.auth);\r\n  //console.log({ verifying });\r\n  const [isFirstTime, setIsFirstTime] = useState(true);\r\n  useEffect(() => {\r\n    if (!accessToken) {\r\n      const accessTokenFromCookie = getCookie('accessToken');\r\n      if (accessTokenFromCookie) {\r\n        dispatch(actions.auth.verifyToken(accessTokenFromCookie));\r\n      }\r\n    }\r\n    setIsFirstTime(false);\r\n  }, []);\r\n  //console.log({ isFirstTime });\r\n  if (isFirstTime || verifying) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        {appRoutes.map(\r\n          ({\r\n            path,\r\n            exact = true,\r\n            component: Component,\r\n            isPrivate = false,\r\n            ...rest\r\n          }) => {\r\n            if (!isPrivate) {\r\n              return (\r\n                <PublicRoute\r\n                  key={path}\r\n                  exact={exact}\r\n                  path={path}\r\n                  Component={Component}\r\n                  {...rest}\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <PrivateRoute\r\n                key={path}\r\n                exact={exact}\r\n                path={path}\r\n                Component={Component}\r\n                {...rest}\r\n              />\r\n            );\r\n          },\r\n        )}\r\n        <Redirect to={routes.HOME} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import { actionTypes } from './actions';\r\n\r\nexport const initialState = {\r\n  accessToken: null,\r\n  isLoggingIn: false,\r\n  verifying: false,\r\n  loginCode: null,\r\n  status: null,\r\n  message: null,\r\n  user: null,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN:\r\n      return { ...state, isLoggingIn: true };\r\n\r\n    case actionTypes.LOGIN_SUCCESS: {\r\n      const { accessToken, user } = action;\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        status: 1,\r\n        accessToken,\r\n        user,\r\n      };\r\n    }\r\n\r\n    case actionTypes.LOGIN_FAILURE: {\r\n      const { code, message } = action;\r\n      return {\r\n        ...state,\r\n        loginCode: code,\r\n        message,\r\n        status: 0,\r\n        isLoggingIn: false,\r\n      };\r\n    }\r\n\r\n    case actionTypes.VERIFY_TOKEN:\r\n      return { ...state, verifying: true };\r\n\r\n    case actionTypes.VERIFY_TOKEN_SUCCESS: {\r\n      const { accessToken, user } = action;\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        accessToken,\r\n        user,\r\n        status: 1,\r\n      };\r\n    }\r\n\r\n    case actionTypes.VERIFY_TOKEN_FAILURE:\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        status: 0,\r\n        user: null,\r\n        accessToken: null,\r\n      };\r\n\r\n    case actionTypes.LOGOUT:\r\n      return { ...state, status: 0, accessToken: null, user: null };\r\n\r\n    case actionTypes.UPDATE_USER: {\r\n      const { user } = action;\r\n      return { ...state, user };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth, { initialState as authInitialState } from './auth/reducer';\r\n\r\nexport const initialState = {\r\n  auth: authInitialState,\r\n};\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","/* eslint-disable no-case-declarations */\r\nimport { put, all, takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport apis from '../../apis';\r\nimport actions from '../actions';\r\nimport { setCookie } from '../../utils/cookie';\r\nimport loginType from '../../constants/loginType';\r\n\r\nfunction* loginSaga(data) {\r\n  try {\r\n    const A_WEEK = 7 * 24 * 60 * 60 * 1000;\r\n    let res = null;\r\n    switch (data && data.loginType) {\r\n      case loginType.LOGIN_GOOGLE:\r\n        const { tokenId } = data;\r\n        res = yield apis.auth.loginByGoogle(tokenId);\r\n        break;\r\n      case loginType.LOGIN_FACEBOOK:\r\n        const { accessToken, userID } = data;\r\n        res = yield apis.auth.loginByFacebook({ accessToken, userID });\r\n        break;\r\n      default:\r\n        const { email, password } = data;\r\n        res = yield apis.auth.login(email, password);\r\n    }\r\n\r\n    if (res.status) {\r\n      const { accessToken, user } = res.result;\r\n      setCookie('accessToken', accessToken, A_WEEK);\r\n      setCookie('user', JSON.stringify(user), A_WEEK);\r\n      yield put(actions.auth.loginSuccess(accessToken, user));\r\n    } else {\r\n      const { code, message } = res;\r\n      yield put(actions.auth.loginFailure(code, message));\r\n    }\r\n  } catch (error) {\r\n    yield put(actions.auth.loginFailure());\r\n  }\r\n}\r\n\r\nfunction* verifyTokenSaga({ accessToken }) {\r\n  try {\r\n    const data = yield apis.auth.verify(accessToken);\r\n    if (!data.status) throw new Error();\r\n    const { user } = data.result;\r\n    if (user) {\r\n      yield put(actions.auth.verifyTokenSuccess(accessToken, user));\r\n    } else {\r\n      yield put(actions.auth.verifyTokenFailure());\r\n    }\r\n  } catch (error) {\r\n    yield put(actions.auth.verifyTokenFailure());\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    takeLatest(actions.auth.actionTypes.LOGIN, loginSaga),\r\n    takeEvery(actions.auth.actionTypes.VERIFY_TOKEN, verifyTokenSaga),\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport authSagas from './auth/sagas';\r\n\r\nfunction* rootSaga() {\r\n  yield all([authSagas()]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer, { initialState } from './reducer';\r\nimport rootSaga from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension'); // eslint-disable-line import/no-extraneous-dependencies, global-require\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(preloadedState = initialState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    bindMiddleware([sagaMiddleware]),\r\n  );\r\n\r\n  store.runSagaTask = () => {\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  };\r\n\r\n  store.runSagaTask();\r\n  return store;\r\n}\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Highcharts from 'highcharts';\r\nimport './index.css';\r\nimport { SnackbarProvider } from 'notistack';\r\n// import MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './languages';\r\nimport Router from './router';\r\nimport store from './redux/store';\r\nimport html2canvass from 'html2canvas';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nwindow.Highcharts = Highcharts;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GoogleOAuthProvider clientId=\"108546913060-gdier6c25mddr862bvqg57b60cil467h.apps.googleusercontent.com\">\r\n      <MuiThemeProvider theme={theme}>\r\n        <Provider store={store()}>\r\n          <SnackbarProvider>\r\n            <Router />\r\n          </SnackbarProvider>\r\n        </Provider>\r\n      </MuiThemeProvider>\r\n    </GoogleOAuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}