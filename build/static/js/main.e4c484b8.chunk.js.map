{"version":3,"sources":["theme.js","serviceWorker.js","languages/index.js","constants/route.js","router/PublicRoute.jsx","redux/auth/actions.js","redux/actions.js","components/Layout/index.style.js","utils/cookie.js","components/Layout/index.jsx","router/PrivateRoute.jsx","constants/image.js","containers/Login/index.style.js","constants/loginType.js","utils/string.js","containers/Register/index.style.js","apis/api.js","apis/auth.js","apis/user.js","apis/groupQuestion.js","apis/question.js","apis/contest.js","apis/upload.js","apis/index.js","containers/Register/register.jsx","containers/Login/Login.jsx","containers/Login/index.jsx","containers/Register/index.jsx","containers/Home/TabDetail/index.style.js","containers/Home/TabDetail/index.jsx","containers/Home/index.style.js","components/LoadingPage/index.jsx","containers/Home/index.jsx","containers/User/index.style.js","containers/User/UserInformation/index.style.js","containers/User/UserInformation/index.jsx","containers/User/ChangePassword/index.style.js","containers/User/ChangePassword/index.jsx","containers/User/index.jsx","components/SearchBox/index.jsx","containers/Contest/ContestModal/index.style.js","utils/date.js","containers/Contest/ContestModal/index.jsx","styles/color.js","containers/Contest/index.style.js","containers/Contest/index.jsx","containers/GroupQuestion/index.style.js","containers/GroupQuestion/GroupQuestionModal/index.style.js","containers/GroupQuestion/GroupQuestionModal/index.jsx","containers/GroupQuestion/index.jsx","data/levelsQuestion.js","containers/Question/QuestionModal/index.style.js","containers/Question/QuestionModal/index.jsx","containers/Question/UploadInfoModal/index.style.js","containers/Question/UploadInfoModal/index.jsx","containers/Question/index.style.js","containers/Question/index.jsx","containers/ExamTest/index.style.js","containers/ExamTest/useUnsavedChangesWarning.js","containers/Image/index.jsx","containers/ExamTest/index.jsx","containers/ExamDetail/index.style.js","containers/ExamDetail/ExamInformation/index.style.js","constants/index.js","containers/ExamDetail/ExamInformation/index.jsx","containers/ExamDetail/ExamRank/index.style.js","containers/ExamDetail/ExamRank/index.jsx","containers/ExamDetail/ExamHistory/index.style.js","containers/ExamDetail/ExamHistory/index.jsx","containers/ExamDetail/index.jsx","router/appRoutes.js","pages/Login.jsx","pages/Register.jsx","pages/Home.jsx","pages/User.jsx","pages/Contest.jsx","pages/GroupQuestion.jsx","pages/Question.jsx","pages/ExamTest.jsx","pages/ExamDetail.jsx","router/index.jsx","redux/auth/reducer.js","redux/reducer.js","redux/auth/sagas.js","redux/saga.js","redux/store.js","index.jsx"],"names":["initialCustomTheme","createTheme","palette","primary","blue","secondary","lightBlue","active","boxShadow","boxShadow_l1","black","grey","greyWhile","border","l1","typography","fontFamily","overrides","MuiDrawer","paper","position","overflowY","zIndex","drawer","breakpoints","values","xs","sm","md","lg","xl","Boolean","window","location","hostname","match","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enTranslation","vi","viTranslation","fallbackLng","interpolation","escapeValue","nsSeparator","keySeparator","PublicRoute","_ref","Component","restricted","rest","accessToken","useSelector","state","auth","React","createElement","Route","Object","assign","render","props","Redirect","to","routes","actionTypes","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","VERIFY_TOKEN","VERIFY_TOKEN_SUCCESS","VERIFY_TOKEN_FAILURE","LOGOUT","UPDATE_USER","login","loginType","data","type","loginSuccess","user","loginFailure","code","message","verifyToken","verifyTokenSuccess","verifyTokenFailure","logout","updateUser","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","concat","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","textTransform","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","link","textDecoration","color","avatar","listItem","background","setCookie","cname","cvalue","extime","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","name","ca","split","i","length","c","charAt","substring","indexOf","menus","heading","icon","DashboardIcon","route","TimerIcon","AssignmentIcon","PersonIcon","Layout","children","classes","useStyles","open","setOpen","useState","dispatch","useDispatch","userInfo","pathname","useLocation","anchorEl","setAnchorEl","handleOpenMenuHeader","event","currentTarget","handleDrawerClose","useEffect","test","navigator","userAgent","innerWidth","console","log","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","handleDrawerOpen","MenuIcon","Avatar","src","Typography","component","variant","noWrap","Box","alt","Menu","id","keepMounted","onClose","handleCloseMenuHeader","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleLogout","actions","Drawer","ChevronLeftIcon","Divider","List","map","el","index","Link","key","ListItem","button","ListItemIcon","ListItemText","Container","maxWidth","PrivateRoute","image","backgroundImage","backgroundRepeat","backgroundColor","backgroundSize","backgroundPosition","margin","main","form","marginTop","submit","divider","validateEmail","email","String","toLowerCase","axiosClient","axios","baseURL","process","responseType","timeout","interceptors","request","async","config","headers","Authorization","response","camelCase","deep","error","password","api","method","url","loginByGoogle","tokenId","loginByFacebook","userID","register","_ref2","verify","changePassword","getGroupQuestions","params","createGroupQuestion","updateGroupQuestions","deleteGroupQuestions","getQuestionsInGroup","limit","offset","sort","fields","groupQuestionId","getQuestion","createQuestion","updateQuestion","deleteQuestion","getContests","param","getContestsJoined","getContestsByUser","getContest","createContest","updateContest","deleteContest","verifyPassword","getQuestions","token","mark","_ref3","doTime","contestId","answers","getResultByContest","getResultByUserInContest","checkAccountRole","_ref4","userId","uploadFile","formData","API","uploadAvatar","groupQuestion","question","contest","upload","Register2","isLogin","handleLoginOrRegister","history","useHistory","enqueueSnackbar","useSnackbar","setUser","userError","setUserError","Grid","item","Paper","elevation","square","LockOutlinedIcon","noValidate","TextField","required","fullWidth","label","autoComplete","value","onChange","e","target","helperText","autoFocus","Button","preventDefault","validateRegister","countError","prev","apis","status","push","justify","Login2","setEmail","emailError","setEmailError","setPassword","passwordError","setPasswordError","isLoggingIn","handleLogin","validateLogin","onKeyPress","mt","gutterBottom","align","Login","setisLogin","nd","Register","media","date","TabDetail","t","useTranslation","Card","CardHeader","createdBy","action","style","examTime","subheader","CardMedia","imageUrl","CardActions","AccessTimeIcon","fontSize","moment","startTime","format","marginBottom","LoadingPage","contestsDefault","Home","tab","setTab","isLoading","setIsLoading","contests","setContests","contestsJoined","setContestsJoined","result","fetchContests","raw","_templateObject","_taggedTemplateLiteral","Fragment","mb","Tabs","newValue","newContests","filter","endTime","fetchContestsJoined","indicatorColor","textColor","Tab","stepper","buttons","paperImage","input","large","borderRadius","opacity","btnCamera","cursor","top","left","transform","buttonDelete","User","setUserInfo","handleChange","accept","FormData","file","files","append","htmlFor","PhotoCameraIcon","textAlign","disabled","phoneNumber","urlFacebook","urlYoutube","urlWebsite","size","dob","trim","alert","paddingLeft","ChangePassword","currentPassword","newPassword","confirmNewPassword","UserInformation","renderTab","find","SearchBox","handleSearch","InputProps","startAdornment","InputAdornment","SearchIcon","placeholder","bottom","shadows","outline","listAnswer","textCreateAnswer","listAnswerContent","formControl","getDate","day","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","dateSet","setHours","setMinutes","setSeconds","setDate","setMonth","setYear","renderClockTime","time","hours","Math","floor","minutes","seconds","hoursString","slice","minutesString","secondsString","ContestModal","handleCloseModal","itemSelect","handleUpdateContest","groupQuestions","setContest","handleDateChange","checked","Modal","aria-labelledby","aria-describedby","multiline","rows","description","MuiPickersUtilsProvider","utils","DateFnsUtils","KeyboardDatePicker","inputVariant","KeyboardButtonProps","KeyboardTimePicker","FormControl","InputLabel","Select","labelId","FormControlLabel","control","Checkbox","isActive","mr","validateContest","contestData","newContest","COLOR","100","200","300","400","500","600","700","800","900","textPrimary","fontWeight","accordion","menusToggle","detail","actionBox","row","redStatus","greenStatus","yellowStatus","Contest","openModal","setOpenModal","keySearch","setKeySearch","contestSelect","setContestSelect","setGroupQuestions","pagination","setPagination","rowsPerPage","page","count","metadata","keyword","fetchGroupQuestions","handleClickRow","withStyles","green","startIcon","AddIcon","TableContainer","Table","table","TableHead","TableRow","TableCell","TableBody","Tooltip","LockIcon","stopPropagation","pos","findIndex","splice","handleDeleteContest","DeleteIcon","TablePagination","rowsPerPageOptions","onChangePage","newPage","GroupQuestionModal","handleSave","setState","setGroupQuestion","timeOutId","GroupQuestion","groupQuestionSelected","setGroupQuestionSelected","handleOpenToggle","clearTimeout","setTimeout","ListItemAvatar","ImageIcon","ListItemSecondaryAction","MoreVertIcon","handleCloseToggle","handleOpenEdit","tempGroupQuestions","ele","newGroupQuestions","QuestionModal","handleUpdateQuestion","setQuestion","handleEditAnswer","newAnswers","handleChooseCorrectAnswer","isCorrect","level","LevelsQuestion","DragDropContext","onDragEnd","destination","startIndex","source","endIndex","removed","Droppable","droppableId","provided","RootRef","rootRef","innerRef","Draggable","draggableId","providedItem","snapshotItem","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","RemoveIcon","inputProps","answerData","answerId","mongoid","explain","validateQuestion","newQuestion","UploadInfoModal","CloseIcon","href","Question","useParams","openModalUploadInfo","setOpenModalUploadInfo","questions","setQuestions","questionSelect","setQuestionSelect","fetchQuestions","query","InfoIcon","multiple","readXlsxFile","then","Promise","all","toString","correctAnswer","parseInt","amountAnswer","validateQuestionInExcel","questionData","BackupIcon","body","handleDeleteQuestion","newQuestions","handleCloseUploadInfoModal","questionBox","listQuestionBox","flexWrap","questionSquare","fullscreen","prevent_copy_paste","userSelect","answerRow","useUnsavedChangesWarning","arguments","undefined","isDirty","setDirty","onbeforeunload","routerPrompt","Prompt","when","ModalImage","interval","Alert","MuiAlert","ExamTest","URLSearchParams","search","setPristine","setAnswers","questionSelected","setQuestionSelected","timeDoExam","setTimeDoExam","countWarnming","setcountWarnming","countWarnmingF12","setcountWarnmingF12","isMarking","setIsMarking","isFullscreen","setIsFullscreen","openAlert","setOpenAlert","openAlertF12","setOpenAlertF12","isOnline","setIsOnline","handleClose","reason","handleCloseF12","fetchContest","get","setInterval","now","timeDo","clearInterval","handleStartExam","handleOnline","handleOffline","addEventListener","removeEventListener","examData","amountCorrectQuestion","handleFinishExam","handleBeforeUnload","returnValue","handleKeyDown","ctrlKey","shiftKey","metaKey","replacedString","replace","handleCopyPaste","onCopy","onPaste","Snackbar","autoHideDuration","severity","SendIcon","FullscreenExitIcon","FullscreenIcon","dangerouslySetInnerHTML","__html","a","b","handleChangeAnswer","borderLeft","PrepareExam","examId","handleRedirectToExamTest","contestToken","renderHappeningStatus","isLock","handleCheckPassword","class","renderByStatus","constants","ExamDetail","role","resultId","results","setResults","numberOfQuestion","setNumberOfQuestion","renderArrayFromNumberQuestion","arr","firstEle","amountQuestion","renderDataChart","forEach","resultIndex","fetchResults","Highcharts","chart","renderTo","text","xAxis","categories","yAxis","legend","layout","verticalAlign","borderWidth","itemDistance","series","participant","createdAt","handleChangePage","ExamHistory","fetchResultsByUser","setRole","fetchAccRoleInContest","ExamInformation","minHeight","ExamRank","path","LoginContainer","exact","isPrivate","RegisterContainer","HomeContainer","UserContainer","ContestContainer","GroupQuestionContainer","QuestionContainer","ExamTestContainer","ExamDetailContainer","verifying","isFirstTime","setIsFirstTime","accessTokenFromCookie","CircularProgress","BrowserRouter","Switch","appRoutes","initialState","loginCode","authInitialState","combineReducers","loginSaga","A_WEEK","res","put","verifyTokenSaga","Error","rootSaga","takeLatest","takeEvery","authSagas","sagaMiddleware","createSagaMiddleware","bindMiddleware","middleware","applyMiddleware","configureStore","preloadedState","store","createStore","rootReducer","runSagaTask","sagaTask","run","ReactDOM","StrictMode","MuiThemeProvider","Provider","SnackbarProvider","Router","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4c484b8.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\nimport { blue, lightBlue, grey } from '@material-ui/core/colors';\r\n\r\nconst initialCustomTheme = createTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: lightBlue,\r\n    active: '#eee',\r\n    boxShadow:\r\n      'rgba(0, 0, 0, 0.42) 0px 10px 30px -12px, rgba(0, 0, 0, 0.12) 0px 4px 25px 0px, rgba(0, 0, 0, 0.2) 0px 8px 10px -5px',\r\n    boxShadow_l1:\r\n      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    black: grey[900],\r\n    greyWhile: '#f5f5f5',\r\n  },\r\n  border: {\r\n    l1: 'solid 1px #ccc',\r\n  },\r\n\r\n  typography: {\r\n    fontFamily: 'Muli',\r\n  },\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        position: 'inherit',\r\n        overflowY: 'inherit',\r\n      },\r\n    },\r\n  },\r\n  zIndex: {\r\n    drawer: 10,\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n});\r\n\r\nexport default initialCustomTheme;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport enTranslation from './locales/en.json';\r\nimport viTranslation from './locales/vi.json';\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: enTranslation,\r\n      },\r\n      vi: {\r\n        translation: viTranslation,\r\n      },\r\n    },\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    nsSeparator: ':::',\r\n    keySeparator: '::',\r\n  });\r\n\r\nexport default i18n;\r\n","export default {\r\n  HOME: '/',\r\n  LOGIN: '/login',\r\n  REGISTER: '/register',\r\n  USER: '/user',\r\n  GROUP_QUESTIONS: '/groupQuestions',\r\n  CONTEST: '/contests',\r\n  QUESTION: '/groupQuestions/:id/questions',\r\n  EXAM_TEST: '/contest/:id/exam/test',\r\n  EXAM_DETAIL: '/contest/:id/exam/detail',\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport routes from '../constants/route';\r\n\r\nexport default function PublicRoute({ Component, restricted, ...rest }) {\r\n  const accessToken = useSelector((state) => state.auth.accessToken);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        accessToken ? <Redirect to={routes.HOME} /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n}\r\n","export const actionTypes = {\r\n  LOGIN: 'LOGIN',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  VERIFY_TOKEN: 'VERIFY_TOKEN',\r\n  VERIFY_TOKEN_SUCCESS: 'VERIFY_TOKEN_SUCCESS',\r\n  VERIFY_TOKEN_FAILURE: 'VERIFY_TOKEN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n};\r\n\r\nexport function login(loginType, data) {\r\n  return {\r\n    type: actionTypes.LOGIN,\r\n    loginType,\r\n    ...data,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken, user) {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    accessToken,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function loginFailure(code, message) {\r\n  return {\r\n    type: actionTypes.LOGIN_FAILURE,\r\n    code,\r\n    message,\r\n  };\r\n}\r\n\r\nexport function verifyToken(accessToken) {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN,\r\n    accessToken,\r\n  };\r\n}\r\n\r\nexport function verifyTokenSuccess(accessToken, user) {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN_SUCCESS,\r\n    accessToken,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function verifyTokenFailure() {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN_FAILURE,\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return {\r\n    type: actionTypes.LOGOUT,\r\n  };\r\n}\r\n\r\nexport function updateUser(user) {\r\n  return {\r\n    type: actionTypes.UPDATE_USER,\r\n    user,\r\n  };\r\n}\r\n","import * as auth from './auth/actions';\r\n\r\nexport default {\r\n  auth,\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textTransform: 'uppercase',\r\n    marginLeft: 2,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: '#000',\r\n  },\r\n  avatar: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  listItem: {\r\n    background: '#eee',\r\n  },\r\n}));\r\n","export function setCookie(cname, cvalue, extime) {\r\n  const d = new Date();\r\n  d.setTime(d.getTime() + extime);\r\n  const expires = `expires=${d.toUTCString()}`;\r\n  document.cookie = `${cname}=${cvalue};${expires};path=/`;\r\n}\r\n\r\nexport function getCookie(cname) {\r\n  const name = `${cname}=`;\r\n  const ca = document.cookie.split(';');\r\n  for (let i = 0; i < ca.length; i += 1) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  CssBaseline,\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Breadcrumbs,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  ChevronLeft as ChevronLeftIcon,\r\n  Lock as LockIcon,\r\n  Dashboard as DashboardIcon,\r\n  Person as PersonIcon,\r\n  Assignment as AssignmentIcon,\r\n  Timer as TimerIcon,\r\n} from '@material-ui/icons';\r\nimport routes from '../../constants/route';\r\nimport actions from '../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport { setCookie } from '../../utils/cookie';\r\n\r\nconst menus = [\r\n  {\r\n    heading: 'Trang chủ',\r\n    icon: <DashboardIcon />,\r\n    route: routes.HOME,\r\n  },\r\n  {\r\n    heading: 'Quản lý cuộc thi',\r\n    icon: <TimerIcon />,\r\n    route: routes.CONTEST,\r\n  },\r\n  {\r\n    heading: 'Quản lý câu hỏi',\r\n    icon: <AssignmentIcon />,\r\n    route: routes.GROUP_QUESTIONS,\r\n  },\r\n  {\r\n    heading: 'Thông tin tài khoản',\r\n    icon: <PersonIcon />,\r\n    route: routes.USER,\r\n  },\r\n];\r\n\r\nconst Layout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.auth.user);\r\n  const { pathname } = useLocation();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleOpenMenuHeader = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenuHeader = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setCookie('accessToken');\r\n    dispatch(actions.auth.logout());\r\n  };\r\n  useEffect(() => {\r\n    // Kiểm tra xem thiết bị có phải là Android hay không\r\n    const isAndroid = () => /Android/i.test(navigator.userAgent);\r\n\r\n    // Kiểm tra xem thiết bị có phải là iPad hoặc Tablet hay không\r\n    const isTablet = () => /iPad|Android|tablet/i.test(navigator.userAgent);\r\n\r\n    // Kiểm tra kích thước màn hình nhỏ hơn 768px\r\n    const isSmallScreen = () => window.innerWidth < 769;\r\n\r\n    // Hàm sẽ được gọi khi thiết bị là Android hoặc iPad/Tablet và kích thước màn hình nhỏ hơn 768px\r\n    const onAndroidOrTabletAndSmallScreen = () => {\r\n      console.log('Đây là Android hoặc iPad/Tablet và màn hình nhỏ hơn 768px');\r\n      // Thực hiện các hành động cần thiết ở đây\r\n      handleDrawerClose();\r\n    };\r\n\r\n    // Kiểm tra và gọi hàm tương ứng khi component được mount\r\n    if ((isAndroid() || isTablet()) && isSmallScreen()) {\r\n      onAndroidOrTabletAndSmallScreen();\r\n    }\r\n  }, []); // Chỉ chạy một lần khi component được mount\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden,\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Avatar src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621772719/bfvfvstmneai0d1z0byx.png\" />\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Multichoice\r\n          </Typography>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Typography variant=\"body2\">{userInfo && userInfo.name}</Typography>\r\n            {userInfo && userInfo.avatar ? (\r\n              <Avatar\r\n                alt=\"avatar\"\r\n                src={userInfo.avatar}\r\n                className={classes.avatar}\r\n                onClick={handleOpenMenuHeader}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                aria-label=\"recipe\"\r\n                className={classes.avatar}\r\n                onClick={handleOpenMenuHeader}\r\n              >\r\n                {(userInfo && userInfo.name && userInfo.name[0]) || 'T'}\r\n              </Avatar>\r\n            )}\r\n          </Box>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleCloseMenuHeader}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n          >\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menus.map((el, index) => (\r\n            <Link to={el.route} key={index} className={classes.link}>\r\n              <ListItem\r\n                button\r\n                key={index}\r\n                classes={{\r\n                  root:\r\n                    ((el.route === '/' && pathname === el.route) ||\r\n                      (pathname.indexOf(el.route) >= 0 && el.route !== '/')) &&\r\n                    classes.listItem,\r\n                }}\r\n              >\r\n                <ListItemIcon>{el.icon}</ListItemIcon>\r\n                <ListItemText primary={el.heading} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          {children}\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport routes from '../constants/route';\r\nimport Layout from '../components/Layout';\r\n\r\nexport default function PrivateRoute({ Component, ...rest }) {\r\n  const accessToken = useSelector((state) => state.auth.accessToken);\r\n  return (\r\n    <Layout>\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          accessToken ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect to={routes.LOGIN} />\r\n          )\r\n        }\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n","export default {\r\n  // BACKGROUND_IMAGE: 'https://portal.bay4.com/images/login/background.jpg',\r\n  BACKGROUND_IMAGE: 'https://i.imgur.com/FJCFD8D.png',\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport image from '../../constants/image';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${image.BACKGROUND_IMAGE})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? /* theme.palette.grey[50] */ '#e1ceaf'\r\n        : theme.palette.grey[900],\r\n\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  divider: {\r\n    border: '1px solid #ccc',\r\n    height: '1px',\r\n    flexGrow: 1,\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","export default {\r\n  LOGIN: 'LOGIN',\r\n  LOGIN_GOOGLE: 'LOGIN_GOOGLE',\r\n  LOGIN_FACEBOOK: 'LOGIN_FACEBOOK',\r\n};\r\n","function changeAlias(alias) {\r\n  let str = alias;\r\n  str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n  str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n  str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\r\n  str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n  str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n  str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n  str = str.replace(/đ/g, 'd');\r\n  str = str.trim();\r\n  return str;\r\n}\r\n\r\nfunction validateEmail(email) {\r\n  const re =\r\n    /^[^0-9][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[@][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{2,4}$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nfunction validatePassword(password) {\r\n  const re = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/;\r\n  return re.test(password);\r\n}\r\n\r\nfunction isImageUrlCheck(str) {\r\n  // Biểu thức chính quy kiểm tra định dạng đường link ảnh\r\n  const imageUrlRegex = /\\.(jpeg|jpg|gif|png|bmp|svg)$/i;\r\n  return imageUrlRegex.test(str);\r\n}\r\n\r\nexport { changeAlias, validateEmail, validatePassword, isImageUrlCheck };\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport image from '../../constants/image';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${image.BACKGROUND_IMAGE})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n","import axios from 'axios';\r\nimport camelCase from 'camelcase-keys';\r\nimport { getCookie } from '../utils/cookie';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_DOMAIN}/api/v1`,\r\n  responseType: 'json',\r\n  timeout: 15 * 1000,\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  const accessToken = getCookie('accessToken');\r\n  // eslint-disable-next-line no-param-reassign\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    return camelCase(response.data, { deep: true });\r\n  },\r\n  (error) => {\r\n    // Handle error\r\n    console.error(error);\r\n  },\r\n);\r\n\r\nexport default axiosClient;\r\n","import api from './api';\r\n\r\nexport async function login(email, password) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/login',\r\n    data: { email, password },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function loginByGoogle(tokenId) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/loginByGoogle',\r\n    data: { tokenId },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function loginByFacebook({ accessToken, userID }) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/loginByFacebook',\r\n    data: { accessToken, userID },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function register({ name, email, password }) {\r\n  const data = await api({\r\n    method: 'POST',\r\n    url: '/auths/register',\r\n    data: { name, email, password },\r\n  });\r\n  return data;\r\n}\r\n\r\nexport async function verify(accessToken) {\r\n  const data = await api({\r\n    method: 'GET',\r\n    url: '/auths/verify',\r\n    headers: { Authorization: `Bearer ${accessToken}` },\r\n  });\r\n  return data;\r\n}\r\n","import api from './api';\r\n\r\nexport async function updateUser(user) {\r\n  const userInfo = await api({\r\n    method: 'PUT',\r\n    url: '/users',\r\n    data: user,\r\n  });\r\n  return userInfo;\r\n}\r\n\r\nexport async function changePassword(data) {\r\n  const userInfo = await api({\r\n    method: 'PUT',\r\n    url: '/users/changePassword',\r\n    data,\r\n  });\r\n  return userInfo;\r\n}\r\n","import api from './api';\r\n\r\nexport async function getGroupQuestions(key) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/groupQuestions',\r\n    params: { key },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createGroupQuestion(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/groupQuestions',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateGroupQuestions(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/groupQuestions/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteGroupQuestions(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/groupQuestions/${id}`,\r\n  });\r\n  return res;\r\n}\r\n","import api from './api';\r\n\r\nexport async function getQuestionsInGroup({\r\n  key,\r\n  limit,\r\n  offset,\r\n  sort,\r\n  fields,\r\n  groupQuestionId,\r\n}) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/questionsInGroup',\r\n    data: {\r\n      key,\r\n      limit,\r\n      offset,\r\n      sort,\r\n      fields,\r\n      groupQuestionId,\r\n    },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getQuestion() {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/questions/:id',\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createQuestion(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/questions',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateQuestion(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/questions/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteQuestion(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/questions/${id}`,\r\n  });\r\n  return res;\r\n}\r\n","import api from './api';\r\n\r\nexport async function getContests(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\nexport async function getContestsJoined(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests/joined',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\nexport async function getContestsByUser(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests/createByUser',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createContest(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/contests',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateContest(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/contests/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteContest(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/contests/${id}`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function verifyPassword({ id, password }) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: `/contests/${id}/verifyPassword`,\r\n    data: { password },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getQuestions({ id, token }) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    headers: {\r\n      'contest-token': token || null,\r\n    },\r\n    url: `/contests/${id}/getAllQuestion`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function mark({ doTime, contestId, groupQuestionId, answers }) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: `/contests/${contestId}/mark`,\r\n    data: { doTime, groupQuestionId, answers },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getResultByContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}/results`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getResultByUserInContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}/results/user`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function checkAccountRole({ contestId, userId }) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${contestId}/role/${userId}`,\r\n  });\r\n  return res;\r\n}\r\n","import API from './api';\r\n\r\nexport async function uploadFile({ formData }) {\r\n  try {\r\n    const response = await API({\r\n      method: 'POST',\r\n      url: `/uploads/file`,\r\n      data: formData,\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n}\r\nexport async function uploadAvatar({ formData }) {\r\n  try {\r\n    const response = await API({\r\n      method: 'POST',\r\n      url: `/uploads/avatar`,\r\n      data: formData,\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n}\r\n","import * as auth from './auth';\r\nimport * as user from './user';\r\nimport * as groupQuestion from './groupQuestion';\r\nimport * as question from './question';\r\nimport * as contest from './contest';\r\nimport * as upload from './upload';\r\n\r\nexport default { auth, user, groupQuestion, question, contest, upload };\r\n","/* eslint-disable no-plusplus */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport { validateEmail } from '../../utils/string';\r\n\r\nconst Register2 = ({ isLogin, handleLoginOrRegister }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [userError, setUserError] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const validateRegister = () => {\r\n    let countError = 0;\r\n    if (user.name.length === 0) {\r\n      setUserError((prev) => ({\r\n        ...prev,\r\n        name: 'Name is required',\r\n      }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.email.length === 0) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email is required' }));\r\n      countError++;\r\n    } else if (!validateEmail(user.email)) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email invalid' }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.password.length === 0) {\r\n      setUserError((prev) => ({ ...prev, password: 'Password is required' }));\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateRegister()) return;\r\n    const data = await apis.auth.register({ ...user });\r\n    if (data && data.status) {\r\n      enqueueSnackbar('Register success', { variant: 'success' });\r\n      history.push('/login');\r\n      handleLoginOrRegister();\r\n    } else {\r\n      enqueueSnackbar(data.message || 'Register failed', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12} md={12} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Đăng kí\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Họ và tên\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            value={user.name}\r\n            onChange={(e) => {\r\n              setUserError({ ...userError, name: '' });\r\n              setUser({ ...user, name: e.target.value });\r\n            }}\r\n            error={userError.name}\r\n            helperText={userError.name}\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={user.email}\r\n            onChange={(e) => {\r\n              setUserError({ ...userError, email: '' });\r\n              setUser({ ...user, email: e.target.value });\r\n            }}\r\n            error={userError.email}\r\n            helperText={userError.email}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Mật khẩu\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={user.password}\r\n            onChange={(e) => {\r\n              setUserError({ ...userError, password: '' });\r\n              setUser({ ...user, password: e.target.value });\r\n            }}\r\n            error={userError.password}\r\n            helperText={userError.password}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSignUp}\r\n          >\r\n            Đăng kí\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              {/* <Link to=\"/login\" variant=\"body2\">\r\n                  Bạn đã có tài khoản?\r\n                </Link> */}\r\n              <Button onClick={handleLoginOrRegister}>\r\n                {' '}\r\n                Bạn đã có tài khoản?\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register2;\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable react/no-unescaped-entities */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport actions from '../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport loginType from '../../constants/loginType';\r\nimport { validateEmail } from '../../utils/string';\r\n\r\nconst Login2 = ({ isLogin, handleLoginOrRegister }) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoggingIn, message } = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    if (isLoggingIn) return;\r\n    if (message) {\r\n      enqueueSnackbar(message, { variant: 'error' });\r\n    }\r\n  }, [isLoggingIn]);\r\n\r\n  const handleLoginFailureGoogle = (res) => {\r\n    enqueueSnackbar(res, { variant: 'error' });\r\n  };\r\n\r\n  const handleLoginSuccessGoogle = async (res) => {\r\n    const { tokenId } = res;\r\n    dispatch(actions.auth.login(loginType.LOGIN_GOOGLE, { tokenId }));\r\n  };\r\n\r\n  const handleLoginFacebook = async (res) => {\r\n    const { accessToken, userID } = res;\r\n    dispatch(\r\n      actions.auth.login(loginType.LOGIN_FACEBOOK, { accessToken, userID }),\r\n    );\r\n  };\r\n\r\n  const validateLogin = () => {\r\n    let countError = 0;\r\n    if (email.length === 0) {\r\n      setEmailError('Email is required');\r\n      countError++;\r\n    } else if (!validateEmail(email)) {\r\n      setEmailError('Email invalid');\r\n      countError++;\r\n    }\r\n    if (password.length === 0) {\r\n      setPasswordError('Password is required');\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!validateLogin()) return;\r\n    dispatch(actions.auth.login(loginType.LOGIN, { email, password }));\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12} md={12} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Đăng nhập\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onKeyPress={onKeyPress}\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmailError('');\r\n              setEmail(e.target.value);\r\n            }}\r\n            error={emailError}\r\n            helperText={emailError}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Mật khẩu\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onKeyPress={onKeyPress}\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPasswordError('');\r\n              setPassword(e.target.value);\r\n            }}\r\n            error={passwordError}\r\n            helperText={passwordError}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleLogin();\r\n            }}\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              {/* <Link href=\"/register\" variant=\"body2\">\r\n                Tạo tài khoản\r\n              </Link> */}\r\n              <Button onClick={handleLoginOrRegister}>Tạo tài khoản</Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Box display=\"flex\" mt={1} alignItems=\"center\">\r\n            <div className={classes.divider} />\r\n            <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n              Hoặc\r\n            </Typography>\r\n            <div className={classes.divider} />\r\n          </Box>\r\n\r\n          {/* <Grid container spacing={3}>\r\n              <Grid item xs={6}>\r\n                <GoogleLogin\r\n                  clientId=\"802105279409-3f4hr8psra01jd28d9rhuupgp64658k4.apps.googleusercontent.com\"\r\n                  render={(renderProps) => (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      startIcon={\r\n                        <Avatar\r\n                          style={{\r\n                            height: '20px',\r\n                            width: '20px',\r\n                          }}\r\n                          variant=\"square\"\r\n                          src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771943/m33izryay4mzslavxmyk.png\"\r\n                        />\r\n                      }\r\n                      onClick={renderProps.onClick}\r\n                    >\r\n                      Google\r\n                    </Button>\r\n                  )}\r\n                  buttonText=\"Login\"\r\n                  onSuccess={handleLoginSuccessGoogle}\r\n                  onFailure={handleLoginFailureGoogle}\r\n                  cookiePolicy=\"single_host_origin\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FacebookLogin\r\n                  appId=\"136872808369148\"\r\n                  // eslint-disable-next-line react/jsx-boolean-value\r\n                  autoLoad={false}\r\n                  callback={handleLoginFacebook}\r\n                  render={(renderProps) => (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      startIcon={\r\n                        <Avatar\r\n                          style={{\r\n                            height: '20px',\r\n                            width: '20px',\r\n                          }}\r\n                          variant=\"square\"\r\n                          src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771959/idn7xi1tw5blhrj8zoxk.png\"\r\n                        />\r\n                      }\r\n                      onClick={renderProps.onClick}\r\n                    >\r\n                      Facebook\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login2;\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable react/no-unescaped-entities */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport actions from '../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport loginType from '../../constants/loginType';\r\nimport { validateEmail } from '../../utils/string';\r\nimport Register2 from '../Register/register';\r\nimport Login2 from './Login';\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [isLogin, setisLogin] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoggingIn, message } = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    if (isLoggingIn) return;\r\n    if (message) {\r\n      enqueueSnackbar(message, { variant: 'error' });\r\n    }\r\n  }, [isLoggingIn]);\r\n\r\n  const handleLoginFailureGoogle = (res) => {\r\n    enqueueSnackbar(res, { variant: 'error' });\r\n  };\r\n\r\n  const handleLoginSuccessGoogle = async (res) => {\r\n    const { tokenId } = res;\r\n    dispatch(actions.auth.login(loginType.LOGIN_GOOGLE, { tokenId }));\r\n  };\r\n\r\n  const handleLoginFacebook = async (res) => {\r\n    const { accessToken, userID } = res;\r\n    dispatch(\r\n      actions.auth.login(loginType.LOGIN_FACEBOOK, { accessToken, userID }),\r\n    );\r\n  };\r\n\r\n  const validateLogin = () => {\r\n    let countError = 0;\r\n    if (email.length === 0) {\r\n      setEmailError('Email is required');\r\n      countError++;\r\n    } else if (!validateEmail(email)) {\r\n      setEmailError('Email invalid');\r\n      countError++;\r\n    }\r\n    if (password.length === 0) {\r\n      setPasswordError('Password is required');\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!validateLogin()) return;\r\n    dispatch(actions.auth.login(loginType.LOGIN, { email, password }));\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleLogin();\r\n    }\r\n  };\r\n  const handleLoginOrRegister = () => {\r\n    setisLogin(!isLogin);\r\n  };\r\n  // console.log(isLogin);\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={8} md={8} className={classes.image} />\r\n      <Grid item xs={12} sm={4} nd={4}>\r\n        {isLogin ? (\r\n          <Login2\r\n            isLogin={isLogin}\r\n            handleLoginOrRegister={handleLoginOrRegister}\r\n          />\r\n        ) : (\r\n          <Register2\r\n            isLogin={isLogin}\r\n            handleLoginOrRegister={handleLoginOrRegister}\r\n          />\r\n        )}\r\n      </Grid>\r\n      {/* <Grid item xs={12} sm={4} md={4} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng nhập\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onKeyPress={onKeyPress}\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmailError('');\r\n                setEmail(e.target.value);\r\n              }}\r\n              error={emailError}\r\n              helperText={emailError}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Mật khẩu\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onKeyPress={onKeyPress}\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPasswordError('');\r\n                setPassword(e.target.value);\r\n              }}\r\n              error={passwordError}\r\n              helperText={passwordError}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleLogin();\r\n              }}\r\n            >\r\n              Đăng nhập\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  Tạo tài khoản\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box display=\"flex\" mt={1} alignItems=\"center\">\r\n              <div className={classes.divider} />\r\n              <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n                Hoặc\r\n              </Typography>\r\n              <div className={classes.divider} />\r\n            </Box>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6}>\r\n                <GoogleLogin\r\n                  clientId=\"802105279409-3f4hr8psra01jd28d9rhuupgp64658k4.apps.googleusercontent.com\"\r\n                  render={(renderProps) => (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      startIcon={\r\n                        <Avatar\r\n                          style={{\r\n                            height: '20px',\r\n                            width: '20px',\r\n                          }}\r\n                          variant=\"square\"\r\n                          src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771943/m33izryay4mzslavxmyk.png\"\r\n                        />\r\n                      }\r\n                      onClick={renderProps.onClick}\r\n                    >\r\n                      Google\r\n                    </Button>\r\n                  )}\r\n                  buttonText=\"Login\"\r\n                  onSuccess={handleLoginSuccessGoogle}\r\n                  onFailure={handleLoginFailureGoogle}\r\n                  cookiePolicy=\"single_host_origin\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FacebookLogin\r\n                  appId=\"136872808369148\"\r\n                  // eslint-disable-next-line react/jsx-boolean-value\r\n                  autoLoad={false}\r\n                  callback={handleLoginFacebook}\r\n                  render={(renderProps) => (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      startIcon={\r\n                        <Avatar\r\n                          style={{\r\n                            height: '20px',\r\n                            width: '20px',\r\n                          }}\r\n                          variant=\"square\"\r\n                          src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771959/idn7xi1tw5blhrj8zoxk.png\"\r\n                        />\r\n                      }\r\n                      onClick={renderProps.onClick}\r\n                    >\r\n                      Facebook\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid> */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/* eslint-disable no-plusplus */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport { validateEmail } from '../../utils/string';\r\n\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [userError, setUserError] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const validateRegister = () => {\r\n    let countError = 0;\r\n    if (user.name.length === 0) {\r\n      setUserError((prev) => ({\r\n        ...prev,\r\n        name: 'Name is required',\r\n      }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.email.length === 0) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email is required' }));\r\n      countError++;\r\n    } else if (!validateEmail(user.email)) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email invalid' }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.password.length === 0) {\r\n      setUserError((prev) => ({ ...prev, password: 'Password is required' }));\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateRegister()) return;\r\n    const data = await apis.auth.register({ ...user });\r\n    if (data && data.status) {\r\n      enqueueSnackbar('Register success', { variant: 'success' });\r\n      history.push('/login');\r\n    } else {\r\n      enqueueSnackbar(data.message || 'Register failed', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng kí\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Họ và tên\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n              value={user.name}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, name: '' });\r\n                setUser({ ...user, name: e.target.value });\r\n              }}\r\n              error={userError.name}\r\n              helperText={userError.name}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={user.email}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, email: '' });\r\n                setUser({ ...user, email: e.target.value });\r\n              }}\r\n              error={userError.email}\r\n              helperText={userError.email}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Mật khẩu\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={user.password}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, password: '' });\r\n                setUser({ ...user, password: e.target.value });\r\n              }}\r\n              error={userError.password}\r\n              helperText={userError.password}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSignUp}\r\n            >\r\n              Đăng kí\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Bạn đã có tài khoản?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n// import { red } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 140,\r\n    backgroundSize: 'contain',\r\n  },\r\n  date: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n// eslint-disable-next-line\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  Typography,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Box,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { AccessTime as AccessTimeIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\n\r\nconst TabDetail = ({ item }) => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleJoin = (e) => {\r\n    e.preventDefault();\r\n    history.push(`/contest/${item.id}/exam/detail`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} md={4} key={item.id}>\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            item.createdBy.avatar ? (\r\n              <Avatar alt={item.createdBy.name} src={item.createdBy.avatar} />\r\n            ) : (\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {item.createdBy.name[0]}\r\n              </Avatar>\r\n            )\r\n          }\r\n          action={\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            >\r\n              {item.examTime} phút\r\n            </Typography>\r\n          }\r\n          title={item.title}\r\n          subheader={`Tạo bởi: ${item.createdBy.name}`}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={\r\n            item.imageUrl ||\r\n            'https://monamedia.co/wp-content/uploads/2020/02/javascript-la-gi.jpg'\r\n          }\r\n          title={item.title}\r\n        />\r\n        {/* <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Description:{' '}\r\n            {item.description && item.description.length > 0\r\n              ? item.description\r\n              : `[Empty]`}\r\n          </Typography>\r\n        </CardContent> */}\r\n        <CardActions>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <AccessTimeIcon\r\n                style={{ marginRight: '5px' }}\r\n                color=\"secondary\"\r\n                fontSize=\"small\"\r\n              />\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {item && moment(item.startTime).format('lll')}\r\n              </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleJoin}>\r\n                Tham gia\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TabDetail;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nconst LoadingPage = ({ title = '' }) => {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" style={{ color: '#ccc' }}>\r\n        Loading {title}...\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","/* eslint-disable no-useless-return */\r\n// eslint-disable-next-line\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Paper, Tabs, Tab, Grid, Box, Typography } from '@material-ui/core';\r\nimport TabDetail from './TabDetail';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport LoadingPage from '../../components/LoadingPage';\r\nimport { MathComponent } from 'mathjax-react';\r\nconst menus = [\r\n  { id: 0, heading: 'Tất cả cuộc thi' },\r\n  { id: 1, heading: 'Đã tham gia' },\r\n  { id: 2, heading: 'Đang diễn ra' },\r\n  { id: 3, heading: 'Sắp diễn ra' },\r\n  { id: 4, heading: 'Đã kết thúc' },\r\n];\r\n\r\nlet contestsDefault = [];\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n  const [tab, setTab] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [contests, setContests] = useState([]);\r\n  const [contestsJoined, setContestsJoined] = useState([]);\r\n\r\n  const fetchContests = async () => {\r\n    const data = await apis.contest.getContests();\r\n    if (data && data.status) {\r\n      setContests(data.result.data);\r\n      contestsDefault = [...data.result.data];\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchContestsJoined = async () => {\r\n    const data = await apis.contest.getContestsJoined();\r\n    if (data && data.status) {\r\n      setContestsJoined(data.result.contests);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContests();\r\n  }, []);\r\n\r\n  const handleChangeTab = async (event, newValue) => {\r\n    setTab(newValue);\r\n    const date = new Date();\r\n    if (newValue === 0) {\r\n      setContests([...contestsDefault]);\r\n      return;\r\n    }\r\n    if (newValue === 1) {\r\n      if (contestsJoined.length <= 0) {\r\n        await fetchContestsJoined();\r\n      }\r\n      return;\r\n    }\r\n    if (newValue === 2) {\r\n      const newContests = contestsDefault.filter((el) => {\r\n        if (el.endTime && new Date(el.endTime) < date) return false;\r\n        if (new Date(el.startTime) > date) return false;\r\n        return true;\r\n      });\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    if (newValue === 3) {\r\n      const newContests = contestsDefault.filter(\r\n        (el) => new Date(el.startTime) > date,\r\n      );\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    if (newValue === 4) {\r\n      const newContests = contestsDefault.filter(\r\n        (el) => el.endTime && new Date(el.endTime) < date,\r\n      );\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    return;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n  const math = String.raw`x_{n+1} = x_n - \\frac{f(x_n)}{f'(x_n)}`;\r\n\r\n  return (\r\n    <>\r\n      {/* {<MathComponent tex={String.raw`\\int_0^1 x^2\\ dx`} />} */}\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách cuộc thi\r\n        </Typography>\r\n      </Box>\r\n      <Paper className={classes.root}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          {menus.map((el) => (\r\n            <Tab label={el.heading} key={el.id}>\r\n              {el.heading}\r\n            </Tab>\r\n          ))}\r\n        </Tabs>\r\n      </Paper>\r\n\r\n      {tab === 1 ? (\r\n        <Grid container spacing={3}>\r\n          {contestsJoined.map((el) => (\r\n            <TabDetail item={el} />\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {contests.map((el) => (\r\n            <TabDetail item={el} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  tab: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(10),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  paperImage: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  avatar: {\r\n    position: 'relative',\r\n    borderRadius: '50%',\r\n\r\n    '&:hover': {\r\n      '& label': {\r\n        opacity: '0.3',\r\n      },\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n  btnCamera: {\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    fontSize: '20px',\r\n    backgroundColor: '#FFF',\r\n    opacity: '0',\r\n    transition: '0.5s',\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(10),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  buttonDelete: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n    backgroundColor: '#f44336',\r\n    color: '#FFF',\r\n  },\r\n  paperImage: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  avatar: {\r\n    position: 'relative',\r\n    borderRadius: '50%',\r\n\r\n    '&:hover': {\r\n      '& label': {\r\n        opacity: '0.3',\r\n      },\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n  btnCamera: {\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    fontSize: '20px',\r\n    backgroundColor: '#FFF',\r\n    opacity: '0',\r\n    transition: '0.5s',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport { PhotoCamera as PhotoCameraIcon } from '@material-ui/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport html2scanvas from 'html2canvas';\r\n\r\nconst User = () => {\r\n  // const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [userInfo, setUserInfo] = useState(\r\n    useSelector((state) => state.auth.user),\r\n  );\r\n  console.log(userInfo);\r\n\r\n  const handleChange = (e) => {\r\n    setUserInfo({\r\n      ...userInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      name,\r\n      avatar,\r\n      dob,\r\n      phoneNumber,\r\n      urlFacebook,\r\n      urlYoutube,\r\n      urlWebsite,\r\n    } = userInfo;\r\n    if (name.trim().length <= 0) {\r\n      enqueueSnackbar(\"Name doesn't empty\", { variant: 'error' });\r\n      return;\r\n    }\r\n    const data = await apis.user.updateUser({\r\n      name,\r\n      avatar,\r\n      dob,\r\n      phoneNumber,\r\n      urlFacebook,\r\n      urlYoutube,\r\n      urlWebsite,\r\n    });\r\n    if (data && data.status) {\r\n      dispatch(\r\n        actions.auth.updateUser({\r\n          ...data.result.user,\r\n        }),\r\n      );\r\n      enqueueSnackbar('Update success', { variant: 'success' });\r\n    } else {\r\n      enqueueSnackbar('Update failed', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = async (e) => {\r\n    const formData = new FormData();\r\n    const file = e.target.files[0];\r\n    formData.append('file', file);\r\n    try {\r\n      const data = await apis.upload.uploadAvatar({ formData });\r\n      if (data && data.status) {\r\n        setUserInfo({\r\n          ...userInfo,\r\n          avatar: data.result.link,\r\n        });\r\n        console.log(data.result.link);\r\n        // try {\r\n        //   const result = await apis.user.updateUser({\r\n        //     avatar: data.result.link,\r\n        //   });\r\n        //   if (result && result.status) {\r\n        //     console.log('update avatar success');\r\n        //   }\r\n        // } catch (error) {\r\n        //   console.log(error);\r\n        // }\r\n      } else {\r\n        enqueueSnackbar('Upload failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Box borderRadius=\"50%\" className={classes.avatar}>\r\n            <Avatar\r\n              alt=\"avatar\"\r\n              src={(userInfo && userInfo.avatar) || ''}\r\n              style={{\r\n                width: '100%',\r\n                height: '200px',\r\n              }}\r\n            />\r\n\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n              onChange={handleUploadImage}\r\n            />\r\n            <label className={classes.btnCamera} htmlFor=\"icon-button-file\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCameraIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </label>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9}>\r\n          <Paper className={classes.paper} variant={3}>\r\n            <Box textAlign=\"center\" mb={3}>\r\n              <Typography variant=\"h4\" component=\"h2\">\r\n                Thông tin\r\n              </Typography>\r\n            </Box>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  label=\"Tên của bạn\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.name) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  disabled\r\n                  value={(userInfo && userInfo.email) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Date picker inline\"\r\n                    value={(userInfo && userInfo.dob) || new Date()}\r\n                    onChange={(value) =>\r\n                      setUserInfo({ ...userInfo, dob: value })\r\n                    }\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid> */}\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  name=\"phoneNumber\"\r\n                  label=\"Số điện thoại\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.phoneNumber) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlFacebook\"\r\n                  label=\"Link Facebook\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlFacebook) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlYoutube\"\r\n                  label=\"Link Youtube\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlYoutube) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlWebsite\"\r\n                  label=\"Link Website\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlWebsite) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Box textAlign=\"right\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                size=\"large\"\r\n                onClick={handleSave}\r\n              >\r\n                Lưu lại\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"warning\"\r\n                className={classes.buttonDelete}\r\n                size=\"large\"\r\n                onClick={() => {\r\n                  alert(\r\n                    'Xóa tài khoản nhưng chưa làm. Xóa tài khoản là chắc chắn không thể khôi phục lại được. Bạn chắc chắn chứ ???',\r\n                  );\r\n                }} // eslint-disable-line\r\n              >\r\n                Xóa tài khoản\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(10),\r\n    paddingBottom: theme.spacing(10),\r\n    paddingRight: theme.spacing(20),\r\n    paddingLeft: theme.spacing(20),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      paddingTop: theme.spacing(10),\r\n      paddingBottom: theme.spacing(10),\r\n      paddingRight: theme.spacing(40),\r\n      paddingLeft: theme.spacing(40),\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Paper, TextField, Box, Button, Typography } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\n\r\nconst ChangePassword = () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [password, setPassword] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmNewPassword: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPassword({\r\n      ...password,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (password.currentPassword.trim().length <= 0) {\r\n      enqueueSnackbar('Current password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.newPassword.trim().length <= 0) {\r\n      enqueueSnackbar('New password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.confirmNewPassword.trim().length <= 0) {\r\n      enqueueSnackbar('Confirm new password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.newPassword.trim() !== password.confirmNewPassword.trim()) {\r\n      enqueueSnackbar('Confirm password  is not match', { variant: 'error' });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validatePassword()) return;\r\n    const data = await apis.user.changePassword({ ...password });\r\n\r\n    if (data && data.status) {\r\n      enqueueSnackbar('Change password success', { variant: 'success' });\r\n      setPassword({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmNewPassword: '',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Change password failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} variant={3}>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Thay đổi mật khẩu\r\n        </Typography>\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"currentPassword\"\r\n          label=\"Mật khẩu hiện tại\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.currentPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"newPassword\"\r\n          label=\"Mật khẩu mới\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.newPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"confirmNewPassword\"\r\n          label=\"Xác nhận lại mật khẩu\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.confirmNewPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"right\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          size=\"large\"\r\n          onClick={handleSave}\r\n        >\r\n          Lưu mật khẩu\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","/* eslint-disable no-useless-return */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport UserInformation from './UserInformation';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nconst menus = [\r\n  {\r\n    id: 0,\r\n    heading: 'Thông tin cá nhân',\r\n    component: <UserInformation />,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: 'Thay đổi mật khẩu',\r\n    component: <ChangePassword />,\r\n  },\r\n];\r\nconst User = () => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const [tab, setTab] = useState(0);\r\n\r\n  const handleChangeTab = async (event, newValue) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  const renderTab = () => {\r\n    const item = menus.find((el) => el.id === tab);\r\n    return item && item.component;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.tab}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          {menus.map((el) => (\r\n            <Tab label={el.heading} key={el.id}>\r\n              {el.heading}\r\n            </Tab>\r\n          ))}\r\n        </Tabs>\r\n      </Paper>\r\n      {renderTab()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\nimport { Search as SearchIcon } from '@material-ui/icons';\r\n\r\nconst SearchBox = ({\r\n  title = '',\r\n  handleSearch,\r\n  size = 'small',\r\n  position = 'end',\r\n  variant = 'outlined',\r\n}) => {\r\n  return (\r\n    <TextField\r\n      variant={variant}\r\n      size={size}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position={position}>\r\n            <SearchIcon />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      placeholder={`Tìm kiếm  ${title}`}\r\n      onChange={handleSearch}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '5%',\r\n    bottom: '5%',\r\n    left: '20%',\r\n    // transform: 'translate(-50%, 0%)',\r\n    position: 'absolute',\r\n    width: '60%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n  listAnswer: {\r\n    border: '1px solid #ccc',\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.spacing(0.5),\r\n    height: '300px',\r\n    overflow: 'auto',\r\n  },\r\n  textCreateAnswer: {\r\n    marginLeft: theme.spacing(0.5),\r\n  },\r\n  listAnswerContent: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","import moment from 'moment';\r\n\r\nconst getDate = (date) => {\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  return { day, month, year };\r\n};\r\n\r\nconst getTime = (date) => {\r\n  const hour = date.getHours();\r\n  const minute = date.getMinutes();\r\n  const second = date.getSeconds();\r\n\r\n  return { hour, minute, second };\r\n};\r\n\r\nexport function setTime(date, dateSet) {\r\n  const { hour, minute, second } = getTime(dateSet);\r\n  date.setHours(hour);\r\n  date.setMinutes(minute);\r\n  date.setSeconds(second);\r\n  return date;\r\n}\r\n\r\nexport function setDate(date, dateSet) {\r\n  const { day, month, year } = getDate(dateSet);\r\n  date.setDate(day);\r\n  date.setMonth(month);\r\n  date.setYear(year);\r\n  return date;\r\n}\r\n\r\nexport function renderDate(date) {\r\n  const newDate = new Date(date);\r\n  const { hour, minute, second } = getTime(newDate);\r\n  const { day, month, year } = getDate(newDate);\r\n\r\n  return `${day}/${month}/${year} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport function countTime(date) {\r\n  const distance = new Date(date) - new Date();\r\n  const day = Math.floor(distance / 86400000);\r\n  const hour = Math.floor((distance - day * 86400) / 3600000);\r\n  const minute = Math.floor((distance - day * 86400 - hour * 3600000) / 60000);\r\n  return `${day} day ${hour}h ${minute}m`;\r\n}\r\n\r\nexport function renderClockTime(time) {\r\n  const hours = Math.floor(time / 3600);\r\n  const minutes = Math.floor((time - hours * 3600) / 60);\r\n  const seconds = Math.floor(time - hours * 3600 - minutes * 60);\r\n\r\n  const hoursString = `0${hours}`.slice(-2);\r\n  const minutesString = `0${minutes}`.slice(-2);\r\n  const secondsString = `0${seconds}`.slice(-2);\r\n  return `${hoursString}:${minutesString}:${secondsString}`;\r\n}\r\n\r\nexport function checkDate(el) {\r\n  const date = new Date();\r\n  const startTime = new Date(el.startTime);\r\n  const endTime = el.endTime && new Date(el.endTime);\r\n  if (endTime && endTime < date) {\r\n    return 'Ended';\r\n  }\r\n  if (startTime > date) {\r\n    return `Upcoming: ${countTime(startTime)}`;\r\n  }\r\n  return `Time remain: ${moment(startTime).fromNow()}`;\r\n}\r\n/* export function formatTimeFull(el) {\r\n  const formattedDate = moment(row.createdAt).format('DD/MM/YYYY h:mm:ss a');\r\n  console.log(formattedDate);\r\n} */\r\n","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Modal,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Switch,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport { setDate, setTime } from '../../../utils/date';\r\n\r\nconst ContestModal = ({\r\n  handleCloseModal,\r\n  open,\r\n  itemSelect,\r\n  handleUpdateContest,\r\n  groupQuestions,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [contest, setContest] = useState();\r\n\r\n  const handleDateChange = (type) => (date) => {\r\n    let startTime = contest && contest.startTime;\r\n    let endTime = contest && contest.endTime;\r\n    switch (type) {\r\n      case 'startDate':\r\n        startTime = setDate(startTime || date, date);\r\n        break;\r\n      case 'startTime':\r\n        startTime = setTime(startTime || date, date);\r\n        break;\r\n      case 'endDate':\r\n        endTime = setDate(endTime || date, date);\r\n        break;\r\n      case 'endTime':\r\n        endTime = setTime(endTime || date, date);\r\n        break;\r\n      default:\r\n    }\r\n\r\n    setContest({\r\n      ...contest,\r\n      startTime,\r\n      endTime,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContest(itemSelect);\r\n  }, [itemSelect, open]);\r\n\r\n  const handleChange = (e) => {\r\n    // eslint-disable-next-line prefer-const\r\n    let { name, value } = e.target;\r\n    if (name === 'isActive') value = e.target.checked;\r\n    setContest({\r\n      ...contest,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validateContest = (item) => {\r\n    if (!item.title || item.title.trim().length <= 0) {\r\n      enqueueSnackbar('Title is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!item.examTime) {\r\n      enqueueSnackbar('Min is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    const regexNumber = /^\\d+$/;\r\n    // eslint-disable-next-line radix\r\n    const checkNumber = regexNumber.test(item.examTime);\r\n    if (!checkNumber) {\r\n      enqueueSnackbar('Min must a number', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!item.groupQuestion) {\r\n      enqueueSnackbar(\"You haven't choose group question\", {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (!item.startTime) {\r\n      enqueueSnackbar(\"You haven't set start time\", {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (item.endTime && item.startTime >= item.endTime) {\r\n      enqueueSnackbar('end time must greater than start time', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    let data = null;\r\n    if (!validateContest(contest)) return;\r\n\r\n    const contestData = {\r\n      ...contest,\r\n      groupQuestion: contest.groupQuestion,\r\n      isActive: contest.isActive || false,\r\n    };\r\n    if (itemSelect && itemSelect.id) {\r\n      data = await apis.contest.updateContest(itemSelect.id, contestData);\r\n    } else {\r\n      data = await apis.contest.createContest(contestData);\r\n    }\r\n    if (data && data.status) {\r\n      const { contest: newContest } = data.result;\r\n      const type = itemSelect && itemSelect.id ? 'UPDATE' : 'ADD';\r\n      handleUpdateContest(newContest, type);\r\n      enqueueSnackbar('Save data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Save data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = async (e) => {\r\n    const formData = new FormData();\r\n    const file = e.target.files[0];\r\n    formData.append('file', file);\r\n    const data = await apis.upload.uploadFile({ formData });\r\n    if (data && data.status) {\r\n      setContest({\r\n        ...contest,\r\n        imageUrl: data.result.link,\r\n      });\r\n    } else {\r\n      enqueueSnackbar('Upload failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Thông tin cuộc thi\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Tên cuộc thi\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            value={(contest && contest.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Mô tả chi tiết\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={5}\r\n            name=\"description\"\r\n            value={(contest && contest.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Thời gian thi(m)\"\r\n            variant=\"outlined\"\r\n            name=\"examTime\"\r\n            value={(contest && contest.examTime) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={2}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                type=\"file\"\r\n                onChange={handleUploadImage}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  fullWidth\r\n                  style={{\r\n                    height: '100%',\r\n                  }}\r\n                >\r\n                  TẢI ẢNH\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Link ảnh\"\r\n                variant=\"outlined\"\r\n                name=\"imageUrl\"\r\n                value={(contest && contest.imageUrl) || ''}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Ngày bắt đầu\r\n                </Typography>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={(contest && contest.startTime) || null}\r\n                  onChange={handleDateChange('startDate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Thời gian bắt đầu\r\n                </Typography>\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  value={(contest && contest.startTime) || null}\r\n                  onChange={handleDateChange('startTime')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Ngày kết thúc\r\n                </Typography>\r\n\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={(contest && contest.endTime) || null}\r\n                  onChange={handleDateChange('endDate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Thời gian kết thúc\r\n                </Typography>\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  value={(contest && contest.endTime) || null}\r\n                  onChange={handleDateChange('endTime')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Box>\r\n\r\n        <Box mb={2}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Bộ câu hỏi\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              value={contest && contest.groupQuestion}\r\n              name=\"groupQuestion\"\r\n              onChange={handleChange}\r\n              label=\"Group Question\"\r\n            >\r\n              {groupQuestions.map((el) => (\r\n                <MenuItem value={el.id} key={el.id}>\r\n                  <em>{el.title}</em>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Mã code (nếu có)\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={(contest && contest.password) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={(contest && contest.isActive) || false}\r\n                onChange={handleChange}\r\n                name=\"isActive\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Cuộc thi sẽ được hiển thị lên hệ thống\"\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContestModal;\r\n","export const COLOR = {\r\n  black: '#000000',\r\n  white: '#FFFFFF',\r\n  gray: {\r\n    100: '#F7FAFC',\r\n    200: '#EDF2F7',\r\n    300: '#E2E8F0',\r\n    400: '#CBD5E0',\r\n    500: '#A0AEC0',\r\n    600: '#718096',\r\n    700: '#4A5568',\r\n    800: '#2D3748',\r\n    900: '#1A202C',\r\n  },\r\n  red: {\r\n    100: '#FFF5F5',\r\n    200: '#FED7D7',\r\n    300: '#FEB2B2',\r\n    400: '#FC8181',\r\n    500: '#F56565',\r\n    600: '#E53E3E',\r\n    700: '#C53030',\r\n    800: '#9B2C2C',\r\n    900: '#742A2A',\r\n  },\r\n  orange: {\r\n    100: '#FFFAF0',\r\n    200: '#FEEBC8',\r\n    300: '#FBD38D',\r\n    400: '#F6AD55',\r\n    500: '#ED8936',\r\n    600: '#DD6B20',\r\n    700: '#C05621',\r\n    800: '#9C4221',\r\n    900: '#7B341E',\r\n  },\r\n  yellow: {\r\n    100: '#FFFFF0',\r\n    200: '#FEFCBF',\r\n    300: '#FAF089',\r\n    400: '#F6E05E',\r\n    500: '#ECC94B',\r\n    600: '#D69E2E',\r\n    700: '#B7791F',\r\n    800: '#975A16',\r\n    900: '#744210',\r\n  },\r\n  green: {\r\n    100: '#F0FFF4',\r\n    200: '#C6F6D5',\r\n    300: '#9AE6B4',\r\n    400: '#68D391',\r\n    500: '#48BB78',\r\n    600: '#38A169',\r\n    700: '#2F855A',\r\n    800: '#276749',\r\n    900: '#22543D',\r\n  },\r\n  teal: {\r\n    100: '#E6FFFA',\r\n    200: '#B2F5EA',\r\n    300: '#81E6D9',\r\n    400: '#4FD1C5',\r\n    500: '#38B2AC',\r\n    600: '#319795',\r\n    700: '#2C7A7B',\r\n    800: '#285E61',\r\n    900: '#234E52',\r\n  },\r\n  blue: {\r\n    100: '#EBF8FF',\r\n    200: '#BEE3F8',\r\n    300: '#90CDF4',\r\n    400: '#63B3ED',\r\n    500: '#4299E1',\r\n    600: '#3182CE',\r\n    700: '#2B6CB0',\r\n    800: '#2C5282',\r\n    900: '#2A4365',\r\n  },\r\n  indigo: {\r\n    100: '#EBF4FF',\r\n    200: '#C3DAFE',\r\n    300: '#A3BFFA',\r\n    400: '#7F9CF5',\r\n    500: '#667EEA',\r\n    600: '#5A67D8',\r\n    700: '#4C51BF',\r\n    800: '#434190',\r\n    900: '#3C366B',\r\n  },\r\n  purple: {\r\n    100: '#FAF5FF',\r\n    200: '#E9D8FD',\r\n    300: '#D6BCFA',\r\n    400: '#B794F4',\r\n    500: '#9F7AEA',\r\n    600: '#805AD5',\r\n    700: '#6B46C1',\r\n    800: '#553C9A',\r\n    900: '#44337A',\r\n  },\r\n  pink: {\r\n    100: '#FFF5F7',\r\n    200: '#FED7E2',\r\n    300: '#FBB6CE',\r\n    400: '#F687B3',\r\n    500: '#ED64A6',\r\n    600: '#D53F8C',\r\n    700: '#B83280',\r\n    800: '#97266D',\r\n    900: '#702459',\r\n  },\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { COLOR } from '../../styles/color';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  accordion: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n  question: {\r\n    fontWeight: 'bold',\r\n  },\r\n  heading: {\r\n    fontSize: theme.spacing(2.5),\r\n  },\r\n  detail: {\r\n    width: '100%',\r\n  },\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  redStatus: {\r\n    color: COLOR.red['500'],\r\n  },\r\n  greenStatus: { color: COLOR.green['500'] },\r\n  yellowStatus: { color: COLOR.yellow['500'] },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n","/* eslint-disable radix */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-nested-ternary */\r\n// eslint-disable-next-line\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport moment from 'moment';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  IconButton,\r\n  TablePagination,\r\n  Checkbox,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Lock as LockIcon,\r\n} from '@material-ui/icons';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport ContestModal from './ContestModal';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\n\r\nconst Contest = () => {\r\n  // const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [contests, setContests] = useState([]);\r\n  const [contestSelect, setContestSelect] = useState(null);\r\n  const [groupQuestions, setGroupQuestions] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    count: 100,\r\n  });\r\n\r\n  const fetchContests = async () => {\r\n    const data = await apis.contest.getContestsByUser();\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.metadata.count || 0,\r\n      });\r\n      setContests(result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchGroupQuestions = async (keyword) => {\r\n    const data = await apis.groupQuestion.getGroupQuestions(keyword);\r\n    if (data && data.status) {\r\n      setGroupQuestions(data.result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = async (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContests();\r\n    fetchGroupQuestions();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    setPagination({\r\n      ...pagination,\r\n      page: 0,\r\n    });\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setContestSelect(null);\r\n  };\r\n\r\n  const handleClickRow = (row) => (e) => {\r\n    e.preventDefault();\r\n    setContestSelect(row);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleUpdateContest = (item, type) => {\r\n    if (type === 'ADD') {\r\n      const newContests = [{ ...item }, ...contests];\r\n      setContests(newContests);\r\n      setKeySearch('');\r\n      handleCloseModal();\r\n      return;\r\n    }\r\n    const newContests = [...contests];\r\n    const pos = newContests.findIndex((el) => el.id === item.id);\r\n    newContests[pos] = { ...item };\r\n    handleCloseModal();\r\n    setContests(newContests);\r\n  };\r\n\r\n  const handleDeleteContest = async (id) => {\r\n    const data = await apis.contest.deleteContest(id);\r\n    if (data && data.status) {\r\n      const newContests = [...contests];\r\n      const pos = newContests.findIndex((el) => el.id === id);\r\n      newContests.splice(pos, 1);\r\n      setContests(newContests);\r\n      enqueueSnackbar('Delete data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const GreenCheckbox = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n  return (\r\n    <div>\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách cuộc thi\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n              onClick={handleOpenModalAdd}\r\n            >\r\n              Thêm cuộc thi\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">STT</TableCell>\r\n                <TableCell>Tên cuộc thi</TableCell>\r\n                <TableCell align=\"center\">Thời gian(phút)</TableCell>\r\n                <TableCell align=\"center\">Ngày</TableCell>\r\n                <TableCell align=\"center\">Mã code</TableCell>\r\n                <TableCell align=\"center\">Trạng thái</TableCell>\r\n                <TableCell />\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {contests\r\n                .filter((el) => el.title.indexOf(keySearch) >= 0)\r\n                .slice(\r\n                  pagination.page * pagination.rowsPerPage,\r\n                  pagination.page * pagination.rowsPerPage +\r\n                    pagination.rowsPerPage,\r\n                )\r\n                .map((row, index) => (\r\n                  <TableRow\r\n                    key={row.id}\r\n                    className={classes.row}\r\n                    onClick={handleClickRow(row)}\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      {pagination.page * pagination.rowsPerPage + index + 1}\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                      style={{\r\n                        maxWidth: 200,\r\n                      }}\r\n                    >\r\n                      {row.title}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.examTime}</TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" flexDirection=\"column\">\r\n                        <div> BD: {moment(row.startTime).format('LLL')}</div>\r\n                        <div>\r\n                          KT:{' '}\r\n                          {(row.endTime && moment(row.endTime).format('LLL')) ||\r\n                            ''}\r\n                        </div>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.password && (\r\n                        <Tooltip title={row.password}>\r\n                          <LockIcon />\r\n                        </Tooltip>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.isActive && (\r\n                        <Box\r\n                          style={{\r\n                            color: '#000',\r\n                            background: '#7beeab',\r\n                            borderRadius: 5,\r\n                            padding: 5,\r\n                          }}\r\n                        >\r\n                          active\r\n                        </Box>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box>\r\n                        <IconButton\r\n                          aria-label=\"delete\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDeleteContest(row.id);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          history.push(`/contest/${row.id}/exam/detail`);\r\n                        }}\r\n                      >\r\n                        Thống kê\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n          {contests.length > 0 && pagination.count > pagination.rowsPerPage && (\r\n            <TablePagination\r\n              component=\"div\"\r\n              rowsPerPageOptions={[pagination.rowsPerPage]}\r\n              count={\r\n                contests\r\n                  .filter((el) => el.title.indexOf(keySearch) >= 0)\r\n                  .slice(\r\n                    pagination.page * pagination.rowsPerPage,\r\n                    pagination.page * pagination.rowsPerPage +\r\n                      pagination.rowsPerPage,\r\n                  ).length\r\n              }\r\n              page={pagination.page}\r\n              onChangePage={handleChangePage}\r\n              rowsPerPage={pagination.rowsPerPage}\r\n            />\r\n          )}\r\n        </TableContainer>\r\n      </Box>\r\n      <ContestModal\r\n        open={openModal}\r\n        handleCloseModal={handleCloseModal}\r\n        itemSelect={contestSelect}\r\n        groupQuestions={groupQuestions}\r\n        handleUpdateContest={handleUpdateContest}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contest;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  listItem: {\r\n    background: '#fff',\r\n    padding: theme.spacing(2),\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n    borderRadius: theme.spacing(1),\r\n    fontSize: theme.spacing(2),\r\n    cursor: 'pointer',\r\n    marginBottom: theme.spacing(2),\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.active,\r\n    },\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    position: 'absolute',\r\n    width: '40%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, TextField, Box, Typography, Button } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\n\r\nconst GroupQuestionModal = ({ handleCloseModal, open, item, handleSave }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState(0);\r\n  const [groupQuestion, setGroupQuestion] = useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      setGroupQuestion({ ...item });\r\n      setState(1);\r\n    } else {\r\n      setGroupQuestion({\r\n        title: '',\r\n        description: '',\r\n      });\r\n      setState(0);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleChange = (e) => {\r\n    setGroupQuestion({\r\n      ...groupQuestion,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {state\r\n              ? 'Cập nhật thông tin bộ câu hỏi '\r\n              : 'Thêm thông tin bộ câu hỏi'}\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            placeholder=\"Nhập tiêu đề\"\r\n            name=\"title\"\r\n            value={(groupQuestion && groupQuestion.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            placeholder=\"Nhập mô tả chi tiết\"\r\n            name=\"description\"\r\n            value={(groupQuestion && groupQuestion.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave(groupQuestion)}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GroupQuestionModal;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Button,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Image as ImageIcon,\r\n  MoreVert as MoreVertIcon,\r\n} from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport GroupQuestionModal from './GroupQuestionModal';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport LoadingPage from '../../components/LoadingPage';\r\n\r\nlet timeOutId = null;\r\nconst GroupQuestion = () => {\r\n  const classes = useStyles();\r\n  // const { t } = useTranslation();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [groupQuestionSelected, setGroupQuestionSelected] = useState();\r\n  const [groupQuestions, setGroupQuestions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchGroupQuestions = async (keyword) => {\r\n    const data = await apis.groupQuestion.getGroupQuestions(keyword);\r\n    if (data && data.status) {\r\n      setGroupQuestions(data.result.data);\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGroupQuestions();\r\n  }, []);\r\n\r\n  const handleOpenToggle = (el) => (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setGroupQuestionSelected(el);\r\n  };\r\n\r\n  const handleCloseToggle = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenEdit = () => {\r\n    setAnchorEl(null);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    setAnchorEl(null);\r\n    try {\r\n      await apis.groupQuestion.deleteGroupQuestions(groupQuestionSelected.id);\r\n      const newGroupQuestions = [...groupQuestions];\r\n      const tempGroupQuestions = newGroupQuestions.filter(\r\n        (ele) => ele.id !== groupQuestionSelected.id,\r\n      );\r\n      setGroupQuestions(tempGroupQuestions);\r\n      enqueueSnackbar('Delete success', {\r\n        variant: 'success',\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setGroupQuestionSelected(null);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    clearTimeout(timeOutId);\r\n    timeOutId = setTimeout(() => {\r\n      fetchGroupQuestions(value);\r\n    }, 100);\r\n  };\r\n  const handleSave = (el) => async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (el.id) {\r\n      const { title, description, imageUrl } = el;\r\n      const data = await apis.groupQuestion.updateGroupQuestions(el.id, {\r\n        title,\r\n        description,\r\n        imageUrl,\r\n      });\r\n      if (data && data.status) {\r\n        setOpenModal(false);\r\n        const newGroupQuestions = [...groupQuestions];\r\n        const pos = newGroupQuestions.findIndex((ele) => ele.id === el.id);\r\n        newGroupQuestions[pos] = { ...data.result.groupQuestion };\r\n        setGroupQuestions(newGroupQuestions);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n      } else {\r\n        enqueueSnackbar((data && data.message) || 'Update failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    } else {\r\n      const { title, description, imageUrl } = el;\r\n      if (title.trim().length <= 0) {\r\n        enqueueSnackbar(\"Title doesn't empty \", { variant: 'error' });\r\n        return;\r\n      }\r\n      const data = await apis.groupQuestion.createGroupQuestion({\r\n        title,\r\n        description,\r\n        imageUrl,\r\n      });\r\n      if (data && data.status) {\r\n        setOpenModal(false);\r\n        const newGroupQuestions = [...groupQuestions];\r\n        newGroupQuestions.push({ ...data.result.groupQuestion });\r\n        setGroupQuestions(newGroupQuestions);\r\n        enqueueSnackbar('Create success', { variant: 'success' });\r\n      } else {\r\n        enqueueSnackbar((data && data.message) || 'Create failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickItem = (id) => () => {\r\n    history.push(`/groupQuestions/${id}/questions`);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách bộ câu hỏi\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddIcon />}\r\n            onClick={handleOpenModalAdd}\r\n          >\r\n            Thêm bộ câu hỏi\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      {groupQuestions.length === 0 ? (\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ color: '#ccc' }}\r\n        >\r\n          Không có dữ liệu\r\n        </Typography>\r\n      ) : (\r\n        <List>\r\n          {groupQuestions.map((el) => (\r\n            <ListItem\r\n              className={classes.listItem}\r\n              key={el.id}\r\n              onClick={handleClickItem(el.id)}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.textPrimary,\r\n                }}\r\n                primary={el.title}\r\n                secondary={el.description}\r\n              />\r\n              {/* <ListItemText>\r\n              <Box display=\"flex\" alignItems=\"flex-end\">\r\n                <Box mr={1}>\r\n                  <Typography variant=\"button\" component=\"h2\">\r\n                    Amount Question:\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  10\r\n                </Typography>\r\n              </Box>\r\n            </ListItemText> */}\r\n              <ListItemSecondaryAction>\r\n                <div onClick={handleOpenToggle(el)}>\r\n                  <IconButton edge=\"end\" aria-label=\"more\">\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      <Menu\r\n        classes={{\r\n          paper: classes.menusToggle,\r\n        }}\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleCloseToggle}\r\n      >\r\n        <MenuItem onClick={handleOpenEdit}>Sửa</MenuItem>\r\n        <MenuItem onClick={handleDelete}>Xóa</MenuItem>\r\n      </Menu>\r\n      <GroupQuestionModal\r\n        open={openModal}\r\n        item={groupQuestionSelected}\r\n        handleCloseModal={handleCloseModal}\r\n        handleSave={handleSave}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupQuestion;\r\n","export default ['EASY', 'MEDIUM', 'HARD'];\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '5%',\r\n    bottom: '5%',\r\n    left: '20%',\r\n    // transform: 'translate(-50%, 0%)',\r\n    position: 'absolute',\r\n    width: '60%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n  listAnswer: {\r\n    border: '1px solid #ccc',\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.spacing(0.5),\r\n    height: '300px',\r\n    overflow: 'auto',\r\n  },\r\n  textCreateAnswer: {\r\n    marginLeft: theme.spacing(0.5),\r\n  },\r\n  listAnswerContent: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport mongoid from 'mongoid-js';\r\nimport {\r\n  Modal,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  RootRef,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport { Remove as RemoveIcon, Add as AddIcon } from '@material-ui/icons';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport LevelsQuestion from '../../../data/levelsQuestion';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\n\r\nconst QuestionModal = ({\r\n  handleCloseModal,\r\n  open,\r\n  itemSelect,\r\n  handleUpdateQuestion,\r\n  groupQuestionId,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [question, setQuestion] = useState();\r\n  useEffect(() => {}, [open]);\r\n\r\n  useEffect(() => {\r\n    setQuestion(itemSelect);\r\n  }, [itemSelect, open]);\r\n\r\n  const handleAddAnswer = (e) => {\r\n    e.preventDefault();\r\n    const answerData = {\r\n      answerId: mongoid(),\r\n      position: (question && question.answers && question.answers.length) || 0,\r\n      content: '',\r\n      isCorrect: false,\r\n    };\r\n    setQuestion({\r\n      ...question,\r\n      answers:\r\n        question && question.answers\r\n          ? [...question.answers, answerData]\r\n          : [answerData],\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setQuestion({\r\n      ...question,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDeleteAnswer = (pos) => () => {\r\n    const newAnswers = question && question.answers;\r\n    newAnswers.splice(pos, 1);\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const handleEditAnswer = (pos) => (e) => {\r\n    const newAnswers = question && question.answers;\r\n    newAnswers[pos] = {\r\n      ...newAnswers[pos],\r\n      content: e.target.value,\r\n    };\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const validateQuestion = (item) => {\r\n    if (item.description.trim().length <= 0) {\r\n      enqueueSnackbar('Description is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (item.answers.length < 2) {\r\n      enqueueSnackbar('Must have at least 2 answers', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    const questionCorrect = item.answers.find((el) => el.isCorrect);\r\n    if (!questionCorrect) {\r\n      enqueueSnackbar('You have not chosen the correct answer', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    let data = null;\r\n    if (!validateQuestion(question)) return;\r\n    if (itemSelect && itemSelect.id) {\r\n      data = await apis.question.updateQuestion(itemSelect.id, {\r\n        ...question,\r\n        level: question.level || 'EASY',\r\n        groupQuestion: groupQuestionId,\r\n      });\r\n    } else {\r\n      data = await apis.question.createQuestion({\r\n        ...question,\r\n        level: question.level || 'EASY',\r\n        groupQuestion: groupQuestionId,\r\n      });\r\n    }\r\n    if (data && data.status) {\r\n      const { question: newQuestion } = data.result;\r\n      const type = itemSelect && itemSelect.id ? 'UPDATE' : 'ADD';\r\n      handleUpdateQuestion(newQuestion, type);\r\n      enqueueSnackbar('Save data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Save data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChooseCorrectAnswer = (pos) => () => {\r\n    let newAnswers = question && question.answers;\r\n    newAnswers = newAnswers.map((el, index) => ({\r\n      ...el,\r\n      isCorrect: index === pos,\r\n    }));\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n\r\n    ...(isDragging && {\r\n      background: 'rgb(235,235,235)',\r\n    }),\r\n  });\r\n\r\n  const handleDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const startIndex = result.source.index;\r\n    const endIndex = result.destination.index;\r\n    const newAnswers = question && question.answers;\r\n\r\n    newAnswers[startIndex].position = endIndex;\r\n    newAnswers[endIndex].position = startIndex;\r\n\r\n    const [removed] = newAnswers.splice(startIndex, 1);\r\n    newAnswers.splice(endIndex, 0, removed);\r\n\r\n    setQuestion({\r\n      ...question,\r\n      answers: newAnswers,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Thông tin câu hỏi\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>Cấp độ câu hỏi</InputLabel>\r\n            <Select\r\n              name=\"level\"\r\n              label=\"Cấp độ câu hỏi\"\r\n              value={(question && question.level) || 'EASY'}\r\n              onChange={handleChange}\r\n            >\r\n              {LevelsQuestion.map((el) => (\r\n                <MenuItem value={el} key={el}>\r\n                  {el}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Tiêu đề câu hỏi\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            value={(question && question.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nội dung câu hỏi\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={10}\r\n            name=\"description\"\r\n            value={(question && question.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2} className={classes.listAnswer}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            {/* <QuestionAnswerIcon /> */}\r\n\r\n            <Typography variant=\"h6\" className={classes.textCreateAnswer}>\r\n              Danh sách đáp án\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided) => (\r\n                  <RootRef rootRef={provided.innerRef}>\r\n                    <List>\r\n                      {question &&\r\n                        question.answers &&\r\n                        question.answers.map((item, index) => (\r\n                          <Draggable\r\n                            key={`item-${index}`}\r\n                            draggableId={`item-${index}`}\r\n                            index={index}\r\n                          >\r\n                            {(providedItem, snapshotItem) => (\r\n                              <ListItem\r\n                                ContainerComponent=\"li\"\r\n                                ContainerProps={{ ref: providedItem.innerRef }}\r\n                                {...providedItem.draggableProps}\r\n                                {...providedItem.dragHandleProps}\r\n                                style={getItemStyle(\r\n                                  snapshotItem.isDragging,\r\n                                  providedItem.draggableProps.style,\r\n                                )}\r\n                              >\r\n                                <ListItemIcon>\r\n                                  <div onClick={handleDeleteAnswer(index)}>\r\n                                    <IconButton>\r\n                                      <RemoveIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                  primary={\r\n                                    <Box>\r\n                                      <Checkbox\r\n                                        checked={item.isCorrect}\r\n                                        onChange={handleChooseCorrectAnswer(\r\n                                          index,\r\n                                        )}\r\n                                        inputProps={{\r\n                                          'aria-label': 'primary checkbox',\r\n                                        }}\r\n                                      />\r\n                                      <TextField\r\n                                        value={item.content}\r\n                                        onChange={handleEditAnswer(index)}\r\n                                      />\r\n                                    </Box>\r\n                                  }\r\n                                />\r\n                                <ListItemSecondaryAction />\r\n                              </ListItem>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                      {provided.placeholder}\r\n                    </List>\r\n                  </RootRef>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleAddAnswer}\r\n            >\r\n              Thêm\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Giải thích đáp án\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={5}\r\n            name=\"explain\"\r\n            value={(question && question.explain) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuestionModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    position: 'absolute',\r\n    width: '30%',\r\n    margin: '0 auto',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Modal, Box, Typography, Divider } from '@material-ui/core';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\n\r\nconst UploadInfoModal = ({ handleCloseModal, open }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box\r\n          mb={1}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Hướng dẫn tải file\r\n          </Typography>\r\n          <Box onClick={handleCloseModal}>\r\n            <CloseIcon style={{ color: '#ccc', cursor: 'pointer' }} />\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <Box mt={2}>\r\n          <Typography>\r\n            Bạn cần tạo file excel theo format dưới đây để hệ thống có thể đọc\r\n            được nội dụng 1 cách chính xác:{' '}\r\n            <a\r\n              href=\"https://docs.google.com/spreadsheets/d/1f55YQ53WrT2acGgoaIzBXN9ZauLfpiipTqrWnLlGT44/edit?usp=sharing\"\r\n              target=\"_blank\"\r\n            >\r\n              link\r\n            </a>\r\n            <span>--</span>\r\n            <a\r\n              href=\"https://docs.google.com/spreadsheets/d/1aa0U3ezXc7FIGA-P_k6mIV-bVZV0QeiZoAUDbTdJUOY/edit?usp=drive_link\"\r\n              target=\"_blank\"\r\n            >\r\n              link2\r\n            </a>\r\n          </Typography>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UploadInfoModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { COLOR } from '../../styles/color';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  accordion: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n  question: {\r\n    fontWeight: 'bold',\r\n  },\r\n  heading: {\r\n    fontSize: theme.spacing(2.5),\r\n  },\r\n  detail: {\r\n    width: '100%',\r\n  },\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  redStatus: {\r\n    color: COLOR.red['500'],\r\n  },\r\n  greenStatus: { color: COLOR.green['500'] },\r\n  yellowStatus: { color: COLOR.yellow['500'] },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n","/* eslint-disable radix */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport mongoid from 'mongoid-js';\r\nimport readXlsxFile from 'read-excel-file';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  IconButton,\r\n  TablePagination,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Backup as BackupIcon,\r\n  InfoOutlined as InfoIcon,\r\n} from '@material-ui/icons';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport QuestionModal from './QuestionModal';\r\nimport UploadInfoModal from './UploadInfoModal';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\n\r\nconst Question = () => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const { id: groupQuestionId } = useParams();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openModalUploadInfo, setOpenModalUploadInfo] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const [questionSelect, setQuestionSelect] = useState(null);\r\n  const [pagination, setPagination] = useState({\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    count: 100,\r\n  });\r\n\r\n  const fetchQuestions = async (param) => {\r\n    const offset =\r\n      param && param.offset >= 0\r\n        ? param.offset\r\n        : pagination.page * pagination.rowsPerPage;\r\n    const query = {\r\n      sort: (param && param.sort) || 'createdAt_desc',\r\n      key: param && param.key,\r\n      limit: (param && param.limit) || pagination.rowsPerPage,\r\n      offset,\r\n      groupQuestionId,\r\n    };\r\n    const data = await apis.question.getQuestionsInGroup({ ...query });\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.metadata.count || 0,\r\n      });\r\n      setQuestions(result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = async (event, newPage) => {\r\n    await fetchQuestions({\r\n      key: keySearch,\r\n      offset: newPage * pagination.rowsPerPage,\r\n    });\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    setPagination({\r\n      ...pagination,\r\n      page: 0,\r\n    });\r\n    await fetchQuestions({ key: value, offset: 0 });\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setQuestionSelect(null);\r\n  };\r\n\r\n  const handleOpenUploadInfoModal = (e) => {\r\n    e.preventDefault();\r\n    setOpenModalUploadInfo(true);\r\n  };\r\n\r\n  const handleCloseUploadInfoModal = () => {\r\n    setOpenModalUploadInfo(false);\r\n  };\r\n\r\n  const handleClickRow = (row) => (e) => {\r\n    e.preventDefault();\r\n    setQuestionSelect(row);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleUpdateQuestion = (item, type) => {\r\n    if (type === 'ADD') {\r\n      fetchQuestions({ offset: 0 });\r\n      setKeySearch('');\r\n      handleCloseModal();\r\n      return;\r\n    }\r\n    const newQuestions = [...questions];\r\n    const pos = newQuestions.findIndex((el) => el.id === item.id);\r\n    newQuestions[pos] = { ...item };\r\n    handleCloseModal();\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleDeleteQuestion = async (id) => {\r\n    const data = await apis.question.deleteQuestion(id);\r\n    if (data && data.status) {\r\n      fetchQuestions({ key: keySearch });\r\n      enqueueSnackbar('Delete data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateQuestionInExcel = (row) => {\r\n    const levels = ['EASY', 'MEDIUM', 'HARD'];\r\n    console.log(row[row.length - 1]);\r\n    const correctAnswer = parseInt(row[row.length - 1]);\r\n    const amountAnswer = row.length - 5;\r\n    console.log({ correctAnswer, amountAnswer });\r\n    if (\r\n      !row[0] ||\r\n      levels.indexOf(row[0]) < 0 ||\r\n      !row[2] ||\r\n      amountAnswer < 2 ||\r\n      !correctAnswer ||\r\n      correctAnswer < 1 ||\r\n      correctAnswer > amountAnswer\r\n    )\r\n      return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleImportExcel = (e) => {\r\n    e.preventDefault();\r\n    enqueueSnackbar('Data is being processed, which may take a few minutes ', {\r\n      variant: 'warning',\r\n    });\r\n    const file = e.target.files[0];\r\n    try {\r\n      readXlsxFile(file).then(async (rows) => {\r\n        console.log(rows);\r\n\r\n        await Promise.all(\r\n          rows.map(async (el) => {\r\n            const row = el\r\n              .filter((ele) => ele)\r\n              .map((ele) => ele.toString().trim());\r\n            if (validateQuestionInExcel(row)) {\r\n              const questionData = {\r\n                level: row[0],\r\n                title: row[1],\r\n                description: row[2],\r\n                explain: row[3],\r\n                answers: row.slice(4, row.length - 1).map((ele, index) => ({\r\n                  answerId: mongoid(),\r\n                  position: index,\r\n                  content: ele,\r\n                  isCorrect: parseInt(row[row.length - 1]) === index + 1,\r\n                })),\r\n              };\r\n              //console.log('123');\r\n              await apis.question.createQuestion({\r\n                ...questionData,\r\n                groupQuestion: groupQuestionId,\r\n              });\r\n            }\r\n          }),\r\n        );\r\n        fetchQuestions({ offset: 0 });\r\n        setKeySearch('');\r\n        enqueueSnackbar('Import data success', {\r\n          variant: 'success',\r\n        });\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Import data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box mr={1} display=\"flex\" alignItems=\"center\">\r\n            <Box mr={1} onClick={handleOpenUploadInfoModal}>\r\n              <InfoIcon style={{ color: '#ccc', cursor: 'pointer' }} />\r\n            </Box>\r\n            <input\r\n              accept=\"*\"\r\n              className={classes.input}\r\n              id=\"contained-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={handleImportExcel}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Tooltip title=\"Đọc kĩ hướng dẫn ở icon bên cạnh trước khi tải lên\">\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  style={{ color: '#fff', background: 'green' }}\r\n                  component=\"span\"\r\n                  startIcon={<BackupIcon />}\r\n                >\r\n                  Tải lên\r\n                </Button>\r\n              </Tooltip>\r\n            </label>\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n              onClick={handleOpenModalAdd}\r\n            >\r\n              Thêm câu hỏi\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">STT</TableCell>\r\n                <TableCell>Tiêu đề câu hỏi</TableCell>\r\n                <TableCell>Cấp độ</TableCell>\r\n                <TableCell align=\"center\">Số lượng câu trả lời</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {questions.map((row, index) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  className={classes.row}\r\n                  onClick={handleClickRow(row)}\r\n                >\r\n                  <TableCell align=\"center\">\r\n                    {pagination.page * pagination.rowsPerPage + index + 1}\r\n                  </TableCell>\r\n                  <TableCell>{row.title}</TableCell>\r\n                  <TableCell\r\n                    classes={{\r\n                      body:\r\n                        row.level === 'HARD'\r\n                          ? classes.redStatus\r\n                          : row.level === 'MEDIUM'\r\n                          ? classes.yellowStatus\r\n                          : classes.greenStatus,\r\n                    }}\r\n                  >\r\n                    {row.level}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.answers && row.answers.length}\r\n                  </TableCell>\r\n                  <TableCell className={classes.actionBox}>\r\n                    <Box>\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteQuestion(row.id);\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          {questions.length > 0 &&\r\n            pagination.count > pagination.rowsPerPage && (\r\n              <TablePagination\r\n                component=\"div\"\r\n                rowsPerPageOptions={[pagination.rowsPerPage]}\r\n                count={pagination.count}\r\n                page={pagination.page}\r\n                onChangePage={handleChangePage}\r\n                rowsPerPage={pagination.rowsPerPage}\r\n              />\r\n            )}\r\n        </TableContainer>\r\n      </Box>\r\n      <QuestionModal\r\n        open={openModal}\r\n        groupQuestionId={groupQuestionId}\r\n        handleCloseModal={handleCloseModal}\r\n        itemSelect={questionSelect}\r\n        handleUpdateQuestion={handleUpdateQuestion}\r\n      />\r\n      <UploadInfoModal\r\n        open={openModalUploadInfo}\r\n        handleCloseModal={handleCloseUploadInfoModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  questionBox: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  listQuestionBox: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n  },\r\n  questionSquare: {\r\n    border: '1px solid #eee',\r\n    width: '20px',\r\n    height: '20px',\r\n    margin: '2px',\r\n    borderRadius: '50px',\r\n    padding: theme.spacing(2),\r\n  },\r\n  fullscreen: {\r\n    background: '#fafafa',\r\n    zIndex: 99999,\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    width: '100%',\r\n    overflowX: 'hidden',\r\n    overflowY: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    position: 'fixed',\r\n    padding: theme.spacing(8),\r\n  },\r\n  prevent_copy_paste: {\r\n    userSelect: 'none' /* Ngăn chặn chọn text */,\r\n    '-moz-user-select': 'none' /* Firefox */,\r\n    '-webkit-user-select': 'none' /* Chrome, Safari, Opera */,\r\n    '-ms-user-select': 'none' /* Internet Explorer/Edge */,\r\n  },\r\n  answerRow: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      background: '#ccc',\r\n    },\r\n  },\r\n}));\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\n\r\nconst useUnsavedChangesWarning = (\r\n  message = 'Are you sure want to discard changes?',\r\n) => {\r\n  const [isDirty, setDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = isDirty && (() => message);\r\n\r\n    return () => {\r\n      window.onbeforeunload = null;\r\n    };\r\n  }, [isDirty]);\r\n\r\n  const routerPrompt = <Prompt when={isDirty} message={message} />;\r\n\r\n  return [routerPrompt, () => setDirty(true), () => setDirty(false)];\r\n};\r\n\r\nexport default useUnsavedChangesWarning;\r\n","// eslint-disable-next-line\r\nimport { Modal } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './styles.css';\r\nimport { IKImage, IKVideo, IKContext, IKUpload } from 'imagekitio-react';\r\nconst ModalImage = ({ imageUrl }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n  imageUrl = 'https://i.imgur.com/v63TJ4j.png';\r\n\r\n  return (\r\n    <div>\r\n      <button alt=\"Modal Image\" onClick={openModal}>\r\n        Image\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <Modal\r\n          open={isOpen}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <div className=\"image-frame\">\r\n            <img\r\n              className=\"cover-image\"\r\n              src={imageUrl}\r\n              //   style={{ width: '50%', height: '50%' }}\r\n              alt=\"Image\"\r\n            />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalImage;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable radix */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport {\r\n  Fullscreen as FullscreenIcon,\r\n  Send as SendIcon,\r\n  AccessTime as AccessTimeIcon,\r\n  FullscreenExit as FullscreenExitIcon,\r\n} from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport LoadingPage from '../../components/LoadingPage';\r\nimport { renderClockTime } from '../../utils/date';\r\nimport useUnsavedChangesWarning from './useUnsavedChangesWarning';\r\nimport ModalImage from '../Image';\r\nimport { isImageUrlCheck } from '../../utils/string';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\nlet interval = null;\r\n\r\nconst alphabet = 'A B C D E F G H I K L M N O P Q R S T V X Y Z';\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ExamTest = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [Prompt, setDirty, setPristine] = useUnsavedChangesWarning(\r\n    'Hiện tại bài thi chưa được lưu, nếu bạn thoát mọi câu trả lời trong lần thi này sẽ bị hủy bỏ',\r\n  );\r\n  const [contest, setContest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [questionSelected, setQuestionSelected] = useState({});\r\n  const [timeDoExam, setTimeDoExam] = useState(0);\r\n  const [countWarnming, setcountWarnming] = useState(0);\r\n  const [countWarnmingF12, setcountWarnmingF12] = useState(0);\r\n  const [isMarking, setIsMarking] = useState(false);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openAlertF12, setOpenAlertF12] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(true); // Giả sử kết nối internet là có sẵn ban đầu\r\n\r\n  const handleClick = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const handleCloseF12 = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlertF12(false);\r\n  };\r\n\r\n  const handleChangeAnswer = (value) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionSelected.data.id]: value,\r\n    });\r\n  };\r\n\r\n  const handleFullscreen = (e) => {\r\n    e.preventDefault();\r\n    setIsFullscreen((prev) => !prev);\r\n  };\r\n\r\n  const handleFinishExam = async () => {\r\n    const examData = {\r\n      doTime: contest.examTime * 60 - timeDoExam,\r\n      contestId: contest.id,\r\n      groupQuestionId: contest.groupQuestion,\r\n      answers,\r\n    };\r\n    const data = await apis.contest.mark({\r\n      ...examData,\r\n    });\r\n    if (data && data.status) {\r\n      const { result } = data.result;\r\n      // eslint-disable-next-line no-alert\r\n      console.log(`mark done ${result.amountCorrectQuestion}`);\r\n      history.push(`/contest/${contest.id}/exam/detail?resultId=${result.id}`);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Mark failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStartExam = (examTime) => {\r\n    const startTime = new Date();\r\n    interval = setInterval(() => {\r\n      const now = new Date();\r\n      const timeDo = Math.floor((now - startTime) / 1000);\r\n      if (timeDo < examTime) {\r\n        setTimeDoExam(examTime - timeDo);\r\n      } else {\r\n        setTimeDoExam(0);\r\n        setIsMarking(true);\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const fetchContest = async () => {\r\n    const token = query.get('token');\r\n    const data = await apis.contest.getQuestions({ id, token });\r\n    if (data && data.status) {\r\n      const { contest: contestData } = data.result;\r\n      setContest(contestData);\r\n      setQuestionSelected({\r\n        position: 0,\r\n        data: contestData.questions[0],\r\n      });\r\n      setTimeDoExam(contestData.examTime * 60);\r\n      handleStartExam(contestData.examTime * 60);\r\n      setIsLoading(false);\r\n    } else {\r\n      history.push(`/contest/${id}/exam/detail`);\r\n    }\r\n  };\r\n  /* useEffect(() => {\r\n    const checkInternetConnection = async () => {\r\n      try {\r\n        await axios.get('https://www.google.com');\r\n        setIsOnline(true);\r\n      } catch (error) {\r\n        setIsOnline(false);\r\n      }\r\n    };\r\n\r\n    checkInternetConnection();\r\n  }, [isOnline]); */\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOnline(true);\r\n    };\r\n\r\n    const handleOffline = () => {\r\n      setIsOnline(false);\r\n    };\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setDirty();\r\n    fetchContest();\r\n    return () => {\r\n      console.log('clear interval');\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('load marking');\r\n    if (isMarking) {\r\n      setPristine();\r\n      handleFinishExam();\r\n    }\r\n  }, [isMarking]);\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n      event.preventDefault();\r\n      event.returnValue = ''; // Một số trình duyệt yêu cầu một chuỗi trống để hiển thị thông báo mặc định\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, []);\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e) => {\r\n      const confirmationMessage = 'Bạn có chắc muốn rời khỏi trang này?';\r\n      console.log(confirmationMessage);\r\n      e.returnValue = confirmationMessage; // Standard for most browsers\r\n      return confirmationMessage; // For some older browsers\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (countWarnmingF12 >= 2) {\r\n        alert('Bạn đã cố tình vị phạm quá 2 lần, bài thi sẽ bị hủy');\r\n        setIsMarking(true);\r\n        return;\r\n      }\r\n      // Kiểm tra nếu phím F12 được nhấn\r\n      // Chặn sử dụng phím tắt (ví dụ: Ctrl+Shift+I, F12)\r\n      if (e.key === 'F12' || (e.ctrlKey && e.shiftKey && e.key === 'I')) {\r\n        e.preventDefault();\r\n        setcountWarnmingF12(countWarnmingF12 + 1);\r\n        setOpenAlertF12(true);\r\n      }\r\n    };\r\n    document.addEventListener('contextmenu', (e) => {\r\n      e.preventDefault();\r\n    });\r\n    // Lắng nghe sự kiện keydown\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    // Xóa lắng nghe khi component unmount\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [countWarnmingF12]);\r\n\r\n  const handleClickQuestion = (pos) => (e) => {\r\n    e.preventDefault();\r\n    setQuestionSelected({\r\n      position: pos,\r\n      data: contest.questions[pos],\r\n    });\r\n  };\r\n  //Chặn phím PrintScreen và chụp màn hình\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === 'PrintScreen' && event.shiftKey && event.metaKey) {\r\n        event.preventDefault();\r\n        // Xử lý hoặc hiển thị thông báo khi người dùng cố gắng chụp ảnh màn hình\r\n        console.log('Chụp ảnh màn hình đã bị chặn!');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const captureScreenshot = async () => {\r\n    try {\r\n      /* const canvas = await html2canvas(document.body);\r\n      // Xử lý ảnh chụp được từ màn hình\r\n      console.log(canvas.toDataURL('image/png')); */\r\n    } catch (error) {\r\n      alert('Lỗi khi chụp màn hình:', error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n  if (isMarking) {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" style={{ color: '#ccc' }}>\r\n          The system is processing, wait a few second...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n  // Xử lí dạng ảnh {{image_url}}}\r\n  const textString = questionSelected.data.description;\r\n\r\n  const imageUrlRegex = /\\{\\{(.*?)\\}\\}/g;\r\n  const replacedString = textString.replace(\r\n    imageUrlRegex,\r\n    (match, imageUrl) => {\r\n      if (isImageUrlCheck(imageUrl)) {\r\n        return `<img src=\"${imageUrl}\" alt=\"Hình ảnh test\" style=\"width: auto; height: 50px;\"  />`;\r\n      } else {\r\n        return imageUrl;\r\n      }\r\n    },\r\n  );\r\n\r\n  // Chống copy paste\r\n  const handleCopyPaste = (e) => {\r\n    e.preventDefault();\r\n    if (countWarnming >= 2) {\r\n      alert('Bạn đã copy-paste quá 2 lần, bài thi sẽ bị hủy');\r\n      setIsMarking(true);\r\n      return;\r\n    }\r\n    if (countWarnming == 1) {\r\n      console.log('Copy-paste is not allowed! lần 2');\r\n      setOpenAlert(true);\r\n      setcountWarnming(countWarnming + 1);\r\n      return;\r\n    }\r\n    console.log('Copy-paste is not allowed! lần 1');\r\n    setcountWarnming(1);\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${isFullscreen ? classes.fullscreen : ''} prevent_copy_paste`}\r\n      onCopy={handleCopyPaste}\r\n      onPaste={handleCopyPaste}\r\n    >\r\n      {/* <Prompt\r\n        when={!isMarking}\r\n        message={(location) =>\r\n          `Are you sure you want to go to ${location.pathname}`\r\n        }\r\n        \r\n      /> */}\r\n      {/* Snackbar */}\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={openAlert}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"warning\">\r\n          Cảnh bảo lần {countWarnming} !!! Không được phép Copy-paste\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={openAlertF12}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseF12}\r\n      >\r\n        <Alert onClose={handleCloseF12} severity=\"warning\">\r\n          Cảnh bảo {countWarnmingF12} !!! Còn cố ý sử dụng F12 thì bài thi sẽ bị\r\n          hủy\r\n        </Alert>\r\n      </Snackbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        flexWrap=\"wrap\"\r\n        mb={2}\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box mr={1}>\r\n            <AccessTimeIcon />\r\n          </Box>\r\n          <Typography\r\n            variant=\"button\"\r\n            display=\"block\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: 'bold',\r\n              fontSize: '16px',\r\n            }}\r\n          >\r\n            {renderClockTime(timeDoExam)}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box mr={0.5}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<SendIcon />}\r\n              onClick={() => {\r\n                setIsMarking(true);\r\n              }}\r\n              style={{ background: '#f16a73', color: '#fff', fontSize: '16px' }}\r\n            >\r\n              Nộp bài\r\n            </Button>\r\n          </Box>\r\n          <Box mr={0.5}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={\r\n                isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />\r\n              }\r\n              onClick={handleFullscreen}\r\n            >\r\n              {isFullscreen ? 'Thoát toàn màn hình' : 'Toàn màn hình '}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} md={9}>\r\n            <Paper className={classes.paper}>\r\n              <Box mb={0.5}>\r\n                <Typography gutterBottom style={{ textAlign: 'center' }}>\r\n                  Câu số {questionSelected && questionSelected.position + 1}\r\n                </Typography>\r\n                {/* <ModalImage /> */}\r\n                <Typography gutterBottom style={{ color: '#ccc' }}>\r\n                  {questionSelected &&\r\n                    questionSelected.data &&\r\n                    questionSelected.data.title}\r\n                </Typography>\r\n                <div variant=\"h6\" gutterBottom>\r\n                  {questionSelected && questionSelected.data && (\r\n                    <div dangerouslySetInnerHTML={{ __html: replacedString }} />\r\n                  )}\r\n                </div>\r\n                {/*  <Typography variant=\"h6\" gutterBottom>\r\n                  {questionSelected &&\r\n                    questionSelected.data &&\r\n                    questionSelected.data.description}\r\n                </Typography> */}\r\n              </Box>\r\n              <Box>\r\n                {questionSelected &&\r\n                  questionSelected.data &&\r\n                  questionSelected.data.answers\r\n                    .sort((a, b) => a.position - b.position)\r\n                    .map((el, index) => (\r\n                      <Box\r\n                        style={{\r\n                          background: `${\r\n                            answers[questionSelected.data.id] === el.answerId\r\n                              ? '#81d1a2'\r\n                              : '#eceff0'\r\n                          }`,\r\n                          padding: '20px 20px',\r\n                          marginBottom: '10px',\r\n                          borderRadius: '10px',\r\n                          border: '1px solid #ccc',\r\n                        }}\r\n                        className={classes.answerRow}\r\n                        onClick={() => handleChangeAnswer(el.answerId)}\r\n                      >\r\n                        <Typography key={index}>\r\n                          {alphabet.split(' ')[index]}.{` ${el.content}`}\r\n                        </Typography>\r\n                      </Box>\r\n                    ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Paper className={classes.questionBox}>\r\n              <Box mb={0.5}>\r\n                <Typography>Danh sách câu hỏi</Typography>\r\n              </Box>\r\n              <Box className={classes.listQuestionBox}>\r\n                {contest &&\r\n                  contest.questions.map((el, index) => (\r\n                    // console.log(el.description),\r\n                    <Button\r\n                      key={index}\r\n                      className={classes.questionSquare}\r\n                      style={\r\n                        questionSelected && questionSelected.position === index\r\n                          ? {\r\n                              background: '#f6a61f',\r\n                              color: '#fff',\r\n                            }\r\n                          : answers[el.id] && {\r\n                              background: '#eceff0',\r\n                              border: '1px solid #ccc',\r\n                            }\r\n                      }\r\n                      onClick={handleClickQuestion(index)}\r\n                    >\r\n                      {index + 1}\r\n                    </Button>\r\n                  ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      {Prompt}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamTest;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    borderLeft: '10px solid #4991e2',\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    //borderTop: '1px solid #ccc',\r\n  },\r\n}));\r\n","export default {\r\n  UPCOMING: 0,\r\n  HAPPENING: 1,\r\n  ENDED: 2,\r\n};\r\n","/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable consistent-return */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography, Box, TextField, Button } from '@material-ui/core';\r\n/* import {\r\n  Description as DescriptionIcon,\r\n  HourglassEmpty as HourglassEmptyIcon,\r\n} from '@material-ui/icons'; */\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport constants from '../../../constants';\r\nimport errorCodes from '../../../constants/errorCodes';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\n\r\nconst PrepareExam = ({ examId }) => {\r\n  const classes = useStyles();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const history = useHistory();\r\n  const [contest, setContest] = useState();\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const handleRedirectToExamTest = (contestToken) => {\r\n    history.push(`/contest/${examId}/exam/test?token=${contestToken}`);\r\n  };\r\n\r\n  const handleCheckPassword = async () => {\r\n    try {\r\n      const data = await apis.contest.verifyPassword({ id: examId, password });\r\n      if (data.status) {\r\n        const { contestToken } = data.result;\r\n        handleRedirectToExamTest(contestToken);\r\n      } else {\r\n        enqueueSnackbar(data.message || 'Check password failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar('Check password failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchContest = async () => {\r\n    const data = await apis.contest.getContest(examId);\r\n    if (data && data.status) {\r\n      const { contest: contestData } = data.result;\r\n      setContest(contestData);\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContest();\r\n  }, []);\r\n\r\n  const renderUpcomingStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Sắp diễn ra\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderHappeningStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Box display=\"flex\" mt={2}>\r\n          {contest.isLock && (\r\n            <TextField\r\n              size=\"small\"\r\n              id=\"outlined-basic\"\r\n              label=\"Nhập code\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          )}\r\n\r\n          <Button\r\n            style={{ marginLeft: 3 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              contest.isLock\r\n                ? handleCheckPassword()\r\n                : handleRedirectToExamTest();\r\n            }}\r\n          >\r\n            Thi\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderEndedStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Đã kết thúc\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderByStatus = () => {\r\n    if (contest) {\r\n      if (contest.status === constants.UPCOMING) return renderUpcomingStatus();\r\n      if (contest.status === constants.HAPPENING)\r\n        return renderHappeningStatus();\r\n      if (contest.status === constants.ENDED) return renderEndedStatus();\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.paper}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Tên: {contest && contest.title}\r\n        </Typography>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Mô tả: {(contest && contest.description) || ''}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Thời gian: {contest && contest.examTime}(m)\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            <p>\r\n              <strong class=\"\">Nội quy</strong>\r\n            </p>\r\n            <span>\r\n              - Không nhờ người khác thi hộ. <br />- Không sao chép câu trả lời\r\n              từ tài liệu trên internet.\r\n              <p>\r\n                <strong class=\"text-danger\" style={{ color: '#dc3545' }}>\r\n                  - Không thoát khỏi màn hình làm bài thi. Nếu bạn thoát khỏi\r\n                  màn hình bài thi, hệ thống tự động nộp bài và ghi nhận kết quả\r\n                  trước đó\r\n                </strong>\r\n              </p>\r\n            </span>\r\n          </Typography>\r\n        </Box>\r\n\r\n        {renderByStatus()}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrepareExam;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  active: {\r\n    background: '#f6a61f',\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  Paper,\r\n  TableBody,\r\n  Avatar,\r\n  TablePagination,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Highcharts from 'highcharts';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\nimport { renderClockTime } from '../../../utils/date';\r\n\r\nconst ExamDetail = ({ examId, role, resultId }) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [numberOfQuestion, setNumberOfQuestion] = useState(0);\r\n  const [pagination, setPagination] = useState({\r\n    count: 100,\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  const renderArrayFromNumberQuestion = () => {\r\n    const arr = [];\r\n\r\n    if (results.length > 0) {\r\n      const firstEle = results[0];\r\n      // eslint-disable-next-line operator-assignment\r\n      for (let i = 0; i <= firstEle.amountQuestion; i = i + 1) arr.push(0);\r\n    }\r\n    console.log(arr);\r\n    return [...arr];\r\n  };\r\n\r\n  const renderDataChart = () => {\r\n    const arr = renderArrayFromNumberQuestion(numberOfQuestion);\r\n    results.forEach((el) => {\r\n      // eslint-disable-next-line no-plusplus\r\n      arr[el.amountCorrectQuestion]++;\r\n    });\r\n    console.log({ arr });\r\n    return arr;\r\n  };\r\n\r\n  const highChartsRender = () => {\r\n    Highcharts.chart({\r\n      chart: {\r\n        type: ['column'],\r\n        renderTo: 'graph-summary-contest',\r\n      },\r\n      title: {\r\n        text: 'Thống kê kết quả',\r\n      },\r\n      xAxis: {\r\n        title: {\r\n          text: 'Số câu đúng',\r\n        },\r\n        categories: renderArrayFromNumberQuestion().map((el, index) => index),\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: 'Số người',\r\n        },\r\n      },\r\n      legend: {\r\n        layout: 'horizontal',\r\n        align: 'center',\r\n        verticalAlign: 'top',\r\n        borderWidth: 0,\r\n        itemDistance: 30,\r\n        margin: 5,\r\n        display: 'none',\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Số người',\r\n          data: renderDataChart(),\r\n          color: '#f6a61f',\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const fetchResults = async () => {\r\n    const data = await apis.contest.getResultByContest(examId);\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n\r\n      const resultIndex = result.data.findIndex((el) => el.id === resultId);\r\n      let page = 0;\r\n      if (resultIndex >= 0) {\r\n        page = Math.floor(resultIndex / pagination.rowsPerPage);\r\n      }\r\n      setResults(result.data);\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.data.length,\r\n        page,\r\n      });\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      highChartsRender();\r\n    }\r\n  }, [isLoading]);\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">No.</TableCell>\r\n                <TableCell>Tên</TableCell>\r\n                <TableCell align=\"center\">Số câu đúng</TableCell>\r\n                <TableCell align=\"center\">Thời gian(m)</TableCell>\r\n                <TableCell align=\"center\">Ngày</TableCell>\r\n                {role && <TableCell />}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {results\r\n                .slice(\r\n                  pagination.page * pagination.rowsPerPage,\r\n                  pagination.page * pagination.rowsPerPage +\r\n                    pagination.rowsPerPage,\r\n                )\r\n                .map((row, index) => (\r\n                  <TableRow\r\n                    key={row.id}\r\n                    className={classes.row}\r\n                    classes={{\r\n                      root: row.id === resultId && classes.active,\r\n                    }}\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      {pagination.page * pagination.rowsPerPage + index + 1}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                        <Avatar\r\n                          alt=\"avatar\"\r\n                          src={row.participant.avatar}\r\n                          style={{\r\n                            height: '25px',\r\n                            width: '25px',\r\n                            marginRight: '3px',\r\n                          }}\r\n                        />\r\n                        {row.participant.name}\r\n                      </Box>\r\n                      <Box>{row.participant.email}</Box>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.amountCorrectQuestion}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {renderClockTime(row.doTime)}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.createdAt).format('LLL')}\r\n                    </TableCell>\r\n                    {role && (\r\n                      <TableCell align=\"center\">\r\n                        <Button variant=\"outlined\" color=\"primary\">\r\n                          Chi tiết\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n          {results.length <= 0 && (\r\n            <Typography\r\n              style={{\r\n                width: '100%',\r\n                padding: 10,\r\n                textAlign: 'center',\r\n                color: '#ccc',\r\n              }}\r\n            >\r\n              Không có dữ liệu\r\n            </Typography>\r\n          )}\r\n        </TableContainer>\r\n        {results.length > pagination.rowsPerPage && (\r\n          <TablePagination\r\n            component=\"div\"\r\n            rowsPerPageOptions={[pagination.rowsPerPage]}\r\n            count={pagination.count}\r\n            page={pagination.page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={pagination.rowsPerPage}\r\n          />\r\n        )}\r\n      </Box>\r\n      <Box mt={2}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Biều đồ\r\n        </Typography>\r\n        <div id=\"graph-summary-contest\" />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default ExamDetail;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({}));\r\n","// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport moment from 'moment';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  Typography,\r\n  TablePagination,\r\n} from '@material-ui/core';\r\nimport apis from '../../../apis';\r\nimport useStyles from './index.style';\r\nimport { renderClockTime } from '../../../utils/date';\r\n\r\nconst ExamHistory = ({ examId }) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [results, setResults] = useState([]);\r\n\r\n  const [pagination, setPagination] = useState({\r\n    count: 100,\r\n    page: 0,\r\n    rowsPerPage: 6,\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  const fetchResultsByUser = async () => {\r\n    const data = await apis.contest.getResultByUserInContest(examId);\r\n    if (data && data.status) {\r\n      setResults(data.result.data);\r\n      setPagination({\r\n        ...pagination,\r\n        count: data.result.data.length,\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchResultsByUser();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Lần</TableCell>\r\n              <TableCell align=\"center\">Số câu đúng </TableCell>\r\n              <TableCell align=\"center\">Thời gian(m)</TableCell>\r\n              <TableCell align=\"center\">Ngày</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {results\r\n              .slice(\r\n                pagination.page * pagination.rowsPerPage,\r\n                pagination.page * pagination.rowsPerPage +\r\n                  pagination.rowsPerPage,\r\n              )\r\n              .map((row, index) => (\r\n                <TableRow key={row.id} className={classes.row}>\r\n                  <TableCell align=\"center\">{index + 1}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.amountCorrectQuestion}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {renderClockTime(row.doTime)}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {moment(row.createdAt).format('DD/MM/YYYY h:mm:ss a')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n        {results.length <= 0 && (\r\n          <Typography\r\n            style={{\r\n              width: '100%',\r\n              padding: 10,\r\n              textAlign: 'center',\r\n              color: '#ccc',\r\n            }}\r\n          >\r\n            Không có dữ liệu\r\n          </Typography>\r\n        )}\r\n      </TableContainer>\r\n      {results.length > pagination.rowsPerPage && (\r\n        <TablePagination\r\n          component=\"div\"\r\n          rowsPerPageOptions={[pagination.rowsPerPage]}\r\n          count={pagination.count}\r\n          page={pagination.page}\r\n          onChangePage={handleChangePage}\r\n          rowsPerPage={pagination.rowsPerPage}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ExamHistory;\r\n","// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Box, Typography, Paper, Grid, Divider } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport ExamInformation from './ExamInformation';\r\nimport ExamRank from './ExamRank';\r\nimport ExamHistory from './ExamHistory';\r\nimport apis from '../../apis';\r\nimport PrepareExam from './ExamInformation';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst ExamDetail = () => {\r\n  const classes = useStyles();\r\n  const userInfo = useSelector((state) => state.auth.user);\r\n  const { id } = useParams();\r\n  const query = useQuery();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [role, setRole] = useState();\r\n\r\n  const fetchAccRoleInContest = async () => {\r\n    const data = await apis.contest.checkAccountRole({\r\n      contestId: id,\r\n      userId: userInfo.id,\r\n    });\r\n    if (data && data.status) {\r\n      setRole(data.result.role);\r\n    } else if (data && data.code !== 404) {\r\n      enqueueSnackbar(data.status || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAccRoleInContest();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <PrepareExam examId={id} /> */}\r\n      <Grid container spacing={1}>\r\n        {role && (\r\n          <>\r\n            <Grid item xs={12} md={6}>\r\n              <Paper className={classes.paper}>\r\n                <Box>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Thông tin bài thi\r\n                  </Typography>\r\n                  <Divider style={{ marginBottom: 20 }} />\r\n                  <ExamInformation examId={id} />\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Paper\r\n                className={classes.paper}\r\n                style={{ borderLeft: '10px solid #f16a73' }}\r\n              >\r\n                <Box style={{ minHeight: '230px' }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Lịch sử làm bài\r\n                  </Typography>\r\n                  <Divider style={{ marginBottom: 20 }} />\r\n                  <ExamHistory examId={id} />\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          </>\r\n        )}\r\n\r\n        <Grid item xs={12}>\r\n          <Paper\r\n            className={classes.paper}\r\n            style={{ borderLeft: '10px solid #48bb78' }}\r\n          >\r\n            <Box>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Bảng xếp hạng\r\n              </Typography>\r\n              <Divider style={{ marginBottom: 20 }} />\r\n              <ExamRank\r\n                examId={id}\r\n                role={role}\r\n                resultId={query.get('resultId')}\r\n              />\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default ExamDetail;\r\n","import Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Home from '../pages/Home';\r\nimport User from '../pages/User';\r\nimport Contest from '../pages/Contest';\r\nimport GroupQuestion from '../pages/GroupQuestion';\r\nimport Question from '../pages/Question';\r\nimport ExamTest from '../pages/ExamTest';\r\nimport ExamDetail from '../pages/ExamDetail';\r\nimport routes from '../constants/route';\r\n\r\nexport default [\r\n  {\r\n    path: routes.LOGIN,\r\n    component: Login,\r\n    exact: true,\r\n    restricted: true,\r\n    isPrivate: false,\r\n  },\r\n  {\r\n    path: routes.REGISTER,\r\n    component: Register,\r\n    exact: true,\r\n    restricted: true,\r\n    isPrivate: false,\r\n  },\r\n  {\r\n    path: routes.HOME,\r\n    component: Home,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.USER,\r\n    component: User,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.CONTEST,\r\n    component: Contest,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.GROUP_QUESTIONS,\r\n    component: GroupQuestion,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.QUESTION,\r\n    component: Question,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.EXAM_TEST,\r\n    component: ExamTest,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.EXAM_DETAIL,\r\n    component: ExamDetail,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport LoginContainer from '../containers/Login';\r\n\r\nexport default function Login() {\r\n  return <LoginContainer />;\r\n}\r\n","import React from 'react';\r\nimport RegisterContainer from '../containers/Register';\r\n\r\nexport default function Register() {\r\n  return <RegisterContainer />;\r\n}\r\n","import React from 'react';\r\nimport HomeContainer from '../containers/Home';\r\n\r\nexport default function Home() {\r\n  return <HomeContainer />;\r\n}\r\n","import React from 'react';\r\nimport UserContainer from '../containers/User';\r\n\r\nexport default function User() {\r\n  return <UserContainer />;\r\n}\r\n","import React from 'react';\r\nimport ContestContainer from '../containers/Contest';\r\n\r\nexport default function Contest() {\r\n  return <ContestContainer />;\r\n}\r\n","import React from 'react';\r\nimport GroupQuestionContainer from '../containers/GroupQuestion';\r\n\r\nexport default function GroupQuestion() {\r\n  return <GroupQuestionContainer />;\r\n}\r\n","import React from 'react';\r\nimport QuestionContainer from '../containers/Question';\r\n\r\nexport default function Question() {\r\n  return <QuestionContainer />;\r\n}\r\n","import React from 'react';\r\nimport ExamTestContainer from '../containers/ExamTest';\r\n\r\nexport default function Exam() {\r\n  return <ExamTestContainer />;\r\n}\r\n","import React from 'react';\r\nimport ExamDetailContainer from '../containers/ExamDetail';\r\n\r\nexport default function ExamDetail() {\r\n  return <ExamDetailContainer />;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { getCookie } from '../utils/cookie';\r\nimport routes from '../constants/route';\r\nimport appRoutes from './appRoutes';\r\nimport actions from '../redux/actions';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const { accessToken, verifying } = useSelector((state) => state.auth);\r\n  //console.log({ verifying });\r\n  const [isFirstTime, setIsFirstTime] = useState(true);\r\n  useEffect(() => {\r\n    if (!accessToken) {\r\n      const accessTokenFromCookie = getCookie('accessToken');\r\n      if (accessTokenFromCookie) {\r\n        dispatch(actions.auth.verifyToken(accessTokenFromCookie));\r\n      }\r\n    }\r\n    setIsFirstTime(false);\r\n  }, []);\r\n  //console.log({ isFirstTime });\r\n  if (isFirstTime || verifying) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        {appRoutes.map(\r\n          ({\r\n            path,\r\n            exact = true,\r\n            component: Component,\r\n            isPrivate = false,\r\n            ...rest\r\n          }) => {\r\n            if (!isPrivate) {\r\n              return (\r\n                <PublicRoute\r\n                  key={path}\r\n                  exact={exact}\r\n                  path={path}\r\n                  Component={Component}\r\n                  {...rest}\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <PrivateRoute\r\n                key={path}\r\n                exact={exact}\r\n                path={path}\r\n                Component={Component}\r\n                {...rest}\r\n              />\r\n            );\r\n          },\r\n        )}\r\n        <Redirect to={routes.HOME} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import { actionTypes } from './actions';\r\n\r\nexport const initialState = {\r\n  accessToken: null,\r\n  isLoggingIn: false,\r\n  verifying: false,\r\n  loginCode: null,\r\n  status: null,\r\n  message: null,\r\n  user: null,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN:\r\n      return { ...state, isLoggingIn: true };\r\n\r\n    case actionTypes.LOGIN_SUCCESS: {\r\n      const { accessToken, user } = action;\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        status: 1,\r\n        accessToken,\r\n        user,\r\n      };\r\n    }\r\n\r\n    case actionTypes.LOGIN_FAILURE: {\r\n      const { code, message } = action;\r\n      return {\r\n        ...state,\r\n        loginCode: code,\r\n        message,\r\n        status: 0,\r\n        isLoggingIn: false,\r\n      };\r\n    }\r\n\r\n    case actionTypes.VERIFY_TOKEN:\r\n      return { ...state, verifying: true };\r\n\r\n    case actionTypes.VERIFY_TOKEN_SUCCESS: {\r\n      const { accessToken, user } = action;\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        accessToken,\r\n        user,\r\n        status: 1,\r\n      };\r\n    }\r\n\r\n    case actionTypes.VERIFY_TOKEN_FAILURE:\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        status: 0,\r\n        user: null,\r\n        accessToken: null,\r\n      };\r\n\r\n    case actionTypes.LOGOUT:\r\n      return { ...state, status: 0, accessToken: null, user: null };\r\n\r\n    case actionTypes.UPDATE_USER: {\r\n      const { user } = action;\r\n      return { ...state, user };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth, { initialState as authInitialState } from './auth/reducer';\r\n\r\nexport const initialState = {\r\n  auth: authInitialState,\r\n};\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","/* eslint-disable no-case-declarations */\r\nimport { put, all, takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport apis from '../../apis';\r\nimport actions from '../actions';\r\nimport { setCookie } from '../../utils/cookie';\r\nimport loginType from '../../constants/loginType';\r\n\r\nfunction* loginSaga(data) {\r\n  try {\r\n    const A_WEEK = 7 * 24 * 60 * 60 * 1000;\r\n    let res = null;\r\n    switch (data && data.loginType) {\r\n      case loginType.LOGIN_GOOGLE:\r\n        const { tokenId } = data;\r\n        res = yield apis.auth.loginByGoogle(tokenId);\r\n        break;\r\n      case loginType.LOGIN_FACEBOOK:\r\n        const { accessToken, userID } = data;\r\n        res = yield apis.auth.loginByFacebook({ accessToken, userID });\r\n        break;\r\n      default:\r\n        const { email, password } = data;\r\n        res = yield apis.auth.login(email, password);\r\n    }\r\n\r\n    if (res.status) {\r\n      const { accessToken, user } = res.result;\r\n      setCookie('accessToken', accessToken, A_WEEK);\r\n      yield put(actions.auth.loginSuccess(accessToken, user));\r\n    } else {\r\n      const { code, message } = res;\r\n      yield put(actions.auth.loginFailure(code, message));\r\n    }\r\n  } catch (error) {\r\n    yield put(actions.auth.loginFailure());\r\n  }\r\n}\r\n\r\nfunction* verifyTokenSaga({ accessToken }) {\r\n  try {\r\n    const data = yield apis.auth.verify(accessToken);\r\n    if (!data.status) throw new Error();\r\n    const { user } = data.result;\r\n    if (user) {\r\n      yield put(actions.auth.verifyTokenSuccess(accessToken, user));\r\n    } else {\r\n      yield put(actions.auth.verifyTokenFailure());\r\n    }\r\n  } catch (error) {\r\n    yield put(actions.auth.verifyTokenFailure());\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    takeLatest(actions.auth.actionTypes.LOGIN, loginSaga),\r\n    takeEvery(actions.auth.actionTypes.VERIFY_TOKEN, verifyTokenSaga),\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport authSagas from './auth/sagas';\r\n\r\nfunction* rootSaga() {\r\n  yield all([authSagas()]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer, { initialState } from './reducer';\r\nimport rootSaga from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension'); // eslint-disable-line import/no-extraneous-dependencies, global-require\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(preloadedState = initialState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    bindMiddleware([sagaMiddleware]),\r\n  );\r\n\r\n  store.runSagaTask = () => {\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  };\r\n\r\n  store.runSagaTask();\r\n  return store;\r\n}\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Highcharts from 'highcharts';\r\nimport './index.css';\r\nimport { SnackbarProvider } from 'notistack';\r\n// import MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './languages';\r\nimport Router from './router';\r\nimport store from './redux/store';\r\nimport html2canvass from 'html2canvas';\r\nwindow.Highcharts = Highcharts;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <Provider store={store()}>\r\n        <SnackbarProvider>\r\n          <Router />\r\n        </SnackbarProvider>\r\n      </Provider>\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}