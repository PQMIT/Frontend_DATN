{"version":3,"sources":["theme.js","serviceWorker.js","languages/index.js","constants/route.js","router/PublicRoute.jsx","redux/auth/actions.js","redux/actions.js","components/Layout/index.style.js","utils/cookie.js","components/Layout/index.jsx","router/PrivateRoute.jsx","constants/image.js","containers/Login/index.style.js","constants/loginType.js","utils/string.js","containers/Login/index.jsx","containers/Register/index.style.js","apis/api.js","apis/auth.js","apis/user.js","apis/groupQuestion.js","apis/question.js","apis/contest.js","apis/upload.js","apis/index.js","containers/Register/index.jsx","containers/Home/TabDetail/index.style.js","containers/Home/TabDetail/index.jsx","containers/Home/index.style.js","components/LoadingPage/index.jsx","containers/Home/index.jsx","containers/User/index.style.js","containers/User/UserInformation/index.style.js","containers/User/UserInformation/index.jsx","containers/User/ChangePassword/index.style.js","containers/User/ChangePassword/index.jsx","containers/User/index.jsx","components/SearchBox/index.jsx","containers/Contest/ContestModal/index.style.js","utils/date.js","containers/Contest/ContestModal/index.jsx","styles/color.js","containers/Contest/index.style.js","containers/Contest/index.jsx","containers/GroupQuestion/index.style.js","containers/GroupQuestion/GroupQuestionModal/index.style.js","containers/GroupQuestion/GroupQuestionModal/index.jsx","containers/GroupQuestion/index.jsx","data/levelsQuestion.js","containers/Question/QuestionModal/index.style.js","containers/Question/QuestionModal/index.jsx","containers/Question/UploadInfoModal/index.style.js","containers/Question/UploadInfoModal/index.jsx","containers/Question/index.style.js","containers/Question/index.jsx","containers/ExamTest/index.style.js","containers/ExamTest/useUnsavedChangesWarning.js","containers/Image/index.jsx","containers/ExamTest/index.jsx","containers/ExamDetail/index.style.js","containers/ExamDetail/ExamInformation/index.style.js","constants/index.js","containers/ExamDetail/ExamInformation/index.jsx","containers/ExamDetail/ExamRank/index.style.js","containers/ExamDetail/ExamRank/index.jsx","containers/ExamDetail/ExamHistory/index.style.js","containers/ExamDetail/ExamHistory/index.jsx","containers/ExamDetail/index.jsx","router/appRoutes.js","pages/Login.jsx","pages/Register.jsx","pages/Home.jsx","pages/User.jsx","pages/Contest.jsx","pages/GroupQuestion.jsx","pages/Question.jsx","pages/ExamTest.jsx","pages/ExamDetail.jsx","router/index.jsx","redux/auth/reducer.js","redux/reducer.js","redux/auth/sagas.js","redux/saga.js","redux/store.js","index.jsx"],"names":["initialCustomTheme","createTheme","palette","primary","blue","secondary","lightBlue","active","boxShadow","boxShadow_l1","black","grey","greyWhile","border","l1","typography","fontFamily","overrides","MuiDrawer","paper","position","overflowY","zIndex","drawer","breakpoints","values","xs","sm","md","lg","xl","Boolean","window","location","hostname","match","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enTranslation","vi","viTranslation","fallbackLng","interpolation","escapeValue","nsSeparator","keySeparator","PublicRoute","_ref","Component","restricted","rest","accessToken","useSelector","state","auth","React","createElement","Route","Object","assign","render","props","Redirect","to","routes","actionTypes","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","VERIFY_TOKEN","VERIFY_TOKEN_SUCCESS","VERIFY_TOKEN_FAILURE","LOGOUT","UPDATE_USER","login","loginType","data","type","loginSuccess","user","loginFailure","code","message","verifyToken","verifyTokenSuccess","verifyTokenFailure","logout","updateUser","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","concat","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","textTransform","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","link","textDecoration","color","avatar","listItem","background","setCookie","cname","cvalue","extime","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","name","ca","split","i","length","c","charAt","substring","indexOf","menus","heading","icon","DashboardIcon","route","TimerIcon","AssignmentIcon","PersonIcon","Layout","children","classes","useStyles","open","setOpen","useState","dispatch","useDispatch","userInfo","pathname","useLocation","anchorEl","setAnchorEl","handleOpenMenuHeader","event","currentTarget","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","handleDrawerOpen","MenuIcon","Avatar","src","Typography","component","variant","noWrap","Box","alt","Menu","id","keepMounted","onClose","handleCloseMenuHeader","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleLogout","actions","Drawer","handleDrawerClose","ChevronLeftIcon","Divider","List","map","el","index","Link","key","ListItem","button","ListItemIcon","ListItemText","Container","maxWidth","PrivateRoute","image","backgroundImage","backgroundRepeat","backgroundColor","backgroundSize","backgroundPosition","margin","main","form","marginTop","submit","divider","validateEmail","email","test","String","toLowerCase","Login","enqueueSnackbar","useSnackbar","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","isLoggingIn","useEffect","handleLogin","async","validateLogin","countError","onKeyPress","e","Grid","item","Paper","elevation","square","LockOutlinedIcon","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","value","onChange","target","error","helperText","Button","preventDefault","justify","href","mt","gutterBottom","align","axiosClient","axios","baseURL","process","responseType","timeout","interceptors","request","config","headers","Authorization","response","camelCase","deep","console","api","method","url","loginByGoogle","tokenId","loginByFacebook","userID","register","_ref2","verify","changePassword","getGroupQuestions","params","createGroupQuestion","updateGroupQuestions","deleteGroupQuestions","getQuestionsInGroup","limit","offset","sort","fields","groupQuestionId","getQuestion","createQuestion","updateQuestion","deleteQuestion","getContests","param","getContestsJoined","getContestsByUser","getContest","createContest","updateContest","deleteContest","verifyPassword","getQuestions","token","mark","_ref3","doTime","contestId","answers","getResultByContest","getResultByUserInContest","checkAccountRole","_ref4","userId","uploadFile","formData","API","groupQuestion","question","contest","upload","Register","history","useHistory","setUser","userError","setUserError","validateRegister","prev","apis","status","push","media","date","TabDetail","t","useTranslation","Card","CardHeader","createdBy","action","style","examTime","subheader","CardMedia","imageUrl","CardActions","AccessTimeIcon","fontSize","moment","startTime","format","marginBottom","LoadingPage","contestsDefault","Home","tab","setTab","isLoading","setIsLoading","contests","setContests","contestsJoined","setContestsJoined","result","fetchContests","raw","_templateObject","_taggedTemplateLiteral","Fragment","mb","Tabs","newValue","newContests","filter","endTime","fetchContestsJoined","indicatorColor","textColor","Tab","stepper","buttons","paperImage","input","large","borderRadius","opacity","btnCamera","cursor","top","left","transform","User","setUserInfo","handleChange","accept","FormData","file","files","append","htmlFor","PhotoCameraIcon","textAlign","disabled","phoneNumber","urlFacebook","urlYoutube","urlWebsite","size","dob","trim","paddingLeft","ChangePassword","currentPassword","newPassword","confirmNewPassword","UserInformation","renderTab","find","SearchBox","handleSearch","InputProps","startAdornment","InputAdornment","SearchIcon","placeholder","bottom","shadows","outline","listAnswer","textCreateAnswer","listAnswerContent","formControl","getDate","day","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","dateSet","setHours","setMinutes","setSeconds","setDate","setMonth","setYear","renderClockTime","time","hours","Math","floor","minutes","seconds","hoursString","slice","minutesString","secondsString","ContestModal","handleCloseModal","itemSelect","handleUpdateContest","groupQuestions","setContest","handleDateChange","checked","Modal","aria-labelledby","aria-describedby","multiline","rows","description","MuiPickersUtilsProvider","utils","DateFnsUtils","KeyboardDatePicker","inputVariant","KeyboardButtonProps","KeyboardTimePicker","FormControl","InputLabel","Select","labelId","FormControlLabel","control","Checkbox","isActive","mr","validateContest","contestData","newContest","COLOR","100","200","300","400","500","600","700","800","900","textPrimary","fontWeight","accordion","menusToggle","detail","actionBox","row","redStatus","greenStatus","yellowStatus","Contest","openModal","setOpenModal","keySearch","setKeySearch","contestSelect","setContestSelect","setGroupQuestions","pagination","setPagination","rowsPerPage","page","count","metadata","keyword","fetchGroupQuestions","handleClickRow","withStyles","green","startIcon","AddIcon","TableContainer","Table","table","TableHead","TableRow","TableCell","TableBody","Tooltip","LockIcon","stopPropagation","pos","findIndex","splice","handleDeleteContest","DeleteIcon","TablePagination","rowsPerPageOptions","onChangePage","newPage","GroupQuestionModal","handleSave","setState","setGroupQuestion","timeOutId","GroupQuestion","groupQuestionSelected","setGroupQuestionSelected","handleOpenToggle","clearTimeout","setTimeout","ListItemAvatar","ImageIcon","ListItemSecondaryAction","MoreVertIcon","handleCloseToggle","handleOpenEdit","tempGroupQuestions","ele","newGroupQuestions","QuestionModal","handleUpdateQuestion","setQuestion","handleEditAnswer","newAnswers","handleChooseCorrectAnswer","isCorrect","level","LevelsQuestion","DragDropContext","onDragEnd","destination","startIndex","source","endIndex","removed","Droppable","droppableId","provided","RootRef","rootRef","innerRef","Draggable","draggableId","providedItem","snapshotItem","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","RemoveIcon","inputProps","answerData","answerId","mongoid","explain","validateQuestion","newQuestion","UploadInfoModal","CloseIcon","Question","useParams","openModalUploadInfo","setOpenModalUploadInfo","questions","setQuestions","questionSelect","setQuestionSelect","fetchQuestions","query","InfoIcon","multiple","readXlsxFile","then","log","Promise","all","toString","correctAnswer","parseInt","amountAnswer","validateQuestionInExcel","questionData","BackupIcon","body","handleDeleteQuestion","newQuestions","handleCloseUploadInfoModal","questionBox","listQuestionBox","flexWrap","questionSquare","fullscreen","prevent_copy_paste","userSelect","answerRow","useUnsavedChangesWarning","arguments","undefined","isDirty","setDirty","onbeforeunload","routerPrompt","Prompt","when","ModalImage","interval","Alert","MuiAlert","ExamTest","URLSearchParams","search","setPristine","setAnswers","questionSelected","setQuestionSelected","timeDoExam","setTimeDoExam","isMarking","setIsMarking","isFullscreen","setIsFullscreen","openAlert","setOpenAlert","handleClose","reason","fetchContest","get","setInterval","now","timeDo","clearInterval","handleStartExam","examData","amountCorrectQuestion","handleFinishExam","replacedString","replace","handleCopyPaste","onCopy","onPaste","Snackbar","autoHideDuration","severity","SendIcon","FullscreenExitIcon","FullscreenIcon","dangerouslySetInnerHTML","__html","a","b","handleChangeAnswer","borderLeft","PrepareExam","examId","handleRedirectToExamTest","contestToken","renderHappeningStatus","isLock","handleCheckPassword","class","renderByStatus","constants","ExamDetail","role","resultId","results","setResults","numberOfQuestion","setNumberOfQuestion","renderArrayFromNumberQuestion","arr","firstEle","amountQuestion","renderDataChart","forEach","resultIndex","fetchResults","Highcharts","chart","renderTo","text","xAxis","categories","yAxis","legend","layout","verticalAlign","borderWidth","itemDistance","series","participant","createdAt","handleChangePage","ExamHistory","fetchResultsByUser","setRole","fetchAccRoleInContest","ExamInformation","minHeight","ExamRank","path","LoginContainer","exact","isPrivate","RegisterContainer","HomeContainer","UserContainer","ContestContainer","GroupQuestionContainer","QuestionContainer","ExamTestContainer","ExamDetailContainer","verifying","isFirstTime","setIsFirstTime","accessTokenFromCookie","CircularProgress","BrowserRouter","Switch","appRoutes","initialState","loginCode","authInitialState","combineReducers","loginSaga","A_WEEK","res","put","verifyTokenSaga","Error","rootSaga","takeLatest","takeEvery","authSagas","sagaMiddleware","createSagaMiddleware","bindMiddleware","middleware","applyMiddleware","configureStore","preloadedState","store","createStore","rootReducer","runSagaTask","sagaTask","run","ReactDOM","StrictMode","MuiThemeProvider","Provider","SnackbarProvider","Router","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e9c0c3d.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\r\nimport { blue, lightBlue, grey } from '@material-ui/core/colors';\r\n\r\nconst initialCustomTheme = createTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: lightBlue,\r\n    active: '#eee',\r\n    boxShadow:\r\n      'rgba(0, 0, 0, 0.42) 0px 10px 30px -12px, rgba(0, 0, 0, 0.12) 0px 4px 25px 0px, rgba(0, 0, 0, 0.2) 0px 8px 10px -5px',\r\n    boxShadow_l1:\r\n      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    black: grey[900],\r\n    greyWhile: '#f5f5f5',\r\n  },\r\n  border: {\r\n    l1: 'solid 1px #ccc',\r\n  },\r\n\r\n  typography: {\r\n    fontFamily: 'Muli',\r\n  },\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        position: 'inherit',\r\n        overflowY: 'inherit',\r\n      },\r\n    },\r\n  },\r\n  zIndex: {\r\n    drawer: 10,\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n});\r\n\r\nexport default initialCustomTheme;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport enTranslation from './locales/en.json';\r\nimport viTranslation from './locales/vi.json';\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: enTranslation,\r\n      },\r\n      vi: {\r\n        translation: viTranslation,\r\n      },\r\n    },\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    nsSeparator: ':::',\r\n    keySeparator: '::',\r\n  });\r\n\r\nexport default i18n;\r\n","export default {\r\n  HOME: '/',\r\n  LOGIN: '/login',\r\n  REGISTER: '/register',\r\n  USER: '/user',\r\n  GROUP_QUESTIONS: '/groupQuestions',\r\n  CONTEST: '/contests',\r\n  QUESTION: '/groupQuestions/:id/questions',\r\n  EXAM_TEST: '/contest/:id/exam/test',\r\n  EXAM_DETAIL: '/contest/:id/exam/detail',\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport routes from '../constants/route';\r\n\r\nexport default function PublicRoute({ Component, restricted, ...rest }) {\r\n  const accessToken = useSelector((state) => state.auth.accessToken);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        accessToken ? <Redirect to={routes.HOME} /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n}\r\n","export const actionTypes = {\r\n  LOGIN: 'LOGIN',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  VERIFY_TOKEN: 'VERIFY_TOKEN',\r\n  VERIFY_TOKEN_SUCCESS: 'VERIFY_TOKEN_SUCCESS',\r\n  VERIFY_TOKEN_FAILURE: 'VERIFY_TOKEN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n};\r\n\r\nexport function login(loginType, data) {\r\n  return {\r\n    type: actionTypes.LOGIN,\r\n    loginType,\r\n    ...data,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(accessToken, user) {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    accessToken,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function loginFailure(code, message) {\r\n  return {\r\n    type: actionTypes.LOGIN_FAILURE,\r\n    code,\r\n    message,\r\n  };\r\n}\r\n\r\nexport function verifyToken(accessToken) {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN,\r\n    accessToken,\r\n  };\r\n}\r\n\r\nexport function verifyTokenSuccess(accessToken, user) {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN_SUCCESS,\r\n    accessToken,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function verifyTokenFailure() {\r\n  return {\r\n    type: actionTypes.VERIFY_TOKEN_FAILURE,\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return {\r\n    type: actionTypes.LOGOUT,\r\n  };\r\n}\r\n\r\nexport function updateUser(user) {\r\n  return {\r\n    type: actionTypes.UPDATE_USER,\r\n    user,\r\n  };\r\n}\r\n","import * as auth from './auth/actions';\r\n\r\nexport default {\r\n  auth,\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textTransform: 'uppercase',\r\n    marginLeft: 2,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: '#000',\r\n  },\r\n  avatar: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  listItem: {\r\n    background: '#eee',\r\n  },\r\n}));\r\n","export function setCookie(cname, cvalue, extime) {\r\n  const d = new Date();\r\n  d.setTime(d.getTime() + extime);\r\n  const expires = `expires=${d.toUTCString()}`;\r\n  document.cookie = `${cname}=${cvalue};${expires};path=/`;\r\n}\r\n\r\nexport function getCookie(cname) {\r\n  const name = `${cname}=`;\r\n  const ca = document.cookie.split(';');\r\n  for (let i = 0; i < ca.length; i += 1) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  CssBaseline,\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Breadcrumbs,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  ChevronLeft as ChevronLeftIcon,\r\n  Lock as LockIcon,\r\n  Dashboard as DashboardIcon,\r\n  Person as PersonIcon,\r\n  Assignment as AssignmentIcon,\r\n  Timer as TimerIcon,\r\n} from '@material-ui/icons';\r\nimport routes from '../../constants/route';\r\nimport actions from '../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport { setCookie } from '../../utils/cookie';\r\n\r\nconst menus = [\r\n  {\r\n    heading: 'Trang chủ',\r\n    icon: <DashboardIcon />,\r\n    route: routes.HOME,\r\n  },\r\n  {\r\n    heading: 'Quản lý cuộc thi',\r\n    icon: <TimerIcon />,\r\n    route: routes.CONTEST,\r\n  },\r\n  {\r\n    heading: 'Quản lý câu hỏi',\r\n    icon: <AssignmentIcon />,\r\n    route: routes.GROUP_QUESTIONS,\r\n  },\r\n  {\r\n    heading: 'Thông tin tài khoản',\r\n    icon: <PersonIcon />,\r\n    route: routes.USER,\r\n  },\r\n];\r\n\r\nconst Layout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.auth.user);\r\n  const { pathname } = useLocation();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleOpenMenuHeader = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenuHeader = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setCookie('accessToken');\r\n    dispatch(actions.auth.logout());\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden,\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Avatar src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621772719/bfvfvstmneai0d1z0byx.png\" />\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Multichoice\r\n          </Typography>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Typography variant=\"body2\">{userInfo && userInfo.name}</Typography>\r\n            {userInfo && userInfo.avatar ? (\r\n              <Avatar\r\n                alt=\"avatar\"\r\n                src={userInfo.avatar}\r\n                className={classes.avatar}\r\n                onClick={handleOpenMenuHeader}\r\n              />\r\n            ) : (\r\n              <Avatar\r\n                aria-label=\"recipe\"\r\n                className={classes.avatar}\r\n                onClick={handleOpenMenuHeader}\r\n              >\r\n                {(userInfo && userInfo.name && userInfo.name[0]) || 'T'}\r\n              </Avatar>\r\n            )}\r\n          </Box>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleCloseMenuHeader}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n          >\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menus.map((el, index) => (\r\n            <Link to={el.route} key={index} className={classes.link}>\r\n              <ListItem\r\n                button\r\n                key={index}\r\n                classes={{\r\n                  root:\r\n                    ((el.route === '/' && pathname === el.route) ||\r\n                      (pathname.indexOf(el.route) >= 0 && el.route !== '/')) &&\r\n                    classes.listItem,\r\n                }}\r\n              >\r\n                <ListItemIcon>{el.icon}</ListItemIcon>\r\n                <ListItemText primary={el.heading} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          {children}\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport routes from '../constants/route';\r\nimport Layout from '../components/Layout';\r\n\r\nexport default function PrivateRoute({ Component, ...rest }) {\r\n  const accessToken = useSelector((state) => state.auth.accessToken);\r\n  return (\r\n    <Layout>\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          accessToken ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect to={routes.LOGIN} />\r\n          )\r\n        }\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n","export default {\r\n  // BACKGROUND_IMAGE: 'https://portal.bay4.com/images/login/background.jpg',\r\n  BACKGROUND_IMAGE: 'https://i.imgur.com/FJCFD8D.png',\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport image from '../../constants/image';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${image.BACKGROUND_IMAGE})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? /* theme.palette.grey[50] */ '#e1ceaf'\r\n        : theme.palette.grey[900],\r\n\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  divider: {\r\n    border: '1px solid #ccc',\r\n    height: '1px',\r\n    flexGrow: 1,\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","export default {\r\n  LOGIN: 'LOGIN',\r\n  LOGIN_GOOGLE: 'LOGIN_GOOGLE',\r\n  LOGIN_FACEBOOK: 'LOGIN_FACEBOOK',\r\n};\r\n","function changeAlias(alias) {\r\n  let str = alias;\r\n  str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n  str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n  str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\r\n  str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n  str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n  str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n  str = str.replace(/đ/g, 'd');\r\n  str = str.trim();\r\n  return str;\r\n}\r\n\r\nfunction validateEmail(email) {\r\n  const re =\r\n    /^[^0-9][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[@][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{2,4}$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nfunction validatePassword(password) {\r\n  const re = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,}$/;\r\n  return re.test(password);\r\n}\r\n\r\nfunction isImageUrlCheck(str) {\r\n  // Biểu thức chính quy kiểm tra định dạng đường link ảnh\r\n  const imageUrlRegex = /\\.(jpeg|jpg|gif|png|bmp|svg)$/i;\r\n  return imageUrlRegex.test(str);\r\n}\r\n\r\nexport { changeAlias, validateEmail, validatePassword, isImageUrlCheck };\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable react/no-unescaped-entities */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport actions from '../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport loginType from '../../constants/loginType';\r\nimport { validateEmail } from '../../utils/string';\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoggingIn, message } = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    if (isLoggingIn) return;\r\n    if (message) {\r\n      enqueueSnackbar(message, { variant: 'error' });\r\n    }\r\n  }, [isLoggingIn]);\r\n\r\n  const handleLoginFailureGoogle = (res) => {\r\n    enqueueSnackbar(res, { variant: 'error' });\r\n  };\r\n\r\n  const handleLoginSuccessGoogle = async (res) => {\r\n    const { tokenId } = res;\r\n    dispatch(actions.auth.login(loginType.LOGIN_GOOGLE, { tokenId }));\r\n  };\r\n\r\n  const handleLoginFacebook = async (res) => {\r\n    const { accessToken, userID } = res;\r\n    dispatch(\r\n      actions.auth.login(loginType.LOGIN_FACEBOOK, { accessToken, userID }),\r\n    );\r\n  };\r\n\r\n  const validateLogin = () => {\r\n    let countError = 0;\r\n    if (email.length === 0) {\r\n      setEmailError('Email is required');\r\n      countError++;\r\n    } else if (!validateEmail(email)) {\r\n      setEmailError('Email invalid');\r\n      countError++;\r\n    }\r\n    if (password.length === 0) {\r\n      setPasswordError('Password is required');\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!validateLogin()) return;\r\n    dispatch(actions.auth.login(loginType.LOGIN, { email, password }));\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={8} md={8} className={classes.image} />\r\n      <Grid item xs={12} sm={4} md={4} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng nhập\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onKeyPress={onKeyPress}\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmailError('');\r\n                setEmail(e.target.value);\r\n              }}\r\n              error={emailError}\r\n              helperText={emailError}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Mật khẩu\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onKeyPress={onKeyPress}\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPasswordError('');\r\n                setPassword(e.target.value);\r\n              }}\r\n              error={passwordError}\r\n              helperText={passwordError}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleLogin();\r\n              }}\r\n            >\r\n              Đăng nhập\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  Tạo tài khoản\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box display=\"flex\" mt={1} alignItems=\"center\">\r\n              <div className={classes.divider} />\r\n              <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n                Hoặc\r\n              </Typography>\r\n              <div className={classes.divider} />\r\n            </Box>\r\n\r\n            {/* <Grid container spacing={3}>\r\n              <Grid item xs={6}>\r\n                <GoogleLogin\r\n                  clientId=\"802105279409-3f4hr8psra01jd28d9rhuupgp64658k4.apps.googleusercontent.com\"\r\n                  render={(renderProps) => (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      startIcon={\r\n                        <Avatar\r\n                          style={{\r\n                            height: '20px',\r\n                            width: '20px',\r\n                          }}\r\n                          variant=\"square\"\r\n                          src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771943/m33izryay4mzslavxmyk.png\"\r\n                        />\r\n                      }\r\n                      onClick={renderProps.onClick}\r\n                    >\r\n                      Google\r\n                    </Button>\r\n                  )}\r\n                  buttonText=\"Login\"\r\n                  onSuccess={handleLoginSuccessGoogle}\r\n                  onFailure={handleLoginFailureGoogle}\r\n                  cookiePolicy=\"single_host_origin\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FacebookLogin\r\n                  appId=\"136872808369148\"\r\n                  // eslint-disable-next-line react/jsx-boolean-value\r\n                  autoLoad={false}\r\n                  callback={handleLoginFacebook}\r\n                  render={(renderProps) => (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      startIcon={\r\n                        <Avatar\r\n                          style={{\r\n                            height: '20px',\r\n                            width: '20px',\r\n                          }}\r\n                          variant=\"square\"\r\n                          src=\"https://res.cloudinary.com/dfbongzx0/image/upload/v1621771959/idn7xi1tw5blhrj8zoxk.png\"\r\n                        />\r\n                      }\r\n                      onClick={renderProps.onClick}\r\n                    >\r\n                      Facebook\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid> */}\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport image from '../../constants/image';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${image.BACKGROUND_IMAGE})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n","import axios from 'axios';\r\nimport camelCase from 'camelcase-keys';\r\nimport { getCookie } from '../utils/cookie';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_DOMAIN}/api/v1`,\r\n  responseType: 'json',\r\n  timeout: 15 * 1000,\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  const accessToken = getCookie('accessToken');\r\n  // eslint-disable-next-line no-param-reassign\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    return camelCase(response.data, { deep: true });\r\n  },\r\n  (error) => {\r\n    // Handle error\r\n    console.error(error);\r\n  },\r\n);\r\n\r\nexport default axiosClient;\r\n","import api from './api';\r\n\r\nexport async function login(email, password) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/login',\r\n    data: { email, password },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function loginByGoogle(tokenId) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/loginByGoogle',\r\n    data: { tokenId },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function loginByFacebook({ accessToken, userID }) {\r\n  const loginInfo = await api({\r\n    method: 'POST',\r\n    url: '/auths/loginByFacebook',\r\n    data: { accessToken, userID },\r\n  });\r\n  return loginInfo;\r\n}\r\n\r\nexport async function register({ name, email, password }) {\r\n  const data = await api({\r\n    method: 'POST',\r\n    url: '/auths/register',\r\n    data: { name, email, password },\r\n  });\r\n  return data;\r\n}\r\n\r\nexport async function verify(accessToken) {\r\n  const data = await api({\r\n    method: 'GET',\r\n    url: '/auths/verify',\r\n    headers: { Authorization: `Bearer ${accessToken}` },\r\n  });\r\n  return data;\r\n}\r\n","import api from './api';\r\n\r\nexport async function updateUser(user) {\r\n  const userInfo = await api({\r\n    method: 'PUT',\r\n    url: '/users',\r\n    data: user,\r\n  });\r\n  return userInfo;\r\n}\r\n\r\nexport async function changePassword(data) {\r\n  const userInfo = await api({\r\n    method: 'PUT',\r\n    url: '/users/changePassword',\r\n    data,\r\n  });\r\n  return userInfo;\r\n}\r\n","import api from './api';\r\n\r\nexport async function getGroupQuestions(key) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/groupQuestions',\r\n    params: { key },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createGroupQuestion(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/groupQuestions',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateGroupQuestions(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/groupQuestions/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteGroupQuestions(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/groupQuestions/${id}`,\r\n  });\r\n  return res;\r\n}\r\n","import api from './api';\r\n\r\nexport async function getQuestionsInGroup({\r\n  key,\r\n  limit,\r\n  offset,\r\n  sort,\r\n  fields,\r\n  groupQuestionId,\r\n}) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/questionsInGroup',\r\n    data: {\r\n      key,\r\n      limit,\r\n      offset,\r\n      sort,\r\n      fields,\r\n      groupQuestionId,\r\n    },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getQuestion() {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/questions/:id',\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createQuestion(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/questions',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateQuestion(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/questions/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteQuestion(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/questions/${id}`,\r\n  });\r\n  return res;\r\n}\r\n","import api from './api';\r\n\r\nexport async function getContests(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\nexport async function getContestsJoined(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests/joined',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\nexport async function getContestsByUser(data) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: '/contests/createByUser',\r\n    param: {\r\n      sort: data && data.sort,\r\n      fields: data && data.fields,\r\n    },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function createContest(data) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: '/contests',\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function updateContest(id, data) {\r\n  const res = await api({\r\n    method: 'PUT',\r\n    url: `/contests/${id}`,\r\n    data,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function deleteContest(id) {\r\n  const res = await api({\r\n    method: 'DELETE',\r\n    url: `/contests/${id}`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function verifyPassword({ id, password }) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: `/contests/${id}/verifyPassword`,\r\n    data: { password },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getQuestions({ id, token }) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    headers: {\r\n      'contest-token': token || null,\r\n    },\r\n    url: `/contests/${id}/getAllQuestion`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function mark({ doTime, contestId, groupQuestionId, answers }) {\r\n  const res = await api({\r\n    method: 'POST',\r\n    url: `/contests/${contestId}/mark`,\r\n    data: { doTime, groupQuestionId, answers },\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getResultByContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}/results`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function getResultByUserInContest(id) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${id}/results/user`,\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function checkAccountRole({ contestId, userId }) {\r\n  const res = await api({\r\n    method: 'GET',\r\n    url: `/contests/${contestId}/role/${userId}`,\r\n  });\r\n  return res;\r\n}\r\n","import API from './api';\r\n\r\nexport async function uploadFile({ formData }) {\r\n  try {\r\n    const response = await API({\r\n      method: 'POST',\r\n      url: `/uploads/file`,\r\n      data: formData,\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n}\r\n","import * as auth from './auth';\r\nimport * as user from './user';\r\nimport * as groupQuestion from './groupQuestion';\r\nimport * as question from './question';\r\nimport * as contest from './contest';\r\nimport * as upload from './upload';\r\n\r\nexport default { auth, user, groupQuestion, question, contest, upload };\r\n","/* eslint-disable no-plusplus */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport { validateEmail } from '../../utils/string';\r\n\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [userError, setUserError] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const validateRegister = () => {\r\n    let countError = 0;\r\n    if (user.name.length === 0) {\r\n      setUserError((prev) => ({\r\n        ...prev,\r\n        name: 'Name is required',\r\n      }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.email.length === 0) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email is required' }));\r\n      countError++;\r\n    } else if (!validateEmail(user.email)) {\r\n      setUserError((prev) => ({ ...prev, email: 'Email invalid' }));\r\n      countError++;\r\n    }\r\n\r\n    if (user.password.length === 0) {\r\n      setUserError((prev) => ({ ...prev, password: 'Password is required' }));\r\n      countError++;\r\n    }\r\n    if (countError > 0) return false;\r\n    return true;\r\n  };\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateRegister()) return;\r\n    const data = await apis.auth.register({ ...user });\r\n    if (data && data.status) {\r\n      enqueueSnackbar('Register success', { variant: 'success' });\r\n      history.push('/login');\r\n    } else {\r\n      enqueueSnackbar(data.message || 'Register failed', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng kí\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Họ và tên\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n              value={user.name}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, name: '' });\r\n                setUser({ ...user, name: e.target.value });\r\n              }}\r\n              error={userError.name}\r\n              helperText={userError.name}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={user.email}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, email: '' });\r\n                setUser({ ...user, email: e.target.value });\r\n              }}\r\n              error={userError.email}\r\n              helperText={userError.email}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Mật khẩu\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={user.password}\r\n              onChange={(e) => {\r\n                setUserError({ ...userError, password: '' });\r\n                setUser({ ...user, password: e.target.value });\r\n              }}\r\n              error={userError.password}\r\n              helperText={userError.password}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSignUp}\r\n            >\r\n              Đăng kí\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Bạn đã có tài khoản?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n// import { red } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  date: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n// eslint-disable-next-line\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  Typography,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Box,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { AccessTime as AccessTimeIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\n\r\nconst TabDetail = ({ item }) => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleJoin = (e) => {\r\n    e.preventDefault();\r\n    history.push(`/contest/${item.id}/exam/detail`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={4} key={item.id}>\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            item.createdBy.avatar ? (\r\n              <Avatar alt={item.createdBy.name} src={item.createdBy.avatar} />\r\n            ) : (\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {item.createdBy.name[0]}\r\n              </Avatar>\r\n            )\r\n          }\r\n          action={\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            >\r\n              {item.examTime} phút\r\n            </Typography>\r\n          }\r\n          title={item.title}\r\n          subheader={`Tạo bởi: ${item.createdBy.name}`}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={\r\n            item.imageUrl ||\r\n            'https://monamedia.co/wp-content/uploads/2020/02/javascript-la-gi.jpg'\r\n          }\r\n          title={item.title}\r\n        />\r\n        {/* <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Description:{' '}\r\n            {item.description && item.description.length > 0\r\n              ? item.description\r\n              : `[Empty]`}\r\n          </Typography>\r\n        </CardContent> */}\r\n        <CardActions>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <AccessTimeIcon\r\n                style={{ marginRight: '5px' }}\r\n                color=\"secondary\"\r\n                fontSize=\"small\"\r\n              />\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {item && moment(item.startTime).format('lll')}\r\n              </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleJoin}>\r\n                Tham gia\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TabDetail;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nconst LoadingPage = ({ title = '' }) => {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" style={{ color: '#ccc' }}>\r\n        Loading {title}...\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","/* eslint-disable no-useless-return */\r\n// eslint-disable-next-line\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Paper, Tabs, Tab, Grid, Box, Typography } from '@material-ui/core';\r\nimport TabDetail from './TabDetail';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport LoadingPage from '../../components/LoadingPage';\r\nimport { MathComponent } from 'mathjax-react';\r\nconst menus = [\r\n  { id: 0, heading: 'Tất cả cuộc thi' },\r\n  { id: 1, heading: 'Đã tham gia' },\r\n  { id: 2, heading: 'Đang diễn ra' },\r\n  { id: 3, heading: 'Sắp diễn ra' },\r\n  { id: 4, heading: 'Đã kết thúc' },\r\n];\r\n\r\nlet contestsDefault = [];\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n  const [tab, setTab] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [contests, setContests] = useState([]);\r\n  const [contestsJoined, setContestsJoined] = useState([]);\r\n\r\n  const fetchContests = async () => {\r\n    const data = await apis.contest.getContests();\r\n    if (data && data.status) {\r\n      setContests(data.result.data);\r\n      contestsDefault = [...data.result.data];\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchContestsJoined = async () => {\r\n    const data = await apis.contest.getContestsJoined();\r\n    if (data && data.status) {\r\n      setContestsJoined(data.result.contests);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContests();\r\n  }, []);\r\n\r\n  const handleChangeTab = async (event, newValue) => {\r\n    setTab(newValue);\r\n    const date = new Date();\r\n    if (newValue === 0) {\r\n      setContests([...contestsDefault]);\r\n      return;\r\n    }\r\n    if (newValue === 1) {\r\n      if (contestsJoined.length <= 0) {\r\n        await fetchContestsJoined();\r\n      }\r\n      return;\r\n    }\r\n    if (newValue === 2) {\r\n      const newContests = contestsDefault.filter((el) => {\r\n        if (el.endTime && new Date(el.endTime) < date) return false;\r\n        if (new Date(el.startTime) > date) return false;\r\n        return true;\r\n      });\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    if (newValue === 3) {\r\n      const newContests = contestsDefault.filter(\r\n        (el) => new Date(el.startTime) > date,\r\n      );\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    if (newValue === 4) {\r\n      const newContests = contestsDefault.filter(\r\n        (el) => el.endTime && new Date(el.endTime) < date,\r\n      );\r\n      setContests([...newContests]);\r\n      return;\r\n    }\r\n    return;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n  const math = String.raw`x_{n+1} = x_n - \\frac{f(x_n)}{f'(x_n)}`;\r\n\r\n  return (\r\n    <>\r\n      {/* {<MathComponent tex={String.raw`\\int_0^1 x^2\\ dx`} />} */}\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách cuộc thi\r\n        </Typography>\r\n      </Box>\r\n      <Paper className={classes.root}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          {menus.map((el) => (\r\n            <Tab label={el.heading} key={el.id}>\r\n              {el.heading}\r\n            </Tab>\r\n          ))}\r\n        </Tabs>\r\n      </Paper>\r\n\r\n      {tab === 1 ? (\r\n        <Grid container spacing={3}>\r\n          {contestsJoined.map((el) => (\r\n            <TabDetail item={el} />\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {contests.map((el) => (\r\n            <TabDetail item={el} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  tab: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(10),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  paperImage: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  avatar: {\r\n    position: 'relative',\r\n    borderRadius: '50%',\r\n\r\n    '&:hover': {\r\n      '& label': {\r\n        opacity: '0.3',\r\n      },\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n  btnCamera: {\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    fontSize: '20px',\r\n    backgroundColor: '#FFF',\r\n    opacity: '0',\r\n    transition: '0.5s',\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(10),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  paperImage: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  avatar: {\r\n    position: 'relative',\r\n    borderRadius: '50%',\r\n\r\n    '&:hover': {\r\n      '& label': {\r\n        opacity: '0.3',\r\n      },\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n  btnCamera: {\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    fontSize: '20px',\r\n    backgroundColor: '#FFF',\r\n    opacity: '0',\r\n    transition: '0.5s',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport { PhotoCamera as PhotoCameraIcon } from '@material-ui/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../../redux/actions';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\n\r\nconst User = () => {\r\n  // const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [userInfo, setUserInfo] = useState(\r\n    useSelector((state) => state.auth.user),\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setUserInfo({\r\n      ...userInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      name,\r\n      avatar,\r\n      dob,\r\n      phoneNumber,\r\n      urlFacebook,\r\n      urlYoutube,\r\n      urlWebsite,\r\n    } = userInfo;\r\n    if (name.trim().length <= 0) {\r\n      enqueueSnackbar(\"Name doesn't empty\", { variant: 'error' });\r\n      return;\r\n    }\r\n    const data = await apis.user.updateUser({\r\n      name,\r\n      avatar,\r\n      dob,\r\n      phoneNumber,\r\n      urlFacebook,\r\n      urlYoutube,\r\n      urlWebsite,\r\n    });\r\n    if (data && data.status) {\r\n      dispatch(\r\n        actions.auth.updateUser({\r\n          ...data.result.user,\r\n        }),\r\n      );\r\n      enqueueSnackbar('Update success', { variant: 'success' });\r\n    } else {\r\n      enqueueSnackbar('Update failed', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = async (e) => {\r\n    const formData = new FormData();\r\n    const file = e.target.files[0];\r\n    formData.append('file', file);\r\n    const data = await apis.upload.uploadFile({ formData });\r\n    if (data && data.status) {\r\n      setUserInfo({\r\n        ...userInfo,\r\n        avatar: data.result.link,\r\n      });\r\n    } else {\r\n      enqueueSnackbar('Upload failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Box borderRadius=\"50%\" className={classes.avatar}>\r\n            <Avatar\r\n              alt=\"avatar\"\r\n              src={(userInfo && userInfo.avatar) || ''}\r\n              style={{\r\n                width: '100%',\r\n                height: '200px',\r\n              }}\r\n            />\r\n\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n              onChange={handleUploadImage}\r\n            />\r\n            <label className={classes.btnCamera} htmlFor=\"icon-button-file\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCameraIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </label>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9}>\r\n          <Paper className={classes.paper} variant={3}>\r\n            <Box textAlign=\"center\" mb={3}>\r\n              <Typography variant=\"h4\" component=\"h2\">\r\n                Thông tin\r\n              </Typography>\r\n            </Box>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  label=\"Tên của bạn\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.name) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  disabled\r\n                  value={(userInfo && userInfo.email) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Date picker inline\"\r\n                    value={(userInfo && userInfo.dob) || new Date()}\r\n                    onChange={(value) =>\r\n                      setUserInfo({ ...userInfo, dob: value })\r\n                    }\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid> */}\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  name=\"phoneNumber\"\r\n                  label=\"Số điện thoại\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.phoneNumber) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlFacebook\"\r\n                  label=\"Link Facebook\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlFacebook) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlYoutube\"\r\n                  label=\"Link Youtube\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlYoutube) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  name=\"urlWebsite\"\r\n                  label=\"Link Website\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={(userInfo && userInfo.urlWebsite) || ''}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Box textAlign=\"right\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                size=\"large\"\r\n                onClick={handleSave}\r\n              >\r\n                Lưu\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(10),\r\n    paddingBottom: theme.spacing(10),\r\n    paddingRight: theme.spacing(20),\r\n    paddingLeft: theme.spacing(20),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginBottom: theme.spacing(6),\r\n      paddingTop: theme.spacing(10),\r\n      paddingBottom: theme.spacing(10),\r\n      paddingRight: theme.spacing(40),\r\n      paddingLeft: theme.spacing(40),\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Paper, TextField, Box, Button, Typography } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\n\r\nconst ChangePassword = () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [password, setPassword] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmNewPassword: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPassword({\r\n      ...password,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (password.currentPassword.trim().length <= 0) {\r\n      enqueueSnackbar('Current password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.newPassword.trim().length <= 0) {\r\n      enqueueSnackbar('New password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.confirmNewPassword.trim().length <= 0) {\r\n      enqueueSnackbar('Confirm new password is empty', { variant: 'error' });\r\n      return false;\r\n    }\r\n    if (password.newPassword.trim() !== password.confirmNewPassword.trim()) {\r\n      enqueueSnackbar('Confirm password  is not match', { variant: 'error' });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validatePassword()) return;\r\n    const data = await apis.user.changePassword({ ...password });\r\n\r\n    if (data && data.status) {\r\n      enqueueSnackbar('Change password success', { variant: 'success' });\r\n      setPassword({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmNewPassword: '',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Change password failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} variant={3}>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Thay đổi mật khẩu\r\n        </Typography>\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"currentPassword\"\r\n          label=\"Mật khẩu hiện tại\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.currentPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"newPassword\"\r\n          label=\"Mật khẩu mới\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.newPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"center\" mb={3}>\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          name=\"confirmNewPassword\"\r\n          label=\"Xác nhận lại mật khẩu\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password.confirmNewPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box textAlign=\"right\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          size=\"large\"\r\n          onClick={handleSave}\r\n        >\r\n          Lưu mật khẩu\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","/* eslint-disable no-useless-return */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport UserInformation from './UserInformation';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nconst menus = [\r\n  {\r\n    id: 0,\r\n    heading: 'Thông tin cá nhân',\r\n    component: <UserInformation />,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: 'Thay đổi mật khẩu',\r\n    component: <ChangePassword />,\r\n  },\r\n];\r\nconst User = () => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const [tab, setTab] = useState(0);\r\n\r\n  const handleChangeTab = async (event, newValue) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  const renderTab = () => {\r\n    const item = menus.find((el) => el.id === tab);\r\n    return item && item.component;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.tab}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          {menus.map((el) => (\r\n            <Tab label={el.heading} key={el.id}>\r\n              {el.heading}\r\n            </Tab>\r\n          ))}\r\n        </Tabs>\r\n      </Paper>\r\n      {renderTab()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\nimport { Search as SearchIcon } from '@material-ui/icons';\r\n\r\nconst SearchBox = ({\r\n  title = '',\r\n  handleSearch,\r\n  size = 'small',\r\n  position = 'end',\r\n  variant = 'outlined',\r\n}) => {\r\n  return (\r\n    <TextField\r\n      variant={variant}\r\n      size={size}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position={position}>\r\n            <SearchIcon />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      placeholder={`Tìm kiếm  ${title}`}\r\n      onChange={handleSearch}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '5%',\r\n    bottom: '5%',\r\n    left: '20%',\r\n    // transform: 'translate(-50%, 0%)',\r\n    position: 'absolute',\r\n    width: '60%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n  listAnswer: {\r\n    border: '1px solid #ccc',\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.spacing(0.5),\r\n    height: '300px',\r\n    overflow: 'auto',\r\n  },\r\n  textCreateAnswer: {\r\n    marginLeft: theme.spacing(0.5),\r\n  },\r\n  listAnswerContent: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","import moment from 'moment';\r\n\r\nconst getDate = (date) => {\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  return { day, month, year };\r\n};\r\n\r\nconst getTime = (date) => {\r\n  const hour = date.getHours();\r\n  const minute = date.getMinutes();\r\n  const second = date.getSeconds();\r\n\r\n  return { hour, minute, second };\r\n};\r\n\r\nexport function setTime(date, dateSet) {\r\n  const { hour, minute, second } = getTime(dateSet);\r\n  date.setHours(hour);\r\n  date.setMinutes(minute);\r\n  date.setSeconds(second);\r\n  return date;\r\n}\r\n\r\nexport function setDate(date, dateSet) {\r\n  const { day, month, year } = getDate(dateSet);\r\n  date.setDate(day);\r\n  date.setMonth(month);\r\n  date.setYear(year);\r\n  return date;\r\n}\r\n\r\nexport function renderDate(date) {\r\n  const newDate = new Date(date);\r\n  const { hour, minute, second } = getTime(newDate);\r\n  const { day, month, year } = getDate(newDate);\r\n\r\n  return `${day}/${month}/${year} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport function countTime(date) {\r\n  const distance = new Date(date) - new Date();\r\n  const day = Math.floor(distance / 86400000);\r\n  const hour = Math.floor((distance - day * 86400) / 3600000);\r\n  const minute = Math.floor((distance - day * 86400 - hour * 3600000) / 60000);\r\n  return `${day} day ${hour}h ${minute}m`;\r\n}\r\n\r\nexport function renderClockTime(time) {\r\n  const hours = Math.floor(time / 3600);\r\n  const minutes = Math.floor((time - hours * 3600) / 60);\r\n  const seconds = Math.floor(time - hours * 3600 - minutes * 60);\r\n\r\n  const hoursString = `0${hours}`.slice(-2);\r\n  const minutesString = `0${minutes}`.slice(-2);\r\n  const secondsString = `0${seconds}`.slice(-2);\r\n  return `${hoursString}:${minutesString}:${secondsString}`;\r\n}\r\n\r\nexport function checkDate(el) {\r\n  const date = new Date();\r\n  const startTime = new Date(el.startTime);\r\n  const endTime = el.endTime && new Date(el.endTime);\r\n  if (endTime && endTime < date) {\r\n    return 'Ended';\r\n  }\r\n  if (startTime > date) {\r\n    return `Upcoming: ${countTime(startTime)}`;\r\n  }\r\n  return `Time remain: ${moment(startTime).fromNow()}`;\r\n}\r\n","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Modal,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Switch,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport { setDate, setTime } from '../../../utils/date';\r\n\r\nconst ContestModal = ({\r\n  handleCloseModal,\r\n  open,\r\n  itemSelect,\r\n  handleUpdateContest,\r\n  groupQuestions,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [contest, setContest] = useState();\r\n\r\n  const handleDateChange = (type) => (date) => {\r\n    let startTime = contest && contest.startTime;\r\n    let endTime = contest && contest.endTime;\r\n    switch (type) {\r\n      case 'startDate':\r\n        startTime = setDate(startTime || date, date);\r\n        break;\r\n      case 'startTime':\r\n        startTime = setTime(startTime || date, date);\r\n        break;\r\n      case 'endDate':\r\n        endTime = setDate(endTime || date, date);\r\n        break;\r\n      case 'endTime':\r\n        endTime = setTime(endTime || date, date);\r\n        break;\r\n      default:\r\n    }\r\n\r\n    setContest({\r\n      ...contest,\r\n      startTime,\r\n      endTime,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContest(itemSelect);\r\n  }, [itemSelect, open]);\r\n\r\n  const handleChange = (e) => {\r\n    // eslint-disable-next-line prefer-const\r\n    let { name, value } = e.target;\r\n    if (name === 'isActive') value = e.target.checked;\r\n    setContest({\r\n      ...contest,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validateContest = (item) => {\r\n    if (!item.title || item.title.trim().length <= 0) {\r\n      enqueueSnackbar('Title is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!item.examTime) {\r\n      enqueueSnackbar('Min is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    const regexNumber = /^\\d+$/;\r\n    // eslint-disable-next-line radix\r\n    const checkNumber = regexNumber.test(item.examTime);\r\n    if (!checkNumber) {\r\n      enqueueSnackbar('Min must a number', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!item.groupQuestion) {\r\n      enqueueSnackbar(\"You haven't choose group question\", {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (!item.startTime) {\r\n      enqueueSnackbar(\"You haven't set start time\", {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (item.endTime && item.startTime >= item.endTime) {\r\n      enqueueSnackbar('end time must greater than start time', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    let data = null;\r\n    if (!validateContest(contest)) return;\r\n\r\n    const contestData = {\r\n      ...contest,\r\n      groupQuestion: contest.groupQuestion,\r\n      isActive: contest.isActive || false,\r\n    };\r\n    if (itemSelect && itemSelect.id) {\r\n      data = await apis.contest.updateContest(itemSelect.id, contestData);\r\n    } else {\r\n      data = await apis.contest.createContest(contestData);\r\n    }\r\n    if (data && data.status) {\r\n      const { contest: newContest } = data.result;\r\n      const type = itemSelect && itemSelect.id ? 'UPDATE' : 'ADD';\r\n      handleUpdateContest(newContest, type);\r\n      enqueueSnackbar('Save data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Save data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = async (e) => {\r\n    const formData = new FormData();\r\n    const file = e.target.files[0];\r\n    formData.append('file', file);\r\n    const data = await apis.upload.uploadFile({ formData });\r\n    if (data && data.status) {\r\n      setContest({\r\n        ...contest,\r\n        imageUrl: data.result.link,\r\n      });\r\n    } else {\r\n      enqueueSnackbar('Upload failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Thông tin cuộc thi\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Tên cuộc thi\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            value={(contest && contest.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Mô tả chi tiết\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={5}\r\n            name=\"description\"\r\n            value={(contest && contest.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Thời gian thi(m)\"\r\n            variant=\"outlined\"\r\n            name=\"examTime\"\r\n            value={(contest && contest.examTime) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={2}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                type=\"file\"\r\n                onChange={handleUploadImage}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  fullWidth\r\n                  style={{\r\n                    height: '100%',\r\n                  }}\r\n                >\r\n                  TẢI ẢNH\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Link ảnh\"\r\n                variant=\"outlined\"\r\n                name=\"imageUrl\"\r\n                value={(contest && contest.imageUrl) || ''}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Ngày bắt đầu\r\n                </Typography>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={(contest && contest.startTime) || null}\r\n                  onChange={handleDateChange('startDate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Thời gian bắt đầu\r\n                </Typography>\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  value={(contest && contest.startTime) || null}\r\n                  onChange={handleDateChange('startTime')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Ngày kết thúc\r\n                </Typography>\r\n\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={(contest && contest.endTime) || null}\r\n                  onChange={handleDateChange('endDate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  Thời gian kết thúc\r\n                </Typography>\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  inputVariant=\"outlined\"\r\n                  value={(contest && contest.endTime) || null}\r\n                  onChange={handleDateChange('endTime')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                  }}\r\n                  style={{ marginTop: 0 }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Box>\r\n\r\n        <Box mb={2}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Bộ câu hỏi\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              value={contest && contest.groupQuestion}\r\n              name=\"groupQuestion\"\r\n              onChange={handleChange}\r\n              label=\"Group Question\"\r\n            >\r\n              {groupQuestions.map((el) => (\r\n                <MenuItem value={el.id} key={el.id}>\r\n                  <em>{el.title}</em>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Mã code (nếu có)\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={(contest && contest.password) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={(contest && contest.isActive) || false}\r\n                onChange={handleChange}\r\n                name=\"isActive\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Cuộc thi sẽ được hiển thị lên hệ thống\"\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContestModal;\r\n","export const COLOR = {\r\n  black: '#000000',\r\n  white: '#FFFFFF',\r\n  gray: {\r\n    100: '#F7FAFC',\r\n    200: '#EDF2F7',\r\n    300: '#E2E8F0',\r\n    400: '#CBD5E0',\r\n    500: '#A0AEC0',\r\n    600: '#718096',\r\n    700: '#4A5568',\r\n    800: '#2D3748',\r\n    900: '#1A202C',\r\n  },\r\n  red: {\r\n    100: '#FFF5F5',\r\n    200: '#FED7D7',\r\n    300: '#FEB2B2',\r\n    400: '#FC8181',\r\n    500: '#F56565',\r\n    600: '#E53E3E',\r\n    700: '#C53030',\r\n    800: '#9B2C2C',\r\n    900: '#742A2A',\r\n  },\r\n  orange: {\r\n    100: '#FFFAF0',\r\n    200: '#FEEBC8',\r\n    300: '#FBD38D',\r\n    400: '#F6AD55',\r\n    500: '#ED8936',\r\n    600: '#DD6B20',\r\n    700: '#C05621',\r\n    800: '#9C4221',\r\n    900: '#7B341E',\r\n  },\r\n  yellow: {\r\n    100: '#FFFFF0',\r\n    200: '#FEFCBF',\r\n    300: '#FAF089',\r\n    400: '#F6E05E',\r\n    500: '#ECC94B',\r\n    600: '#D69E2E',\r\n    700: '#B7791F',\r\n    800: '#975A16',\r\n    900: '#744210',\r\n  },\r\n  green: {\r\n    100: '#F0FFF4',\r\n    200: '#C6F6D5',\r\n    300: '#9AE6B4',\r\n    400: '#68D391',\r\n    500: '#48BB78',\r\n    600: '#38A169',\r\n    700: '#2F855A',\r\n    800: '#276749',\r\n    900: '#22543D',\r\n  },\r\n  teal: {\r\n    100: '#E6FFFA',\r\n    200: '#B2F5EA',\r\n    300: '#81E6D9',\r\n    400: '#4FD1C5',\r\n    500: '#38B2AC',\r\n    600: '#319795',\r\n    700: '#2C7A7B',\r\n    800: '#285E61',\r\n    900: '#234E52',\r\n  },\r\n  blue: {\r\n    100: '#EBF8FF',\r\n    200: '#BEE3F8',\r\n    300: '#90CDF4',\r\n    400: '#63B3ED',\r\n    500: '#4299E1',\r\n    600: '#3182CE',\r\n    700: '#2B6CB0',\r\n    800: '#2C5282',\r\n    900: '#2A4365',\r\n  },\r\n  indigo: {\r\n    100: '#EBF4FF',\r\n    200: '#C3DAFE',\r\n    300: '#A3BFFA',\r\n    400: '#7F9CF5',\r\n    500: '#667EEA',\r\n    600: '#5A67D8',\r\n    700: '#4C51BF',\r\n    800: '#434190',\r\n    900: '#3C366B',\r\n  },\r\n  purple: {\r\n    100: '#FAF5FF',\r\n    200: '#E9D8FD',\r\n    300: '#D6BCFA',\r\n    400: '#B794F4',\r\n    500: '#9F7AEA',\r\n    600: '#805AD5',\r\n    700: '#6B46C1',\r\n    800: '#553C9A',\r\n    900: '#44337A',\r\n  },\r\n  pink: {\r\n    100: '#FFF5F7',\r\n    200: '#FED7E2',\r\n    300: '#FBB6CE',\r\n    400: '#F687B3',\r\n    500: '#ED64A6',\r\n    600: '#D53F8C',\r\n    700: '#B83280',\r\n    800: '#97266D',\r\n    900: '#702459',\r\n  },\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { COLOR } from '../../styles/color';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  accordion: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n  question: {\r\n    fontWeight: 'bold',\r\n  },\r\n  heading: {\r\n    fontSize: theme.spacing(2.5),\r\n  },\r\n  detail: {\r\n    width: '100%',\r\n  },\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  redStatus: {\r\n    color: COLOR.red['500'],\r\n  },\r\n  greenStatus: { color: COLOR.green['500'] },\r\n  yellowStatus: { color: COLOR.yellow['500'] },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n","/* eslint-disable radix */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-nested-ternary */\r\n// eslint-disable-next-line\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport moment from 'moment';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  IconButton,\r\n  TablePagination,\r\n  Checkbox,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Lock as LockIcon,\r\n} from '@material-ui/icons';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport ContestModal from './ContestModal';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\n\r\nconst Contest = () => {\r\n  // const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [contests, setContests] = useState([]);\r\n  const [contestSelect, setContestSelect] = useState(null);\r\n  const [groupQuestions, setGroupQuestions] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    count: 100,\r\n  });\r\n\r\n  const fetchContests = async () => {\r\n    const data = await apis.contest.getContestsByUser();\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.metadata.count || 0,\r\n      });\r\n      setContests(result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchGroupQuestions = async (keyword) => {\r\n    const data = await apis.groupQuestion.getGroupQuestions(keyword);\r\n    if (data && data.status) {\r\n      setGroupQuestions(data.result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = async (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContests();\r\n    fetchGroupQuestions();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    setPagination({\r\n      ...pagination,\r\n      page: 0,\r\n    });\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setContestSelect(null);\r\n  };\r\n\r\n  const handleClickRow = (row) => (e) => {\r\n    e.preventDefault();\r\n    setContestSelect(row);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleUpdateContest = (item, type) => {\r\n    if (type === 'ADD') {\r\n      const newContests = [{ ...item }, ...contests];\r\n      setContests(newContests);\r\n      setKeySearch('');\r\n      handleCloseModal();\r\n      return;\r\n    }\r\n    const newContests = [...contests];\r\n    const pos = newContests.findIndex((el) => el.id === item.id);\r\n    newContests[pos] = { ...item };\r\n    handleCloseModal();\r\n    setContests(newContests);\r\n  };\r\n\r\n  const handleDeleteContest = async (id) => {\r\n    const data = await apis.contest.deleteContest(id);\r\n    if (data && data.status) {\r\n      const newContests = [...contests];\r\n      const pos = newContests.findIndex((el) => el.id === id);\r\n      newContests.splice(pos, 1);\r\n      setContests(newContests);\r\n      enqueueSnackbar('Delete data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const GreenCheckbox = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n  return (\r\n    <div>\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách cuộc thi\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n              onClick={handleOpenModalAdd}\r\n            >\r\n              Thêm cuộc thi\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">STT</TableCell>\r\n                <TableCell>Tên cuộc thi</TableCell>\r\n                <TableCell align=\"center\">Thời gian(phút)</TableCell>\r\n                <TableCell align=\"center\">Ngày</TableCell>\r\n                <TableCell align=\"center\">Mã code</TableCell>\r\n                <TableCell align=\"center\">Trạng thái</TableCell>\r\n                <TableCell />\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {contests\r\n                .filter((el) => el.title.indexOf(keySearch) >= 0)\r\n                .slice(\r\n                  pagination.page * pagination.rowsPerPage,\r\n                  pagination.page * pagination.rowsPerPage +\r\n                    pagination.rowsPerPage,\r\n                )\r\n                .map((row, index) => (\r\n                  <TableRow\r\n                    key={row.id}\r\n                    className={classes.row}\r\n                    onClick={handleClickRow(row)}\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      {pagination.page * pagination.rowsPerPage + index + 1}\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                      style={{\r\n                        maxWidth: 200,\r\n                      }}\r\n                    >\r\n                      {row.title}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.examTime}</TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" flexDirection=\"column\">\r\n                        <div> BD: {moment(row.startTime).format('LLL')}</div>\r\n                        <div>\r\n                          KT:{' '}\r\n                          {(row.endTime && moment(row.endTime).format('LLL')) ||\r\n                            ''}\r\n                        </div>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.password && (\r\n                        <Tooltip title={row.password}>\r\n                          <LockIcon />\r\n                        </Tooltip>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.isActive && (\r\n                        <Box\r\n                          style={{\r\n                            color: '#000',\r\n                            background: '#7beeab',\r\n                            borderRadius: 5,\r\n                            padding: 5,\r\n                          }}\r\n                        >\r\n                          active\r\n                        </Box>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box>\r\n                        <IconButton\r\n                          aria-label=\"delete\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDeleteContest(row.id);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          history.push(`/contest/${row.id}/exam/detail`);\r\n                        }}\r\n                      >\r\n                        Thống kê\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n          {contests.length > 0 && pagination.count > pagination.rowsPerPage && (\r\n            <TablePagination\r\n              component=\"div\"\r\n              rowsPerPageOptions={[pagination.rowsPerPage]}\r\n              count={\r\n                contests\r\n                  .filter((el) => el.title.indexOf(keySearch) >= 0)\r\n                  .slice(\r\n                    pagination.page * pagination.rowsPerPage,\r\n                    pagination.page * pagination.rowsPerPage +\r\n                      pagination.rowsPerPage,\r\n                  ).length\r\n              }\r\n              page={pagination.page}\r\n              onChangePage={handleChangePage}\r\n              rowsPerPage={pagination.rowsPerPage}\r\n            />\r\n          )}\r\n        </TableContainer>\r\n      </Box>\r\n      <ContestModal\r\n        open={openModal}\r\n        handleCloseModal={handleCloseModal}\r\n        itemSelect={contestSelect}\r\n        groupQuestions={groupQuestions}\r\n        handleUpdateContest={handleUpdateContest}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contest;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  listItem: {\r\n    background: '#fff',\r\n    padding: theme.spacing(2),\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n    borderRadius: theme.spacing(1),\r\n    fontSize: theme.spacing(2),\r\n    cursor: 'pointer',\r\n    marginBottom: theme.spacing(2),\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.active,\r\n    },\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    position: 'absolute',\r\n    width: '40%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, TextField, Box, Typography, Button } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\n\r\nconst GroupQuestionModal = ({ handleCloseModal, open, item, handleSave }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState(0);\r\n  const [groupQuestion, setGroupQuestion] = useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      setGroupQuestion({ ...item });\r\n      setState(1);\r\n    } else {\r\n      setGroupQuestion({\r\n        title: '',\r\n        description: '',\r\n      });\r\n      setState(0);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleChange = (e) => {\r\n    setGroupQuestion({\r\n      ...groupQuestion,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {state\r\n              ? 'Cập nhật thông tin bộ câu hỏi '\r\n              : 'Thêm thông tin bộ câu hỏi'}\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            placeholder=\"Nhập tiêu đề\"\r\n            name=\"title\"\r\n            value={(groupQuestion && groupQuestion.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            placeholder=\"Nhập mô tả chi tiết\"\r\n            name=\"description\"\r\n            value={(groupQuestion && groupQuestion.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave(groupQuestion)}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GroupQuestionModal;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Button,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Image as ImageIcon,\r\n  MoreVert as MoreVertIcon,\r\n} from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport GroupQuestionModal from './GroupQuestionModal';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport LoadingPage from '../../components/LoadingPage';\r\n\r\nlet timeOutId = null;\r\nconst GroupQuestion = () => {\r\n  const classes = useStyles();\r\n  // const { t } = useTranslation();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [groupQuestionSelected, setGroupQuestionSelected] = useState();\r\n  const [groupQuestions, setGroupQuestions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchGroupQuestions = async (keyword) => {\r\n    const data = await apis.groupQuestion.getGroupQuestions(keyword);\r\n    if (data && data.status) {\r\n      setGroupQuestions(data.result.data);\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGroupQuestions();\r\n  }, []);\r\n\r\n  const handleOpenToggle = (el) => (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setGroupQuestionSelected(el);\r\n  };\r\n\r\n  const handleCloseToggle = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenEdit = () => {\r\n    setAnchorEl(null);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    setAnchorEl(null);\r\n    try {\r\n      await apis.groupQuestion.deleteGroupQuestions(groupQuestionSelected.id);\r\n      const newGroupQuestions = [...groupQuestions];\r\n      const tempGroupQuestions = newGroupQuestions.filter(\r\n        (ele) => ele.id !== groupQuestionSelected.id,\r\n      );\r\n      setGroupQuestions(tempGroupQuestions);\r\n      enqueueSnackbar('Delete success', {\r\n        variant: 'success',\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setGroupQuestionSelected(null);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    clearTimeout(timeOutId);\r\n    timeOutId = setTimeout(() => {\r\n      fetchGroupQuestions(value);\r\n    }, 100);\r\n  };\r\n  const handleSave = (el) => async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (el.id) {\r\n      const { title, description, imageUrl } = el;\r\n      const data = await apis.groupQuestion.updateGroupQuestions(el.id, {\r\n        title,\r\n        description,\r\n        imageUrl,\r\n      });\r\n      if (data && data.status) {\r\n        setOpenModal(false);\r\n        const newGroupQuestions = [...groupQuestions];\r\n        const pos = newGroupQuestions.findIndex((ele) => ele.id === el.id);\r\n        newGroupQuestions[pos] = { ...data.result.groupQuestion };\r\n        setGroupQuestions(newGroupQuestions);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n      } else {\r\n        enqueueSnackbar((data && data.message) || 'Update failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    } else {\r\n      const { title, description, imageUrl } = el;\r\n      if (title.trim().length <= 0) {\r\n        enqueueSnackbar(\"Title doesn't empty \", { variant: 'error' });\r\n        return;\r\n      }\r\n      const data = await apis.groupQuestion.createGroupQuestion({\r\n        title,\r\n        description,\r\n        imageUrl,\r\n      });\r\n      if (data && data.status) {\r\n        setOpenModal(false);\r\n        const newGroupQuestions = [...groupQuestions];\r\n        newGroupQuestions.push({ ...data.result.groupQuestion });\r\n        setGroupQuestions(newGroupQuestions);\r\n        enqueueSnackbar('Create success', { variant: 'success' });\r\n      } else {\r\n        enqueueSnackbar((data && data.message) || 'Create failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickItem = (id) => () => {\r\n    history.push(`/groupQuestions/${id}/questions`);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Box mb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Danh sách bộ câu hỏi\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddIcon />}\r\n            onClick={handleOpenModalAdd}\r\n          >\r\n            Thêm bộ câu hỏi\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      {groupQuestions.length === 0 ? (\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ color: '#ccc' }}\r\n        >\r\n          Không có dữ liệu\r\n        </Typography>\r\n      ) : (\r\n        <List>\r\n          {groupQuestions.map((el) => (\r\n            <ListItem\r\n              className={classes.listItem}\r\n              key={el.id}\r\n              onClick={handleClickItem(el.id)}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.textPrimary,\r\n                }}\r\n                primary={el.title}\r\n                secondary={el.description}\r\n              />\r\n              {/* <ListItemText>\r\n              <Box display=\"flex\" alignItems=\"flex-end\">\r\n                <Box mr={1}>\r\n                  <Typography variant=\"button\" component=\"h2\">\r\n                    Amount Question:\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  10\r\n                </Typography>\r\n              </Box>\r\n            </ListItemText> */}\r\n              <ListItemSecondaryAction>\r\n                <div onClick={handleOpenToggle(el)}>\r\n                  <IconButton edge=\"end\" aria-label=\"more\">\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      <Menu\r\n        classes={{\r\n          paper: classes.menusToggle,\r\n        }}\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleCloseToggle}\r\n      >\r\n        <MenuItem onClick={handleOpenEdit}>Sửa</MenuItem>\r\n        <MenuItem onClick={handleDelete}>Xóa</MenuItem>\r\n      </Menu>\r\n      <GroupQuestionModal\r\n        open={openModal}\r\n        item={groupQuestionSelected}\r\n        handleCloseModal={handleCloseModal}\r\n        handleSave={handleSave}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupQuestion;\r\n","export default ['EASY', 'MEDIUM', 'HARD'];\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '5%',\r\n    bottom: '5%',\r\n    left: '20%',\r\n    // transform: 'translate(-50%, 0%)',\r\n    position: 'absolute',\r\n    width: '60%',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n  listAnswer: {\r\n    border: '1px solid #ccc',\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.spacing(0.5),\r\n    height: '300px',\r\n    overflow: 'auto',\r\n  },\r\n  textCreateAnswer: {\r\n    marginLeft: theme.spacing(0.5),\r\n  },\r\n  listAnswerContent: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport mongoid from 'mongoid-js';\r\nimport {\r\n  Modal,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  RootRef,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport { Remove as RemoveIcon, Add as AddIcon } from '@material-ui/icons';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport LevelsQuestion from '../../../data/levelsQuestion';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\n\r\nconst QuestionModal = ({\r\n  handleCloseModal,\r\n  open,\r\n  itemSelect,\r\n  handleUpdateQuestion,\r\n  groupQuestionId,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [question, setQuestion] = useState();\r\n  useEffect(() => {}, [open]);\r\n\r\n  useEffect(() => {\r\n    setQuestion(itemSelect);\r\n  }, [itemSelect, open]);\r\n\r\n  const handleAddAnswer = (e) => {\r\n    e.preventDefault();\r\n    const answerData = {\r\n      answerId: mongoid(),\r\n      position: (question && question.answers && question.answers.length) || 0,\r\n      content: '',\r\n      isCorrect: false,\r\n    };\r\n    setQuestion({\r\n      ...question,\r\n      answers:\r\n        question && question.answers\r\n          ? [...question.answers, answerData]\r\n          : [answerData],\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setQuestion({\r\n      ...question,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDeleteAnswer = (pos) => () => {\r\n    const newAnswers = question && question.answers;\r\n    newAnswers.splice(pos, 1);\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const handleEditAnswer = (pos) => (e) => {\r\n    const newAnswers = question && question.answers;\r\n    newAnswers[pos] = {\r\n      ...newAnswers[pos],\r\n      content: e.target.value,\r\n    };\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const validateQuestion = (item) => {\r\n    if (item.description.trim().length <= 0) {\r\n      enqueueSnackbar('Description is not empty', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    if (item.answers.length < 2) {\r\n      enqueueSnackbar('Must have at least 2 answers', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    const questionCorrect = item.answers.find((el) => el.isCorrect);\r\n    if (!questionCorrect) {\r\n      enqueueSnackbar('You have not chosen the correct answer', {\r\n        variant: 'error',\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    let data = null;\r\n    if (!validateQuestion(question)) return;\r\n    if (itemSelect && itemSelect.id) {\r\n      data = await apis.question.updateQuestion(itemSelect.id, {\r\n        ...question,\r\n        level: question.level || 'EASY',\r\n        groupQuestion: groupQuestionId,\r\n      });\r\n    } else {\r\n      data = await apis.question.createQuestion({\r\n        ...question,\r\n        level: question.level || 'EASY',\r\n        groupQuestion: groupQuestionId,\r\n      });\r\n    }\r\n    if (data && data.status) {\r\n      const { question: newQuestion } = data.result;\r\n      const type = itemSelect && itemSelect.id ? 'UPDATE' : 'ADD';\r\n      handleUpdateQuestion(newQuestion, type);\r\n      enqueueSnackbar('Save data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Save data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChooseCorrectAnswer = (pos) => () => {\r\n    let newAnswers = question && question.answers;\r\n    newAnswers = newAnswers.map((el, index) => ({\r\n      ...el,\r\n      isCorrect: index === pos,\r\n    }));\r\n    setQuestion({\r\n      ...question,\r\n      answers: [...newAnswers],\r\n    });\r\n  };\r\n\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n\r\n    ...(isDragging && {\r\n      background: 'rgb(235,235,235)',\r\n    }),\r\n  });\r\n\r\n  const handleDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const startIndex = result.source.index;\r\n    const endIndex = result.destination.index;\r\n    const newAnswers = question && question.answers;\r\n\r\n    newAnswers[startIndex].position = endIndex;\r\n    newAnswers[endIndex].position = startIndex;\r\n\r\n    const [removed] = newAnswers.splice(startIndex, 1);\r\n    newAnswers.splice(endIndex, 0, removed);\r\n\r\n    setQuestion({\r\n      ...question,\r\n      answers: newAnswers,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box mb={3}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Thông tin câu hỏi\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>Cấp độ câu hỏi</InputLabel>\r\n            <Select\r\n              name=\"level\"\r\n              label=\"Cấp độ câu hỏi\"\r\n              value={(question && question.level) || 'EASY'}\r\n              onChange={handleChange}\r\n            >\r\n              {LevelsQuestion.map((el) => (\r\n                <MenuItem value={el} key={el}>\r\n                  {el}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Tiêu đề câu hỏi\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            value={(question && question.title) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nội dung câu hỏi\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={10}\r\n            name=\"description\"\r\n            value={(question && question.description) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box mb={2} className={classes.listAnswer}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            {/* <QuestionAnswerIcon /> */}\r\n\r\n            <Typography variant=\"h6\" className={classes.textCreateAnswer}>\r\n              Danh sách đáp án\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided) => (\r\n                  <RootRef rootRef={provided.innerRef}>\r\n                    <List>\r\n                      {question &&\r\n                        question.answers &&\r\n                        question.answers.map((item, index) => (\r\n                          <Draggable\r\n                            key={`item-${index}`}\r\n                            draggableId={`item-${index}`}\r\n                            index={index}\r\n                          >\r\n                            {(providedItem, snapshotItem) => (\r\n                              <ListItem\r\n                                ContainerComponent=\"li\"\r\n                                ContainerProps={{ ref: providedItem.innerRef }}\r\n                                {...providedItem.draggableProps}\r\n                                {...providedItem.dragHandleProps}\r\n                                style={getItemStyle(\r\n                                  snapshotItem.isDragging,\r\n                                  providedItem.draggableProps.style,\r\n                                )}\r\n                              >\r\n                                <ListItemIcon>\r\n                                  <div onClick={handleDeleteAnswer(index)}>\r\n                                    <IconButton>\r\n                                      <RemoveIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                  primary={\r\n                                    <Box>\r\n                                      <Checkbox\r\n                                        checked={item.isCorrect}\r\n                                        onChange={handleChooseCorrectAnswer(\r\n                                          index,\r\n                                        )}\r\n                                        inputProps={{\r\n                                          'aria-label': 'primary checkbox',\r\n                                        }}\r\n                                      />\r\n                                      <TextField\r\n                                        value={item.content}\r\n                                        onChange={handleEditAnswer(index)}\r\n                                      />\r\n                                    </Box>\r\n                                  }\r\n                                />\r\n                                <ListItemSecondaryAction />\r\n                              </ListItem>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                      {provided.placeholder}\r\n                    </List>\r\n                  </RootRef>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleAddAnswer}\r\n            >\r\n              Thêm\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Giải thích đáp án\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={5}\r\n            name=\"explain\"\r\n            value={(question && question.explain) || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSave}\r\n            >\r\n              Lưu\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleCloseModal}>\r\n              Hủy bỏ\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuestionModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    position: 'absolute',\r\n    width: '30%',\r\n    margin: '0 auto',\r\n    backgroundColor: '#fff',\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(5, 4, 5),\r\n    outline: 'none',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/jsx-wrap-multilines */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Modal, Box, Typography, Divider } from '@material-ui/core';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\n\r\nconst UploadInfoModal = ({ handleCloseModal, open }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className={classes.paper}>\r\n        <Box\r\n          mb={1}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Hướng dẫn tải file\r\n          </Typography>\r\n          <Box onClick={handleCloseModal}>\r\n            <CloseIcon style={{ color: '#ccc', cursor: 'pointer' }} />\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <Box mt={2}>\r\n          <Typography>\r\n            Bạn cần tạo file excel theo format dưới đây để hệ thống có thể đọc\r\n            được nội dụng 1 cách chính xác: <a href=\"fdsf\">link</a>\r\n          </Typography>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UploadInfoModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { COLOR } from '../../styles/color';\r\n\r\nexport default makeStyles((theme) => ({\r\n  textPrimary: {\r\n    fontSize: theme.spacing(2.5),\r\n    fontWeight: 'bold',\r\n  },\r\n  accordion: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  menusToggle: {\r\n    boxShadow: theme.palette.boxShadow_l1,\r\n  },\r\n  question: {\r\n    fontWeight: 'bold',\r\n  },\r\n  heading: {\r\n    fontSize: theme.spacing(2.5),\r\n  },\r\n  detail: {\r\n    width: '100%',\r\n  },\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  redStatus: {\r\n    color: COLOR.red['500'],\r\n  },\r\n  greenStatus: { color: COLOR.green['500'] },\r\n  yellowStatus: { color: COLOR.yellow['500'] },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n","/* eslint-disable radix */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport mongoid from 'mongoid-js';\r\nimport readXlsxFile from 'read-excel-file';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  IconButton,\r\n  TablePagination,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Backup as BackupIcon,\r\n  InfoOutlined as InfoIcon,\r\n} from '@material-ui/icons';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport QuestionModal from './QuestionModal';\r\nimport UploadInfoModal from './UploadInfoModal';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\n\r\nconst Question = () => {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const { id: groupQuestionId } = useParams();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openModalUploadInfo, setOpenModalUploadInfo] = useState(false);\r\n  const [keySearch, setKeySearch] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const [questionSelect, setQuestionSelect] = useState(null);\r\n  const [pagination, setPagination] = useState({\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    count: 100,\r\n  });\r\n\r\n  const fetchQuestions = async (param) => {\r\n    const offset =\r\n      param && param.offset >= 0\r\n        ? param.offset\r\n        : pagination.page * pagination.rowsPerPage;\r\n    const query = {\r\n      sort: (param && param.sort) || 'createdAt_desc',\r\n      key: param && param.key,\r\n      limit: (param && param.limit) || pagination.rowsPerPage,\r\n      offset,\r\n      groupQuestionId,\r\n    };\r\n    const data = await apis.question.getQuestionsInGroup({ ...query });\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.metadata.count || 0,\r\n      });\r\n      setQuestions(result.data);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = async (event, newPage) => {\r\n    await fetchQuestions({\r\n      key: keySearch,\r\n      offset: newPage * pagination.rowsPerPage,\r\n    });\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    const { value } = e.target;\r\n    setKeySearch(value);\r\n    setPagination({\r\n      ...pagination,\r\n      page: 0,\r\n    });\r\n    await fetchQuestions({ key: value, offset: 0 });\r\n  };\r\n\r\n  const handleOpenModalAdd = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setQuestionSelect(null);\r\n  };\r\n\r\n  const handleOpenUploadInfoModal = (e) => {\r\n    e.preventDefault();\r\n    setOpenModalUploadInfo(true);\r\n  };\r\n\r\n  const handleCloseUploadInfoModal = () => {\r\n    setOpenModalUploadInfo(false);\r\n  };\r\n\r\n  const handleClickRow = (row) => (e) => {\r\n    e.preventDefault();\r\n    setQuestionSelect(row);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleUpdateQuestion = (item, type) => {\r\n    if (type === 'ADD') {\r\n      fetchQuestions({ offset: 0 });\r\n      setKeySearch('');\r\n      handleCloseModal();\r\n      return;\r\n    }\r\n    const newQuestions = [...questions];\r\n    const pos = newQuestions.findIndex((el) => el.id === item.id);\r\n    newQuestions[pos] = { ...item };\r\n    handleCloseModal();\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleDeleteQuestion = async (id) => {\r\n    const data = await apis.question.deleteQuestion(id);\r\n    if (data && data.status) {\r\n      fetchQuestions({ key: keySearch });\r\n      enqueueSnackbar('Delete data success', {\r\n        variant: 'success',\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Delete data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateQuestionInExcel = (row) => {\r\n    const levels = ['EASY', 'MEDIUM', 'HARD'];\r\n    console.log(row[row.length - 1]);\r\n    const correctAnswer = parseInt(row[row.length - 1]);\r\n    const amountAnswer = row.length - 5;\r\n    console.log({ correctAnswer, amountAnswer });\r\n    if (\r\n      !row[0] ||\r\n      levels.indexOf(row[0]) < 0 ||\r\n      !row[2] ||\r\n      amountAnswer < 2 ||\r\n      !correctAnswer ||\r\n      correctAnswer < 1 ||\r\n      correctAnswer > amountAnswer\r\n    )\r\n      return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleImportExcel = (e) => {\r\n    e.preventDefault();\r\n    enqueueSnackbar('Data is being processed, which may take a few minutes ', {\r\n      variant: 'warning',\r\n    });\r\n    const file = e.target.files[0];\r\n    try {\r\n      readXlsxFile(file).then(async (rows) => {\r\n        console.log(rows);\r\n\r\n        await Promise.all(\r\n          rows.map(async (el) => {\r\n            const row = el\r\n              .filter((ele) => ele)\r\n              .map((ele) => ele.toString().trim());\r\n            if (validateQuestionInExcel(row)) {\r\n              const questionData = {\r\n                level: row[0],\r\n                title: row[1],\r\n                description: row[2],\r\n                explain: row[3],\r\n                answers: row.slice(4, row.length - 1).map((ele, index) => ({\r\n                  answerId: mongoid(),\r\n                  position: index,\r\n                  content: ele,\r\n                  isCorrect: parseInt(row[row.length - 1]) === index + 1,\r\n                })),\r\n              };\r\n              //console.log('123');\r\n              await apis.question.createQuestion({\r\n                ...questionData,\r\n                groupQuestion: groupQuestionId,\r\n              });\r\n            }\r\n          }),\r\n        );\r\n        fetchQuestions({ offset: 0 });\r\n        setKeySearch('');\r\n        enqueueSnackbar('Import data success', {\r\n          variant: 'success',\r\n        });\r\n      });\r\n    } catch (error) {\r\n      enqueueSnackbar('Import data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        mb={2}\r\n      >\r\n        <Box>\r\n          <SearchBox handleSearch={handleSearch} />\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box mr={1} display=\"flex\" alignItems=\"center\">\r\n            <Box mr={1} onClick={handleOpenUploadInfoModal}>\r\n              <InfoIcon style={{ color: '#ccc', cursor: 'pointer' }} />\r\n            </Box>\r\n            <input\r\n              accept=\"*\"\r\n              className={classes.input}\r\n              id=\"contained-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={handleImportExcel}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Tooltip title=\"Đọc kĩ hướng dẫn ở icon bên cạnh trước khi tải lên\">\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  style={{ color: '#fff', background: 'green' }}\r\n                  component=\"span\"\r\n                  startIcon={<BackupIcon />}\r\n                >\r\n                  Tải lên\r\n                </Button>\r\n              </Tooltip>\r\n            </label>\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n              onClick={handleOpenModalAdd}\r\n            >\r\n              Thêm câu hỏi\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">STT</TableCell>\r\n                <TableCell>Tiêu đề câu hỏi</TableCell>\r\n                <TableCell>Cấp độ</TableCell>\r\n                <TableCell align=\"center\">Số lượng câu trả lời</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {questions.map((row, index) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  className={classes.row}\r\n                  onClick={handleClickRow(row)}\r\n                >\r\n                  <TableCell align=\"center\">\r\n                    {pagination.page * pagination.rowsPerPage + index + 1}\r\n                  </TableCell>\r\n                  <TableCell>{row.title}</TableCell>\r\n                  <TableCell\r\n                    classes={{\r\n                      body:\r\n                        row.level === 'HARD'\r\n                          ? classes.redStatus\r\n                          : row.level === 'MEDIUM'\r\n                          ? classes.yellowStatus\r\n                          : classes.greenStatus,\r\n                    }}\r\n                  >\r\n                    {row.level}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.answers && row.answers.length}\r\n                  </TableCell>\r\n                  <TableCell className={classes.actionBox}>\r\n                    <Box>\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteQuestion(row.id);\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          {questions.length > 0 &&\r\n            pagination.count > pagination.rowsPerPage && (\r\n              <TablePagination\r\n                component=\"div\"\r\n                rowsPerPageOptions={[pagination.rowsPerPage]}\r\n                count={pagination.count}\r\n                page={pagination.page}\r\n                onChangePage={handleChangePage}\r\n                rowsPerPage={pagination.rowsPerPage}\r\n              />\r\n            )}\r\n        </TableContainer>\r\n      </Box>\r\n      <QuestionModal\r\n        open={openModal}\r\n        groupQuestionId={groupQuestionId}\r\n        handleCloseModal={handleCloseModal}\r\n        itemSelect={questionSelect}\r\n        handleUpdateQuestion={handleUpdateQuestion}\r\n      />\r\n      <UploadInfoModal\r\n        open={openModalUploadInfo}\r\n        handleCloseModal={handleCloseUploadInfoModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    paddingRight: theme.spacing(10),\r\n    paddingLeft: theme.spacing(10),\r\n  },\r\n  questionBox: {\r\n    padding: theme.spacing(5),\r\n  },\r\n  listQuestionBox: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n  },\r\n  questionSquare: {\r\n    border: '1px solid #eee',\r\n    width: '20px',\r\n    height: '20px',\r\n    margin: '2px',\r\n    borderRadius: '50px',\r\n    padding: theme.spacing(2),\r\n  },\r\n  fullscreen: {\r\n    background: '#fafafa',\r\n    zIndex: 99999,\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    width: '100%',\r\n    overflowX: 'hidden',\r\n    overflowY: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    position: 'fixed',\r\n    padding: theme.spacing(8),\r\n  },\r\n  prevent_copy_paste: {\r\n    userSelect: 'none' /* Ngăn chặn chọn text */,\r\n    '-moz-user-select': 'none' /* Firefox */,\r\n    '-webkit-user-select': 'none' /* Chrome, Safari, Opera */,\r\n    '-ms-user-select': 'none' /* Internet Explorer/Edge */,\r\n  },\r\n  answerRow: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      background: '#ccc',\r\n    },\r\n  },\r\n}));\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\n\r\nconst useUnsavedChangesWarning = (\r\n  message = 'Are you sure want to discard changes?',\r\n) => {\r\n  const [isDirty, setDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = isDirty && (() => message);\r\n\r\n    return () => {\r\n      window.onbeforeunload = null;\r\n    };\r\n  }, [isDirty]);\r\n\r\n  const routerPrompt = <Prompt when={isDirty} message={message} />;\r\n\r\n  return [routerPrompt, () => setDirty(true), () => setDirty(false)];\r\n};\r\n\r\nexport default useUnsavedChangesWarning;\r\n","// eslint-disable-next-line\r\nimport { Modal } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './styles.css';\r\nimport { IKImage, IKVideo, IKContext, IKUpload } from 'imagekitio-react';\r\nconst ModalImage = ({ imageUrl }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n  imageUrl = 'https://i.imgur.com/v63TJ4j.png';\r\n\r\n  return (\r\n    <div>\r\n      <button alt=\"Modal Image\" onClick={openModal}>\r\n        Image\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <Modal\r\n          open={isOpen}\r\n          onClose={closeModal}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <div className=\"image-frame\">\r\n            <img\r\n              className=\"cover-image\"\r\n              src={imageUrl}\r\n              //   style={{ width: '50%', height: '50%' }}\r\n              alt=\"Image\"\r\n            />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalImage;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable radix */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport {\r\n  Fullscreen as FullscreenIcon,\r\n  Send as SendIcon,\r\n  AccessTime as AccessTimeIcon,\r\n  FullscreenExit as FullscreenExitIcon,\r\n} from '@material-ui/icons';\r\nimport useStyles from './index.style';\r\nimport apis from '../../apis';\r\nimport LoadingPage from '../../components/LoadingPage';\r\nimport { renderClockTime } from '../../utils/date';\r\nimport useUnsavedChangesWarning from './useUnsavedChangesWarning';\r\nimport ModalImage from '../Image';\r\nimport { isImageUrlCheck } from '../../utils/string';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nlet interval = null;\r\n\r\nconst alphabet = 'A B C D E F G H I K L M N O P Q R S T V X Y Z';\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ExamTest = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [Prompt, setDirty, setPristine] = useUnsavedChangesWarning(\r\n    'Hiện tại bài thi chưa được lưu, nếu bạn thoát mọi câu trả lời trong lần thi này sẽ bị hủy bỏ',\r\n  );\r\n  const [contest, setContest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [questionSelected, setQuestionSelected] = useState({});\r\n  const [timeDoExam, setTimeDoExam] = useState(0);\r\n  const [isMarking, setIsMarking] = useState(false);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const handleChangeAnswer = (value) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionSelected.data.id]: value,\r\n    });\r\n  };\r\n\r\n  const handleFullscreen = (e) => {\r\n    e.preventDefault();\r\n    setIsFullscreen((prev) => !prev);\r\n  };\r\n\r\n  const handleFinishExam = async () => {\r\n    const examData = {\r\n      doTime: contest.examTime * 60 - timeDoExam,\r\n      contestId: contest.id,\r\n      groupQuestionId: contest.groupQuestion,\r\n      answers,\r\n    };\r\n    const data = await apis.contest.mark({\r\n      ...examData,\r\n    });\r\n    if (data && data.status) {\r\n      const { result } = data.result;\r\n      // eslint-disable-next-line no-alert\r\n      console.log(`mark done ${result.amountCorrectQuestion}`);\r\n      history.push(`/contest/${contest.id}/exam/detail?resultId=${result.id}`);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Mark failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStartExam = (examTime) => {\r\n    const startTime = new Date();\r\n    interval = setInterval(() => {\r\n      const now = new Date();\r\n      const timeDo = Math.floor((now - startTime) / 1000);\r\n      if (timeDo < examTime) {\r\n        setTimeDoExam(examTime - timeDo);\r\n      } else {\r\n        setTimeDoExam(0);\r\n        setIsMarking(true);\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const fetchContest = async () => {\r\n    const token = query.get('token');\r\n    const data = await apis.contest.getQuestions({ id, token });\r\n    if (data && data.status) {\r\n      const { contest: contestData } = data.result;\r\n      setContest(contestData);\r\n      setQuestionSelected({\r\n        position: 0,\r\n        data: contestData.questions[0],\r\n      });\r\n      setTimeDoExam(contestData.examTime * 60);\r\n      handleStartExam(contestData.examTime * 60);\r\n      setIsLoading(false);\r\n    } else {\r\n      history.push(`/contest/${id}/exam/detail`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDirty();\r\n    fetchContest();\r\n    return () => {\r\n      console.log('clear interval');\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('load marking');\r\n    if (isMarking) {\r\n      setPristine();\r\n      handleFinishExam();\r\n    }\r\n  }, [isMarking]);\r\n\r\n  const handleClickQuestion = (pos) => (e) => {\r\n    e.preventDefault();\r\n    setQuestionSelected({\r\n      position: pos,\r\n      data: contest.questions[pos],\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n  if (isMarking) {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" style={{ color: '#ccc' }}>\r\n          The system is processing, wait a few second...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n  // Xử lí dạng ảnh {{image_url}}}\r\n  const textString = questionSelected.data.description;\r\n\r\n  const imageUrlRegex = /\\{\\{(.*?)\\}\\}/g;\r\n  const replacedString = textString.replace(\r\n    imageUrlRegex,\r\n    (match, imageUrl) => {\r\n      if (isImageUrlCheck(imageUrl)) {\r\n        return `<img src=\"${imageUrl}\" alt=\"Hình ảnh test\" style=\"width: auto; height: 50px;\"  />`;\r\n      } else {\r\n        return imageUrl;\r\n      }\r\n    },\r\n  );\r\n\r\n  // Chống copy paste\r\n  const handleCopyPaste = (e) => {\r\n    e.preventDefault();\r\n    console.log('Copy-paste is not allowed!');\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${isFullscreen ? classes.fullscreen : ''} prevent_copy_paste`}\r\n      onCopy={handleCopyPaste}\r\n      onPaste={handleCopyPaste}\r\n    >\r\n      {/* <Prompt\r\n        when={!isMarking}\r\n        message={(location) =>\r\n          `Are you sure you want to go to ${location.pathname}`\r\n        }\r\n        \r\n      /> */}\r\n      {/* Snackbar */}\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={openAlert}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"warning\">\r\n          Cảnh bảo !!! Không được phép Copy-paste\r\n        </Alert>\r\n      </Snackbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        mb={2}\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box mr={1}>\r\n            <AccessTimeIcon />\r\n          </Box>\r\n          <Typography\r\n            variant=\"button\"\r\n            display=\"block\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: 'bold',\r\n              fontSize: '20px',\r\n            }}\r\n          >\r\n            {renderClockTime(timeDoExam)}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box mr={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<SendIcon />}\r\n              onClick={() => {\r\n                setIsMarking(true);\r\n              }}\r\n              style={{ background: '#f16a73', color: '#fff' }}\r\n            >\r\n              Nộp bài\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={\r\n                isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />\r\n              }\r\n              onClick={handleFullscreen}\r\n            >\r\n              {isFullscreen ? 'Thoát toàn màn hình' : 'Toàn màn hình '}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper}>\r\n              <Box mb={3}>\r\n                <Typography gutterBottom style={{ textAlign: 'center' }}>\r\n                  Câu số {questionSelected && questionSelected.position + 1}\r\n                </Typography>\r\n                {/* <ModalImage /> */}\r\n                <Typography gutterBottom style={{ color: '#ccc' }}>\r\n                  {questionSelected &&\r\n                    questionSelected.data &&\r\n                    questionSelected.data.title}\r\n                </Typography>\r\n                <div variant=\"h6\" gutterBottom>\r\n                  {questionSelected && questionSelected.data && (\r\n                    <div dangerouslySetInnerHTML={{ __html: replacedString }} />\r\n                  )}\r\n                </div>\r\n                {/*  <Typography variant=\"h6\" gutterBottom>\r\n                  {questionSelected &&\r\n                    questionSelected.data &&\r\n                    questionSelected.data.description}\r\n                </Typography> */}\r\n              </Box>\r\n              <Box>\r\n                {questionSelected &&\r\n                  questionSelected.data &&\r\n                  questionSelected.data.answers\r\n                    .sort((a, b) => a.position - b.position)\r\n                    .map((el, index) => (\r\n                      <Box\r\n                        style={{\r\n                          background: `${\r\n                            answers[questionSelected.data.id] === el.answerId\r\n                              ? '#81d1a2'\r\n                              : '#eceff0'\r\n                          }`,\r\n                          padding: '20px 20px',\r\n                          marginBottom: '10px',\r\n                          borderRadius: '10px',\r\n                          border: '1px solid #ccc',\r\n                        }}\r\n                        className={classes.answerRow}\r\n                        onClick={() => handleChangeAnswer(el.answerId)}\r\n                      >\r\n                        <Typography key={index}>\r\n                          {alphabet.split(' ')[index]}.{` ${el.content}`}\r\n                        </Typography>\r\n                      </Box>\r\n                    ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper className={classes.questionBox}>\r\n              <Box mb={2}>\r\n                <Typography>Danh sách câu hỏi</Typography>\r\n              </Box>\r\n              <Box className={classes.listQuestionBox}>\r\n                {contest &&\r\n                  contest.questions.map((el, index) => (\r\n                    // console.log(el.description),\r\n                    <Button\r\n                      key={index}\r\n                      className={classes.questionSquare}\r\n                      style={\r\n                        questionSelected && questionSelected.position === index\r\n                          ? {\r\n                              background: '#f6a61f',\r\n                              color: '#fff',\r\n                            }\r\n                          : answers[el.id] && {\r\n                              background: '#eceff0',\r\n                              border: '1px solid #ccc',\r\n                            }\r\n                      }\r\n                      onClick={handleClickQuestion(index)}\r\n                    >\r\n                      {index + 1}\r\n                    </Button>\r\n                  ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      {Prompt}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamTest;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    borderLeft: '10px solid #4991e2',\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    //borderTop: '1px solid #ccc',\r\n  },\r\n}));\r\n","export default {\r\n  UPCOMING: 0,\r\n  HAPPENING: 1,\r\n  ENDED: 2,\r\n};\r\n","/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-useless-return */\r\n/* eslint-disable consistent-return */\r\n// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography, Box, TextField, Button } from '@material-ui/core';\r\n/* import {\r\n  Description as DescriptionIcon,\r\n  HourglassEmpty as HourglassEmptyIcon,\r\n} from '@material-ui/icons'; */\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport constants from '../../../constants';\r\nimport errorCodes from '../../../constants/errorCodes';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\n\r\nconst PrepareExam = ({ examId }) => {\r\n  const classes = useStyles();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const history = useHistory();\r\n  const [contest, setContest] = useState();\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const handleRedirectToExamTest = (contestToken) => {\r\n    history.push(`/contest/${examId}/exam/test?token=${contestToken}`);\r\n  };\r\n\r\n  const handleCheckPassword = async () => {\r\n    try {\r\n      const data = await apis.contest.verifyPassword({ id: examId, password });\r\n      if (data.status) {\r\n        const { contestToken } = data.result;\r\n        handleRedirectToExamTest(contestToken);\r\n      } else {\r\n        enqueueSnackbar(data.message || 'Check password failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar('Check password failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchContest = async () => {\r\n    const data = await apis.contest.getContest(examId);\r\n    if (data && data.status) {\r\n      const { contest: contestData } = data.result;\r\n      setContest(contestData);\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContest();\r\n  }, []);\r\n\r\n  const renderUpcomingStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Sắp diễn ra\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderHappeningStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Box display=\"flex\" mt={2}>\r\n          {contest.isLock && (\r\n            <TextField\r\n              size=\"small\"\r\n              id=\"outlined-basic\"\r\n              label=\"Nhập code\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          )}\r\n\r\n          <Button\r\n            style={{ marginLeft: 3 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              contest.isLock\r\n                ? handleCheckPassword()\r\n                : handleRedirectToExamTest();\r\n            }}\r\n          >\r\n            Thi\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderEndedStatus = () => {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Đã kết thúc\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  };\r\n  const renderByStatus = () => {\r\n    if (contest) {\r\n      if (contest.status === constants.UPCOMING) return renderUpcomingStatus();\r\n      if (contest.status === constants.HAPPENING)\r\n        return renderHappeningStatus();\r\n      if (contest.status === constants.ENDED) return renderEndedStatus();\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.paper}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Tên: {contest && contest.title}\r\n        </Typography>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Mô tả: {(contest && contest.description) || ''}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Thời gian: {contest && contest.examTime}(m)\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            <p>\r\n              <strong class=\"\">Nội quy</strong>\r\n            </p>\r\n            <span>\r\n              - Không nhờ người khác thi hộ. <br />- Không sao chép câu trả lời\r\n              từ tài liệu trên internet.\r\n              <p>\r\n                <strong class=\"text-danger\" style={{ color: '#dc3545' }}>\r\n                  - Không thoát khỏi màn hình làm bài thi. Nếu bạn thoát khỏi\r\n                  màn hình bài thi, hệ thống tự động nộp bài và ghi nhận kết quả\r\n                  trước đó\r\n                </strong>\r\n              </p>\r\n            </span>\r\n          </Typography>\r\n        </Box>\r\n\r\n        {renderByStatus()}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrepareExam;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  actionBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    '&:hover': {\r\n      backgroundColor: '#eee',\r\n    },\r\n    cursor: 'pointer',\r\n  },\r\n  active: {\r\n    background: '#f6a61f',\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  Paper,\r\n  TableBody,\r\n  Avatar,\r\n  TablePagination,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Highcharts from 'highcharts';\r\nimport useStyles from './index.style';\r\nimport apis from '../../../apis';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\nimport { renderClockTime } from '../../../utils/date';\r\n\r\nconst ExamDetail = ({ examId, role, resultId }) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [numberOfQuestion, setNumberOfQuestion] = useState(0);\r\n  const [pagination, setPagination] = useState({\r\n    count: 100,\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  const renderArrayFromNumberQuestion = () => {\r\n    const arr = [];\r\n\r\n    if (results.length > 0) {\r\n      const firstEle = results[0];\r\n      // eslint-disable-next-line operator-assignment\r\n      for (let i = 0; i <= firstEle.amountQuestion; i = i + 1) arr.push(0);\r\n    }\r\n    console.log(arr);\r\n    return [...arr];\r\n  };\r\n\r\n  const renderDataChart = () => {\r\n    const arr = renderArrayFromNumberQuestion(numberOfQuestion);\r\n    results.forEach((el) => {\r\n      // eslint-disable-next-line no-plusplus\r\n      arr[el.amountCorrectQuestion]++;\r\n    });\r\n    console.log({ arr });\r\n    return arr;\r\n  };\r\n\r\n  const highChartsRender = () => {\r\n    Highcharts.chart({\r\n      chart: {\r\n        type: ['column'],\r\n        renderTo: 'graph-summary-contest',\r\n      },\r\n      title: {\r\n        text: 'Thống kê kết quả',\r\n      },\r\n      xAxis: {\r\n        title: {\r\n          text: 'Số câu đúng',\r\n        },\r\n        categories: renderArrayFromNumberQuestion().map((el, index) => index),\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: 'Số người',\r\n        },\r\n      },\r\n      legend: {\r\n        layout: 'horizontal',\r\n        align: 'center',\r\n        verticalAlign: 'top',\r\n        borderWidth: 0,\r\n        itemDistance: 30,\r\n        margin: 5,\r\n        display: 'none',\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Số người',\r\n          data: renderDataChart(),\r\n          color: '#f6a61f',\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const fetchResults = async () => {\r\n    const data = await apis.contest.getResultByContest(examId);\r\n    if (data && data.status) {\r\n      const { result } = data;\r\n\r\n      const resultIndex = result.data.findIndex((el) => el.id === resultId);\r\n      let page = 0;\r\n      if (resultIndex >= 0) {\r\n        page = Math.floor(resultIndex / pagination.rowsPerPage);\r\n      }\r\n      setResults(result.data);\r\n      setPagination({\r\n        ...pagination,\r\n        count: result.data.length,\r\n        page,\r\n      });\r\n      setIsLoading(false);\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      highChartsRender();\r\n    }\r\n  }, [isLoading]);\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">No.</TableCell>\r\n                <TableCell>Tên</TableCell>\r\n                <TableCell align=\"center\">Số câu đúng</TableCell>\r\n                <TableCell align=\"center\">Thời gian(m)</TableCell>\r\n                <TableCell align=\"center\">Ngày</TableCell>\r\n                {role && <TableCell />}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {results\r\n                .slice(\r\n                  pagination.page * pagination.rowsPerPage,\r\n                  pagination.page * pagination.rowsPerPage +\r\n                    pagination.rowsPerPage,\r\n                )\r\n                .map((row, index) => (\r\n                  <TableRow\r\n                    key={row.id}\r\n                    className={classes.row}\r\n                    classes={{\r\n                      root: row.id === resultId && classes.active,\r\n                    }}\r\n                  >\r\n                    <TableCell align=\"center\">\r\n                      {pagination.page * pagination.rowsPerPage + index + 1}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                        <Avatar\r\n                          alt=\"avatar\"\r\n                          src={row.participant.avatar}\r\n                          style={{\r\n                            height: '25px',\r\n                            width: '25px',\r\n                            marginRight: '3px',\r\n                          }}\r\n                        />\r\n                        {row.participant.name}\r\n                      </Box>\r\n                      <Box>{row.participant.email}</Box>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.amountCorrectQuestion}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {renderClockTime(row.doTime)}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {moment(row.createdAt).format('LLL')}\r\n                    </TableCell>\r\n                    {role && (\r\n                      <TableCell align=\"center\">\r\n                        <Button variant=\"outlined\" color=\"primary\">\r\n                          Chi tiết\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n          {results.length <= 0 && (\r\n            <Typography\r\n              style={{\r\n                width: '100%',\r\n                padding: 10,\r\n                textAlign: 'center',\r\n                color: '#ccc',\r\n              }}\r\n            >\r\n              Không có dữ liệu\r\n            </Typography>\r\n          )}\r\n        </TableContainer>\r\n        {results.length > pagination.rowsPerPage && (\r\n          <TablePagination\r\n            component=\"div\"\r\n            rowsPerPageOptions={[pagination.rowsPerPage]}\r\n            count={pagination.count}\r\n            page={pagination.page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={pagination.rowsPerPage}\r\n          />\r\n        )}\r\n      </Box>\r\n      <Box mt={2}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Biều đồ\r\n        </Typography>\r\n        <div id=\"graph-summary-contest\" />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default ExamDetail;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({}));\r\n","// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport moment from 'moment';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  Typography,\r\n  TablePagination,\r\n} from '@material-ui/core';\r\nimport apis from '../../../apis';\r\nimport useStyles from './index.style';\r\nimport { renderClockTime } from '../../../utils/date';\r\n\r\nconst ExamHistory = ({ examId }) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [results, setResults] = useState([]);\r\n\r\n  const [pagination, setPagination] = useState({\r\n    count: 100,\r\n    page: 0,\r\n    rowsPerPage: 6,\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  const fetchResultsByUser = async () => {\r\n    const data = await apis.contest.getResultByUserInContest(examId);\r\n    if (data && data.status) {\r\n      setResults(data.result.data);\r\n      setPagination({\r\n        ...pagination,\r\n        count: data.result.data.length,\r\n      });\r\n    } else {\r\n      enqueueSnackbar((data && data.message) || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchResultsByUser();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Lần</TableCell>\r\n              <TableCell align=\"center\">Số câu đúng </TableCell>\r\n              <TableCell align=\"center\">Thời gian(m)</TableCell>\r\n              <TableCell align=\"center\">Ngày</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {results\r\n              .slice(\r\n                pagination.page * pagination.rowsPerPage,\r\n                pagination.page * pagination.rowsPerPage +\r\n                  pagination.rowsPerPage,\r\n              )\r\n              .map((row, index) => (\r\n                <TableRow key={row.id} className={classes.row}>\r\n                  <TableCell align=\"center\">{index + 1}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.amountCorrectQuestion}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {renderClockTime(row.doTime)}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {moment(row.createdAt).format('L')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n        {results.length <= 0 && (\r\n          <Typography\r\n            style={{\r\n              width: '100%',\r\n              padding: 10,\r\n              textAlign: 'center',\r\n              color: '#ccc',\r\n            }}\r\n          >\r\n            Không có dữ liệu\r\n          </Typography>\r\n        )}\r\n      </TableContainer>\r\n      {results.length > pagination.rowsPerPage && (\r\n        <TablePagination\r\n          component=\"div\"\r\n          rowsPerPageOptions={[pagination.rowsPerPage]}\r\n          count={pagination.count}\r\n          page={pagination.page}\r\n          onChangePage={handleChangePage}\r\n          rowsPerPage={pagination.rowsPerPage}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ExamHistory;\r\n","// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Box, Typography, Paper, Grid, Divider } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport ExamInformation from './ExamInformation';\r\nimport ExamRank from './ExamRank';\r\nimport ExamHistory from './ExamHistory';\r\nimport apis from '../../apis';\r\nimport PrepareExam from './ExamInformation';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst ExamDetail = () => {\r\n  const classes = useStyles();\r\n  const userInfo = useSelector((state) => state.auth.user);\r\n  const { id } = useParams();\r\n  const query = useQuery();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [role, setRole] = useState();\r\n\r\n  const fetchAccRoleInContest = async () => {\r\n    const data = await apis.contest.checkAccountRole({\r\n      contestId: id,\r\n      userId: userInfo.id,\r\n    });\r\n    if (data && data.status) {\r\n      setRole(data.result.role);\r\n    } else if (data && data.code !== 404) {\r\n      enqueueSnackbar(data.status || 'Fetch data failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAccRoleInContest();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <PrepareExam examId={id} /> */}\r\n      <Grid container spacing={3}>\r\n        {role && (\r\n          <>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <Box>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Thông tin bài thi\r\n                  </Typography>\r\n                  <Divider style={{ marginBottom: 20 }} />\r\n                  <ExamInformation examId={id} />\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper\r\n                className={classes.paper}\r\n                style={{ borderLeft: '10px solid #f16a73' }}\r\n              >\r\n                <Box style={{ minHeight: '230px' }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Lịch sử làm bài\r\n                  </Typography>\r\n                  <Divider style={{ marginBottom: 20 }} />\r\n                  <ExamHistory examId={id} />\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          </>\r\n        )}\r\n\r\n        <Grid item xs={12}>\r\n          <Paper\r\n            className={classes.paper}\r\n            style={{ borderLeft: '10px solid #48bb78' }}\r\n          >\r\n            <Box>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Bảng xếp hạng\r\n              </Typography>\r\n              <Divider style={{ marginBottom: 20 }} />\r\n              <ExamRank\r\n                examId={id}\r\n                role={role}\r\n                resultId={query.get('resultId')}\r\n              />\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default ExamDetail;\r\n","import Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Home from '../pages/Home';\r\nimport User from '../pages/User';\r\nimport Contest from '../pages/Contest';\r\nimport GroupQuestion from '../pages/GroupQuestion';\r\nimport Question from '../pages/Question';\r\nimport ExamTest from '../pages/ExamTest';\r\nimport ExamDetail from '../pages/ExamDetail';\r\nimport routes from '../constants/route';\r\n\r\nexport default [\r\n  {\r\n    path: routes.LOGIN,\r\n    component: Login,\r\n    exact: true,\r\n    restricted: true,\r\n    isPrivate: false,\r\n  },\r\n  {\r\n    path: routes.REGISTER,\r\n    component: Register,\r\n    exact: true,\r\n    restricted: true,\r\n    isPrivate: false,\r\n  },\r\n  {\r\n    path: routes.HOME,\r\n    component: Home,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.USER,\r\n    component: User,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.CONTEST,\r\n    component: Contest,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.GROUP_QUESTIONS,\r\n    component: GroupQuestion,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.QUESTION,\r\n    component: Question,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.EXAM_TEST,\r\n    component: ExamTest,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    path: routes.EXAM_DETAIL,\r\n    component: ExamDetail,\r\n    exact: true,\r\n    restricted: false,\r\n    isPrivate: true,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport LoginContainer from '../containers/Login';\r\n\r\nexport default function Login() {\r\n  return <LoginContainer />;\r\n}\r\n","import React from 'react';\r\nimport RegisterContainer from '../containers/Register';\r\n\r\nexport default function Register() {\r\n  return <RegisterContainer />;\r\n}\r\n","import React from 'react';\r\nimport HomeContainer from '../containers/Home';\r\n\r\nexport default function Home() {\r\n  return <HomeContainer />;\r\n}\r\n","import React from 'react';\r\nimport UserContainer from '../containers/User';\r\n\r\nexport default function User() {\r\n  return <UserContainer />;\r\n}\r\n","import React from 'react';\r\nimport ContestContainer from '../containers/Contest';\r\n\r\nexport default function Contest() {\r\n  return <ContestContainer />;\r\n}\r\n","import React from 'react';\r\nimport GroupQuestionContainer from '../containers/GroupQuestion';\r\n\r\nexport default function GroupQuestion() {\r\n  return <GroupQuestionContainer />;\r\n}\r\n","import React from 'react';\r\nimport QuestionContainer from '../containers/Question';\r\n\r\nexport default function Question() {\r\n  return <QuestionContainer />;\r\n}\r\n","import React from 'react';\r\nimport ExamTestContainer from '../containers/ExamTest';\r\n\r\nexport default function Exam() {\r\n  return <ExamTestContainer />;\r\n}\r\n","import React from 'react';\r\nimport ExamDetailContainer from '../containers/ExamDetail';\r\n\r\nexport default function ExamDetail() {\r\n  return <ExamDetailContainer />;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { getCookie } from '../utils/cookie';\r\nimport routes from '../constants/route';\r\nimport appRoutes from './appRoutes';\r\nimport actions from '../redux/actions';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const { accessToken, verifying } = useSelector((state) => state.auth);\r\n  //console.log({ verifying });\r\n  const [isFirstTime, setIsFirstTime] = useState(true);\r\n  useEffect(() => {\r\n    if (!accessToken) {\r\n      const accessTokenFromCookie = getCookie('accessToken');\r\n      if (accessTokenFromCookie) {\r\n        dispatch(actions.auth.verifyToken(accessTokenFromCookie));\r\n      }\r\n    }\r\n    setIsFirstTime(false);\r\n  }, []);\r\n  //console.log({ isFirstTime });\r\n  if (isFirstTime || verifying) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        {appRoutes.map(\r\n          ({\r\n            path,\r\n            exact = true,\r\n            component: Component,\r\n            isPrivate = false,\r\n            ...rest\r\n          }) => {\r\n            if (!isPrivate) {\r\n              return (\r\n                <PublicRoute\r\n                  key={path}\r\n                  exact={exact}\r\n                  path={path}\r\n                  Component={Component}\r\n                  {...rest}\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <PrivateRoute\r\n                key={path}\r\n                exact={exact}\r\n                path={path}\r\n                Component={Component}\r\n                {...rest}\r\n              />\r\n            );\r\n          },\r\n        )}\r\n        <Redirect to={routes.HOME} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import { actionTypes } from './actions';\r\n\r\nexport const initialState = {\r\n  accessToken: null,\r\n  isLoggingIn: false,\r\n  verifying: false,\r\n  loginCode: null,\r\n  status: null,\r\n  message: null,\r\n  user: null,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN:\r\n      return { ...state, isLoggingIn: true };\r\n\r\n    case actionTypes.LOGIN_SUCCESS: {\r\n      const { accessToken, user } = action;\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        status: 1,\r\n        accessToken,\r\n        user,\r\n      };\r\n    }\r\n\r\n    case actionTypes.LOGIN_FAILURE: {\r\n      const { code, message } = action;\r\n      return {\r\n        ...state,\r\n        loginCode: code,\r\n        message,\r\n        status: 0,\r\n        isLoggingIn: false,\r\n      };\r\n    }\r\n\r\n    case actionTypes.VERIFY_TOKEN:\r\n      return { ...state, verifying: true };\r\n\r\n    case actionTypes.VERIFY_TOKEN_SUCCESS: {\r\n      const { accessToken, user } = action;\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        accessToken,\r\n        user,\r\n        status: 1,\r\n      };\r\n    }\r\n\r\n    case actionTypes.VERIFY_TOKEN_FAILURE:\r\n      return {\r\n        ...state,\r\n        verifying: false,\r\n        status: 0,\r\n        user: null,\r\n        accessToken: null,\r\n      };\r\n\r\n    case actionTypes.LOGOUT:\r\n      return { ...state, status: 0, accessToken: null, user: null };\r\n\r\n    case actionTypes.UPDATE_USER: {\r\n      const { user } = action;\r\n      return { ...state, user };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth, { initialState as authInitialState } from './auth/reducer';\r\n\r\nexport const initialState = {\r\n  auth: authInitialState,\r\n};\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","/* eslint-disable no-case-declarations */\r\nimport { put, all, takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport apis from '../../apis';\r\nimport actions from '../actions';\r\nimport { setCookie } from '../../utils/cookie';\r\nimport loginType from '../../constants/loginType';\r\n\r\nfunction* loginSaga(data) {\r\n  try {\r\n    const A_WEEK = 7 * 24 * 60 * 60 * 1000;\r\n    let res = null;\r\n    switch (data && data.loginType) {\r\n      case loginType.LOGIN_GOOGLE:\r\n        const { tokenId } = data;\r\n        res = yield apis.auth.loginByGoogle(tokenId);\r\n        break;\r\n      case loginType.LOGIN_FACEBOOK:\r\n        const { accessToken, userID } = data;\r\n        res = yield apis.auth.loginByFacebook({ accessToken, userID });\r\n        break;\r\n      default:\r\n        const { email, password } = data;\r\n        res = yield apis.auth.login(email, password);\r\n    }\r\n\r\n    if (res.status) {\r\n      const { accessToken, user } = res.result;\r\n      setCookie('accessToken', accessToken, A_WEEK);\r\n      yield put(actions.auth.loginSuccess(accessToken, user));\r\n    } else {\r\n      const { code, message } = res;\r\n      yield put(actions.auth.loginFailure(code, message));\r\n    }\r\n  } catch (error) {\r\n    yield put(actions.auth.loginFailure());\r\n  }\r\n}\r\n\r\nfunction* verifyTokenSaga({ accessToken }) {\r\n  try {\r\n    const data = yield apis.auth.verify(accessToken);\r\n    if (!data.status) throw new Error();\r\n    const { user } = data.result;\r\n    if (user) {\r\n      yield put(actions.auth.verifyTokenSuccess(accessToken, user));\r\n    } else {\r\n      yield put(actions.auth.verifyTokenFailure());\r\n    }\r\n  } catch (error) {\r\n    yield put(actions.auth.verifyTokenFailure());\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    takeLatest(actions.auth.actionTypes.LOGIN, loginSaga),\r\n    takeEvery(actions.auth.actionTypes.VERIFY_TOKEN, verifyTokenSaga),\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport authSagas from './auth/sagas';\r\n\r\nfunction* rootSaga() {\r\n  yield all([authSagas()]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer, { initialState } from './reducer';\r\nimport rootSaga from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension'); // eslint-disable-line import/no-extraneous-dependencies, global-require\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(preloadedState = initialState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    bindMiddleware([sagaMiddleware]),\r\n  );\r\n\r\n  store.runSagaTask = () => {\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  };\r\n\r\n  store.runSagaTask();\r\n  return store;\r\n}\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Highcharts from 'highcharts';\r\nimport './index.css';\r\nimport { SnackbarProvider } from 'notistack';\r\n// import MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './languages';\r\nimport Router from './router';\r\nimport store from './redux/store';\r\n\r\nwindow.Highcharts = Highcharts;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <Provider store={store()}>\r\n        <SnackbarProvider>\r\n          <Router />\r\n        </SnackbarProvider>\r\n      </Provider>\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}